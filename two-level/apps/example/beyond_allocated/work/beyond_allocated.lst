 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 238
    4                      ; Text size: 4404
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  6265796f	.ascii "beyond_allocated (%d): Start!\n\000"
   82  00003004  6e645f61	
   82  00003008  6c6c6f63	
   82  0000300c  61746564	
   82  00003010  20282564	
   82  00003014  293a2053	
   82  00003018  74617274	
   82  0000301c  210a00  	
   83  0000301f          	.align 2
   84  00003020          	LC1_LF0:
   85  00003020  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   85  00003024  653a2025	
   85  00003028  73203c68	
   85  0000302c  616e646c	
   85  00003030  655f746f	
   85  00003034  5f70726f	
   85  00003038  63735f63	
   85  0000303c  6f6d706c	
   85  00003040  65746564	
   85  00003044  5f73656d	
   85  00003048  6170686f	
   85  0000304c  72653e0a	
   85  00003050  00      	
   86  00003051          	.align 2
   87  00003054          	LC2_LF0:
   88  00003054  6265796f	.ascii "beyond_allocated (%d): Value at unallocated address: %d\n\000"
   88  00003058  6e645f61	
   88  0000305c  6c6c6f63	
   88  00003060  61746564	
   88  00003064  20282564	
   88  00003068  293a2056	
   88  0000306c  616c7565	
   88  00003070  20617420	
   88  00003074  756e616c	
   88  00003078  6c6f6361	
   88  0000307c  74656420	
   88  00003080  61646472	
   88  00003084  6573733a	
   88  00003088  2025640a	
   88  0000308c  00      	
   89  0000308d          	.align 2
   90  00003090          	LC3_LF0:
   91  00003090  6265796f	.ascii "beyond_allocated (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  00003094  6e645f61	
   91  00003098  6c6c6f63	
   91  0000309c  61746564	
   91  000030a0  20282564	
   91  000030a4  293a2042	
   91  000030a8  61642073	
   91  000030ac  656d6170	
   91  000030b0  686f7265	
   91  000030b4  20735f70	
   91  000030b8  726f6373	
   91  000030bc  5f636f6d	
   91  000030c0  706c6574	
   91  000030c4  65642028	
   91  000030c8  25642921	
   91  000030cc  0a00    	
   92  000030ce          	.align 2
   93  000030d0          	LC4_LF0:
   94  000030d0  6265796f	.ascii "beyond_allocated (%d): Done!\n\000"
   94  000030d4  6e645f61	
   94  000030d8  6c6c6f63	
   94  000030dc  61746564	
   94  000030e0  20282564	
   94  000030e4  293a2044	
   94  000030e8  6f6e6521	
   94  000030ec  0a00    	
   95  000030ee          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc30004	lw	r3,4(r30)
  107  000010ec  0c00103c	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  3c040030	lhi	r4,#48
  110  000010f8  24840000	addui	r4,r4,#0
  111  000010fc  0c000178	jal	_getpid
  112  00001100  54000000	nop; not filled.
  113  00001104  23bdfff8	addi	r29,r29,#-8
  114  00001108  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  115  0000110c  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  116  00001110  afa50000	sw	(r29),r5
  117  00001114  afa10004	sw	4(r29),r1
  118  00001118  0c000150	jal	_Printf
  119  0000111c  54000000	nop; not filled.
  120  00001120  23bd0008	addi	r29,r29,#8
  121  00001124  64410002	snei	r1,r2,#2
  122  00001128  10200028	beqz	r1,L17_LF0
  123  0000112c  54000000	nop; not filled.
  124  00001130  23bdfff8	addi	r29,r29,#-8
  125  00001134  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  126  00001138  24a53020	addui	r5,r5,(LC1_LF0)&0xffff
  127  0000113c  afa50000	sw	(r29),r5
  128  00001140  0c000128	jal	_Printf
  129  00001144  54000000	nop; not filled.
  130  00001148  0c000228	jal	_Exit
  131  0000114c  54000000	nop; not filled.
  132  00001150  23bd0008	addi	r29,r29,#8
  133  00001154          	L17_LF0:
  134  00001154  23bdfff0	addi	r29,r29,#-16
  135  00001158  8c630004	lw	r3,4(r3)
  136  0000115c  afa30000	sw	(r29),r3
  137  00001160  20050000	addi	r5,r0,#0
  138  00001164  afa50004	sw	4(r29),r5
  139  00001168  2005000a	addi	r5,r0,#10
  140  0000116c  afa50008	sw	8(r29),r5
  141  00001170  0c000abc	jal	_dstrtol
  142  00001174  54000000	nop; not filled.
  143  00001178  00011020	add	r2,r0,r1
  144  0000117c  0c0000f8	jal	_getpid
  145  00001180  54000000	nop; not filled.
  146  00001184  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  147  00001188  24a53054	addui	r5,r5,(LC2_LF0)&0xffff
  148  0000118c  afa50000	sw	(r29),r5
  149  00001190  afa10004	sw	4(r29),r1
  150  00001194  8c840000	lw	r4,(r4)
  151  00001198  afa40008	sw	8(r29),r4
  152  0000119c  0c0000cc	jal	_Printf
  153  000011a0  54000000	nop; not filled.
  154  000011a4  afa20000	sw	(r29),r2
  155  000011a8  0c000114	jal	_sem_signal
  156  000011ac  54000000	nop; not filled.
  157  000011b0  23bd0010	addi	r29,r29,#16
  158  000011b4  64210001	snei	r1,r1,#1
  159  000011b8  10200038	beqz	r1,L18_LF0
  160  000011bc  54000000	nop; not filled.
  161  000011c0  0c0000b4	jal	_getpid
  162  000011c4  54000000	nop; not filled.
  163  000011c8  23bdfff0	addi	r29,r29,#-16
  164  000011cc  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  165  000011d0  24a53090	addui	r5,r5,(LC3_LF0)&0xffff
  166  000011d4  afa50000	sw	(r29),r5
  167  000011d8  afa10004	sw	4(r29),r1
  168  000011dc  afa20008	sw	8(r29),r2
  169  000011e0  0c000088	jal	_Printf
  170  000011e4  54000000	nop; not filled.
  171  000011e8  0c000188	jal	_Exit
  172  000011ec  54000000	nop; not filled.
  173  000011f0  23bd0010	addi	r29,r29,#16
  174  000011f4          	L18_LF0:
  175  000011f4  0c000080	jal	_getpid
  176  000011f8  54000000	nop; not filled.
  177  000011fc  23bdfff8	addi	r29,r29,#-8
  178  00001200  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  179  00001204  24a530d0	addui	r5,r5,(LC4_LF0)&0xffff
  180  00001208  afa50000	sw	(r29),r5
  181  0000120c  afa10004	sw	4(r29),r1
  182  00001210  0c000058	jal	_Printf
  183  00001214  54000000	nop; not filled.
  184  00001218  23bd0008	addi	r29,r29,#8
  185  0000121c  0c000f00	jal	_exit
  186  00001220  54000000	nop
  187  00001224          	.endproc _main
  188                      ;;;
  189                      ;;; Stub functions for DLX traps.
  190                      ;;;
  191                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  192                      ;;;
  193                      ;;; The traps such as Open and Close
  194                      ;;; (note the capital letters) are for use by user programs.  The traps
  195                      ;;; with names such as open and close (lower case) are for use by the OS.
  196                      ;;;
  199  00001224          	.align 2
  201                      ;;; The following are the traps to be used by user-level programs
  202                      ;;;
  204  00001224          	.align 2
  205  00001224          	.proc _Open
  206  00001224          	.global _Open
  207  00001224          	_Open:
  208                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  209                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  210                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  211  00001224  44000213	trap	#0x213
  212  00001228  4be00000	jr	r31
  213  0000122c  54000000	nop
  214  00001230          	.endproc _Open
  216  00001230          	.proc _Close
  217  00001230          	.global _Close
  218  00001230          	_Close:
  219  00001230  44000214	trap	#0x214
  220  00001234  4be00000	jr	r31
  221  00001238  54000000	nop
  222  0000123c          	.endproc _Close
  224  0000123c          	.proc _Read
  225  0000123c          	.global _Read
  226  0000123c          	_Read:
  227  0000123c  44000210	trap	#0x210
  228  00001240  4be00000	jr	r31
  229  00001244  54000000	nop
  230  00001248          	.endproc _Read
  232  00001248          	.proc _Write
  233  00001248          	.global _Write
  234  00001248          	_Write:
  235  00001248  44000211	trap	#0x211
  236  0000124c  4be00000	jr	r31
  237  00001250  54000000	nop
  238  00001254          	.endproc _Write
  240  00001254          	.proc _Lseek
  241  00001254          	.global _Lseek
  242  00001254          	_Lseek:
  243  00001254  44000212	trap	#0x212
  244  00001258  4be00000	jr	r31
  245  0000125c  54000000	nop
  246  00001260          	.endproc _Lseek
  248  00001260          	.proc _Putchar
  249  00001260          	.global _Putchar
  250  00001260          	_Putchar:
  251  00001260  44000280	trap	#0x280
  252  00001264  4be00000	jr	r31
  253  00001268  54000000	nop
  254  0000126c          	.endproc _Putchar
  256  0000126c          	.proc _Printf
  257  0000126c          	.global _Printf
  258  0000126c          	_Printf:
  259  0000126c  44000201	trap	#0x201
  260  00001270  4be00000	jr	r31
  261  00001274  54000000	nop
  262  00001278          	.endproc _Printf
  264  00001278          	.proc _getpid
  265  00001278          	.global _getpid
  266  00001278          	_getpid:
  267  00001278  44000431	trap	#0x431
  268  0000127c  4be00000	jr	r31
  269  00001280  54000000	nop
  270  00001284          	.endproc _getpid
  272  00001284          	.proc _process_create
  273  00001284          	.global _process_create
  274  00001284          	_process_create:
  275  00001284  44000432	trap	#0x432
  276  00001288  4be00000	jr	r31
  277  0000128c  54000000	nop
  278  00001290          	.endproc _process_create
  280  00001290          	.proc _shmget
  281  00001290          	.global _shmget
  282  00001290          	_shmget:
  283  00001290  44000440	trap	#0x440
  284  00001294  4be00000	jr	r31
  285  00001298  54000000	nop
  286  0000129c          	.endproc _shmget
  288  0000129c          	.proc _shmat
  289  0000129c          	.global _shmat
  290  0000129c          	_shmat:
  291  0000129c  44000441	trap	#0x441
  292  000012a0  4be00000	jr	r31
  293  000012a4  54000000	nop
  294  000012a8          	.endproc _shmat
  296  000012a8          	.proc _sem_create
  297  000012a8          	.global _sem_create
  298  000012a8          	_sem_create:
  299  000012a8  44000450	trap	#0x450
  300  000012ac  4be00000	jr	r31
  301  000012b0  54000000	nop
  302  000012b4          	.endproc _sem_create
  304  000012b4          	.proc _sem_wait
  305  000012b4          	.global _sem_wait
  306  000012b4          	_sem_wait:
  307  000012b4  44000451	trap	#0x451
  308  000012b8  4be00000	jr	r31
  309  000012bc  54000000	nop
  310  000012c0          	.endproc _sem_wait
  312  000012c0          	.proc _sem_signal
  313  000012c0          	.global _sem_signal
  314  000012c0          	_sem_signal:
  315  000012c0  44000452	trap	#0x452
  316  000012c4  4be00000	jr	r31
  317  000012c8  54000000	nop
  318  000012cc          	.endproc _sem_signal
  320  000012cc          	.proc _lock_create
  321  000012cc          	.global _lock_create
  322  000012cc          	_lock_create:
  323  000012cc  44000453	trap	#0x453
  324  000012d0  4be00000	jr	r31
  325  000012d4  54000000	nop
  326  000012d8          	.endproc _lock_create
  328  000012d8          	.proc _lock_acquire
  329  000012d8          	.global _lock_acquire
  330  000012d8          	_lock_acquire:
  331  000012d8  44000454	trap	#0x454
  332  000012dc  4be00000	jr	r31
  333  000012e0  54000000	nop
  334  000012e4          	.endproc _lock_acquire
  336  000012e4          	.proc _lock_release
  337  000012e4          	.global _lock_release
  338  000012e4          	_lock_release:
  339  000012e4  44000455	trap	#0x455
  340  000012e8  4be00000	jr	r31
  341  000012ec  54000000	nop
  342  000012f0          	.endproc _lock_release
  344  000012f0          	.proc _cond_create
  345  000012f0          	.global _cond_create
  346  000012f0          	_cond_create:
  347  000012f0  44000456	trap	#0x456
  348  000012f4  4be00000	jr	r31
  349  000012f8  54000000	nop
  350  000012fc          	.endproc _cond_create
  352  000012fc          	.proc _cond_wait
  353  000012fc          	.global _cond_wait
  354  000012fc          	_cond_wait:
  355  000012fc  44000457	trap	#0x457
  356  00001300  4be00000	jr	r31
  357  00001304  54000000	nop
  358  00001308          	.endproc _cond_wait
  360  00001308          	.proc _cond_signal
  361  00001308          	.global _cond_signal
  362  00001308          	_cond_signal:
  363  00001308  44000458	trap	#0x458
  364  0000130c  4be00000	jr	r31
  365  00001310  54000000	nop
  366  00001314          	.endproc _cond_signal
  368  00001314          	.proc _cond_broadcast
  369  00001314          	.global _cond_broadcast
  370  00001314          	_cond_broadcast:
  371  00001314  44000459	trap	#0x459
  372  00001318  4be00000	jr	r31
  373  0000131c  54000000	nop
  374  00001320          	.endproc _cond_broadcast
  376  00001320          	.proc _mbox_create
  377  00001320          	.global _mbox_create
  378  00001320          	_mbox_create:
  379  00001320  44000460	trap	#0x460
  380  00001324  4be00000	jr	r31
  381  00001328  54000000	nop
  382  0000132c          	.endproc _mbox_create
  384  0000132c          	.proc _mbox_open
  385  0000132c          	.global _mbox_open
  386  0000132c          	_mbox_open:
  387  0000132c  44000461	trap	#0x461
  388  00001330  4be00000	jr	r31
  389  00001334  54000000	nop
  390  00001338          	.endproc _mbox_open
  392  00001338          	.proc _mbox_close
  393  00001338          	.global _mbox_close
  394  00001338          	_mbox_close:
  395  00001338  44000462	trap	#0x462
  396  0000133c  4be00000	jr	r31
  397  00001340  54000000	nop
  398  00001344          	.endproc _mbox_close
  400  00001344          	.proc _mbox_send
  401  00001344          	.global _mbox_send
  402  00001344          	_mbox_send:
  403  00001344  44000463	trap	#0x463
  404  00001348  4be00000	jr	r31
  405  0000134c  54000000	nop
  406  00001350          	.endproc _mbox_send
  408  00001350          	.proc _mbox_recv
  409  00001350          	.global _mbox_recv
  410  00001350          	_mbox_recv:
  411  00001350  44000464	trap	#0x464
  412  00001354  4be00000	jr	r31
  413  00001358  54000000	nop
  414  0000135c          	.endproc _mbox_recv
  416  0000135c          	.proc _sleep
  417  0000135c          	.global _sleep
  418  0000135c          	_sleep:
  419  0000135c  44000465	trap	#0x465
  420  00001360  4be00000	jr	r31
  421  00001364  54000000	nop
  422  00001368          	.endproc _sleep
  424  00001368          	.proc _yield
  425  00001368          	.global _yield
  426  00001368          	_yield:
  427  00001368  44000466	trap	#0x466
  428  0000136c  4be00000	jr	r31
  429  00001370  54000000	nop
  430  00001374          	.endproc _yield
  433  00001374          	.proc _Exit
  434  00001374          	.global _Exit
  435  00001374          	_Exit:
  436  00001374  44000500	trap	#0x500
  437  00001378  4be00000	jr	r31
  438  0000137c  54000000	nop
  439  00001380          	.endproc _Exit
  442  00001380          	.proc _malloc
  443  00001380          	.global _malloc
  444  00001380          	_malloc:
  445  00001380  44000467	trap	#0x467
  446  00001384  4be00000	jr	r31
  447  00001388          	.endproc _malloc
  450  00001388          	.proc _mfree
  451  00001388          	.global _mfree
  452  00001388          	_mfree:
  453  00001388  44000468	trap	#0x468
  454  0000138c  4be00000	jr	r31
  455  00001390          	.endproc _mfree
  456                      ; Compiled by GCC
  458  00001390          	.align 2
  459  00001390          	.proc _isspace
  460  00001390          	.global _isspace
  461  00001390          	_isspace:
  462                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  463  00001390  afbefffc	sw	-4(r29),r30; push fp
  464  00001394  001df020	add	r30,r0,r29; fp = sp
  465  00001398  afbffff8	sw	-8(r29),r31; push ret addr
  466  0000139c  2fbd0018	subui	r29,r29,#24; alloc local storage
  467  000013a0  afa20000	sw	0(r29),r2
  468  000013a4  afa30004	sw	4(r29),r3
  469  000013a8  afa40008	sw	8(r29),r4
  470  000013ac  83c20003	lb	r2,3(r30)
  471  000013b0  20010000	addi	r1,r0,#0
  472  000013b4  304300ff	andi	r3,r2,#0x00ff
  473  000013b8  60640020	seqi	r4,r3,#32
  474  000013bc  1480002c	bnez	r4,L3_LF2
  475  000013c0  54000000	nop; delay slot nop
  476  000013c4  304300ff	andi	r3,r2,#0x00ff
  477  000013c8  60640009	seqi	r4,r3,#9
  478  000013cc  1480001c	bnez	r4,L3_LF2
  479  000013d0  54000000	nop; delay slot nop
  480  000013d4  304300ff	andi	r3,r2,#0x00ff
  481  000013d8  6064000a	seqi	r4,r3,#10
  482  000013dc  1480000c	bnez	r4,L3_LF2
  483  000013e0  54000000	nop; delay slot nop
  484  000013e4  08000008	j	L2_LF2
  485  000013e8  54000000	nop; delay slot nop
  486  000013ec          	L3_LF2:
  487  000013ec  20010001	addi	r1,r0,#1
  488  000013f0          	L2_LF2:
  489  000013f0  08000004	j	L1_LF2
  490  000013f4  54000000	nop; delay slot nop
  491  000013f8          	L1_LF2:
  492  000013f8  8fa20000	lw	r2,0(r29)
  493  000013fc  8fa30004	lw	r3,4(r29)
  494  00001400  8fa40008	lw	r4,8(r29)
  495  00001404  8fdffff8	lw	r31,-8(r30)
  496  00001408  001ee820	add	r29,r0,r30
  497  0000140c  8fdefffc	lw	r30,-4(r30)
  498  00001410  4be00000	jr	r31
  499  00001414  54000000	nop
  500  00001418          	.endproc _isspace
  501  00001418          	.align 2
  502  00001418          	.proc _isxdigit
  503  00001418          	.global _isxdigit
  504  00001418          	_isxdigit:
  505                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  506  00001418  afbefffc	sw	-4(r29),r30; push fp
  507  0000141c  001df020	add	r30,r0,r29; fp = sp
  508  00001420  afbffff8	sw	-8(r29),r31; push ret addr
  509  00001424  2fbd0018	subui	r29,r29,#24; alloc local storage
  510  00001428  afa20000	sw	0(r29),r2
  511  0000142c  afa30004	sw	4(r29),r3
  512  00001430  afa40008	sw	8(r29),r4
  513  00001434  83c20003	lb	r2,3(r30)
  514  00001438  20010000	addi	r1,r0,#0
  515  0000143c  304300ff	andi	r3,r2,#0x00ff
  516  00001440  6c64002f	sgtui	r4,r3,#47
  517  00001444  1080001c	beqz	r4,L7_LF2
  518  00001448  54000000	nop; delay slot nop
  519  0000144c  304300ff	andi	r3,r2,#0x00ff
  520  00001450  70640039	sleui	r4,r3,#57
  521  00001454  1480005c	bnez	r4,L6_LF2
  522  00001458  54000000	nop; delay slot nop
  523  0000145c  08000004	j	L7_LF2
  524  00001460  54000000	nop; delay slot nop
  525  00001464          	L7_LF2:
  526  00001464  304300ff	andi	r3,r2,#0x00ff
  527  00001468  6c640060	sgtui	r4,r3,#96
  528  0000146c  1080001c	beqz	r4,L8_LF2
  529  00001470  54000000	nop; delay slot nop
  530  00001474  304300ff	andi	r3,r2,#0x00ff
  531  00001478  70640066	sleui	r4,r3,#102
  532  0000147c  14800034	bnez	r4,L6_LF2
  533  00001480  54000000	nop; delay slot nop
  534  00001484  08000004	j	L8_LF2
  535  00001488  54000000	nop; delay slot nop
  536  0000148c          	L8_LF2:
  537  0000148c  304300ff	andi	r3,r2,#0x00ff
  538  00001490  6c640040	sgtui	r4,r3,#64
  539  00001494  10800020	beqz	r4,L5_LF2
  540  00001498  54000000	nop; delay slot nop
  541  0000149c  304300ff	andi	r3,r2,#0x00ff
  542  000014a0  70640041	sleui	r4,r3,#65
  543  000014a4  1480000c	bnez	r4,L6_LF2
  544  000014a8  54000000	nop; delay slot nop
  545  000014ac  08000008	j	L5_LF2
  546  000014b0  54000000	nop; delay slot nop
  547  000014b4          	L6_LF2:
  548  000014b4  20010001	addi	r1,r0,#1
  549  000014b8          	L5_LF2:
  550  000014b8  08000004	j	L4_LF2
  551  000014bc  54000000	nop; delay slot nop
  552  000014c0          	L4_LF2:
  553  000014c0  8fa20000	lw	r2,0(r29)
  554  000014c4  8fa30004	lw	r3,4(r29)
  555  000014c8  8fa40008	lw	r4,8(r29)
  556  000014cc  8fdffff8	lw	r31,-8(r30)
  557  000014d0  001ee820	add	r29,r0,r30
  558  000014d4  8fdefffc	lw	r30,-4(r30)
  559  000014d8  4be00000	jr	r31
  560  000014dc  54000000	nop
  561  000014e0          	.endproc _isxdigit
  562  000014e0          	.align 2
  563  000014e0          	.proc _dstrcpy
  564  000014e0          	.global _dstrcpy
  565  000014e0          	_dstrcpy:
  566                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  567  000014e0  afbefffc	sw	-4(r29),r30; push fp
  568  000014e4  001df020	add	r30,r0,r29; fp = sp
  569  000014e8  afbffff8	sw	-8(r29),r31; push ret addr
  570  000014ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  571  000014f0  afa20000	sw	0(r29),r2
  572  000014f4  afa30004	sw	4(r29),r3
  573  000014f8  8fc10000	lw	r1,(r30)
  574  000014fc  afc1fff4	sw	-12(r30),r1
  575  00001500          	L10_LF2:
  576  00001500  8fc10000	lw	r1,(r30)
  577  00001504  20220001	addi	r2,r1,#1
  578  00001508  afc20000	sw	(r30),r2
  579  0000150c  8fc20004	lw	r2,4(r30)
  580  00001510  20430001	addi	r3,r2,#1
  581  00001514  afc30004	sw	4(r30),r3
  582  00001518  80420000	lb	r2,(r2)
  583  0000151c  a0220000	sb	(r1),r2
  584  00001520  a3c2fff3	sb	-13(r30),r2
  585  00001524          	L12_LF2:
  586  00001524  93c1fff3	lbu	r1,-13(r30)
  587  00001528  64220000	snei	r2,r1,#0
  588  0000152c  1440000c	bnez	r2,L13_LF2
  589  00001530  54000000	nop; delay slot nop
  590  00001534  0800000c	j	L11_LF2
  591  00001538  54000000	nop; delay slot nop
  592  0000153c          	L13_LF2:
  593  0000153c  0bffffc0	j	L10_LF2
  594  00001540  54000000	nop; delay slot nop
  595  00001544          	L11_LF2:
  596  00001544  8fc1fff4	lw	r1,-12(r30)
  597  00001548  08000004	j	L9_LF2
  598  0000154c  54000000	nop; delay slot nop
  599  00001550          	L9_LF2:
  600  00001550  8fa20000	lw	r2,0(r29)
  601  00001554  8fa30004	lw	r3,4(r29)
  602  00001558  8fdffff8	lw	r31,-8(r30)
  603  0000155c  001ee820	add	r29,r0,r30
  604  00001560  8fdefffc	lw	r30,-4(r30)
  605  00001564  4be00000	jr	r31
  606  00001568  54000000	nop
  607  0000156c          	.endproc _dstrcpy
  608  0000156c          	.align 2
  609  0000156c          	.proc _dstrncpy
  610  0000156c          	.global _dstrncpy
  611  0000156c          	_dstrncpy:
  612                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  613  0000156c  afbefffc	sw	-4(r29),r30; push fp
  614  00001570  001df020	add	r30,r0,r29; fp = sp
  615  00001574  afbffff8	sw	-8(r29),r31; push ret addr
  616  00001578  2fbd0018	subui	r29,r29,#24; alloc local storage
  617  0000157c  afa20000	sw	0(r29),r2
  618  00001580  afa30004	sw	4(r29),r3
  619  00001584  8fc10000	lw	r1,(r30)
  620  00001588  afc1fff4	sw	-12(r30),r1
  621  0000158c          	L15_LF2:
  622  0000158c  8fc10008	lw	r1,8(r30)
  623  00001590  2022ffff	addi	r2,r1,#-1
  624  00001594  afc20008	sw	8(r30),r2
  625  00001598  70210000	slei	r1,r1,#0
  626  0000159c  1020000c	beqz	r1,L18_LF2
  627  000015a0  54000000	nop; delay slot nop
  628  000015a4  08000048	j	L16_LF2
  629  000015a8  54000000	nop; delay slot nop
  630  000015ac          	L18_LF2:
  631  000015ac  8fc10000	lw	r1,(r30)
  632  000015b0  20220001	addi	r2,r1,#1
  633  000015b4  afc20000	sw	(r30),r2
  634  000015b8  8fc20004	lw	r2,4(r30)
  635  000015bc  20430001	addi	r3,r2,#1
  636  000015c0  afc30004	sw	4(r30),r3
  637  000015c4  80420000	lb	r2,(r2)
  638  000015c8  a0220000	sb	(r1),r2
  639  000015cc  a3c2fff3	sb	-13(r30),r2
  640  000015d0          	L17_LF2:
  641  000015d0  93c1fff3	lbu	r1,-13(r30)
  642  000015d4  64220000	snei	r2,r1,#0
  643  000015d8  1440000c	bnez	r2,L19_LF2
  644  000015dc  54000000	nop; delay slot nop
  645  000015e0  0800000c	j	L16_LF2
  646  000015e4  54000000	nop; delay slot nop
  647  000015e8          	L19_LF2:
  648  000015e8  0bffffa0	j	L15_LF2
  649  000015ec  54000000	nop; delay slot nop
  650  000015f0          	L16_LF2:
  651  000015f0  8fc1fff4	lw	r1,-12(r30)
  652  000015f4  08000004	j	L14_LF2
  653  000015f8  54000000	nop; delay slot nop
  654  000015fc          	L14_LF2:
  655  000015fc  8fa20000	lw	r2,0(r29)
  656  00001600  8fa30004	lw	r3,4(r29)
  657  00001604  8fdffff8	lw	r31,-8(r30)
  658  00001608  001ee820	add	r29,r0,r30
  659  0000160c  8fdefffc	lw	r30,-4(r30)
  660  00001610  4be00000	jr	r31
  661  00001614  54000000	nop
  662  00001618          	.endproc _dstrncpy
  663  00001618          	.align 2
  664  00001618          	.proc _dstrcat
  665  00001618          	.global _dstrcat
  666  00001618          	_dstrcat:
  667                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  668  00001618  afbefffc	sw	-4(r29),r30; push fp
  669  0000161c  001df020	add	r30,r0,r29; fp = sp
  670  00001620  afbffff8	sw	-8(r29),r31; push ret addr
  671  00001624  2fbd0018	subui	r29,r29,#24; alloc local storage
  672  00001628  afa20000	sw	0(r29),r2
  673  0000162c  8fc10000	lw	r1,(r30)
  674  00001630  afc1fff4	sw	-12(r30),r1
  675  00001634          	L21_LF2:
  676  00001634  8fc10000	lw	r1,(r30)
  677  00001638  90220000	lbu	r2,(r1)
  678  0000163c  64410000	snei	r1,r2,#0
  679  00001640  1420000c	bnez	r1,L23_LF2
  680  00001644  54000000	nop; delay slot nop
  681  00001648  0800001c	j	L22_LF2
  682  0000164c  54000000	nop; delay slot nop
  683  00001650          	L23_LF2:
  684  00001650  8fc20000	lw	r2,(r30)
  685  00001654  20410001	addi	r1,r2,#1
  686  00001658  00011020	add	r2,r0,r1
  687  0000165c  afc20000	sw	(r30),r2
  688  00001660  0bffffd0	j	L21_LF2
  689  00001664  54000000	nop; delay slot nop
  690  00001668          	L22_LF2:
  691  00001668  23bdfff8	addi	r29,r29,#-8
  692  0000166c  001d0820	add	r1,r0,r29
  693  00001670  8fc20000	lw	r2,(r30)
  694  00001674  ac220000	sw	(r1),r2
  695  00001678  8fc20004	lw	r2,4(r30)
  696  0000167c  ac220004	sw	4(r1),r2
  697  00001680  0ffffe5c	jal	_dstrcpy
  698  00001684  54000000	nop; delay slot nop
  699  00001688  23bd0008	addi	r29,r29,#8
  700  0000168c  8fc1fff4	lw	r1,-12(r30)
  701  00001690  08000004	j	L20_LF2
  702  00001694  54000000	nop; delay slot nop
  703  00001698          	L20_LF2:
  704  00001698  8fa20000	lw	r2,0(r29)
  705  0000169c  8fdffff8	lw	r31,-8(r30)
  706  000016a0  001ee820	add	r29,r0,r30
  707  000016a4  8fdefffc	lw	r30,-4(r30)
  708  000016a8  4be00000	jr	r31
  709  000016ac  54000000	nop
  710  000016b0          	.endproc _dstrcat
  711  000016b0          	.align 2
  712  000016b0          	.proc _dstrncmp
  713  000016b0          	.global _dstrncmp
  714  000016b0          	_dstrncmp:
  715                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  716  000016b0  afbefffc	sw	-4(r29),r30; push fp
  717  000016b4  001df020	add	r30,r0,r29; fp = sp
  718  000016b8  afbffff8	sw	-8(r29),r31; push ret addr
  719  000016bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  720  000016c0  afa20000	sw	0(r29),r2
  721  000016c4  afa30004	sw	4(r29),r3
  722  000016c8  54000000	nop
  723  000016cc  20010000	addi	r1,r0,#0
  724  000016d0  afc1fff4	sw	-12(r30),r1
  725  000016d4          	L25_LF2:
  726  000016d4  8fc1fff4	lw	r1,-12(r30)
  727  000016d8  8fc20008	lw	r2,8(r30)
  728  000016dc  0022082a	slt	r1,r1,r2
  729  000016e0  1420000c	bnez	r1,L28_LF2
  730  000016e4  54000000	nop; delay slot nop
  731  000016e8  08000088	j	L26_LF2
  732  000016ec  54000000	nop; delay slot nop
  733  000016f0          	L28_LF2:
  734  000016f0  8fc10004	lw	r1,4(r30)
  735  000016f4  90220000	lbu	r2,(r1)
  736  000016f8  64410000	snei	r1,r2,#0
  737  000016fc  14200018	bnez	r1,L29_LF2
  738  00001700  54000000	nop; delay slot nop
  739  00001704  20010000	addi	r1,r0,#0
  740  00001708  080000d8	j	L24_LF2
  741  0000170c  54000000	nop; delay slot nop
  742  00001710  08000028	j	L30_LF2
  743  00001714  54000000	nop; delay slot nop
  744  00001718          	L29_LF2:
  745  00001718  8fc10000	lw	r1,(r30)
  746  0000171c  8fc20004	lw	r2,4(r30)
  747  00001720  90210000	lbu	r1,(r1)
  748  00001724  90420000	lbu	r2,(r2)
  749  00001728  00220829	sne	r1,r1,r2
  750  0000172c  1020000c	beqz	r1,L30_LF2
  751  00001730  54000000	nop; delay slot nop
  752  00001734  0800003c	j	L26_LF2
  753  00001738  54000000	nop; delay slot nop
  754  0000173c          	L31_LF2:
  755  0000173c          	L30_LF2:
  756  0000173c  8fc20000	lw	r2,(r30)
  757  00001740  20410001	addi	r1,r2,#1
  758  00001744  00011020	add	r2,r0,r1
  759  00001748  afc20000	sw	(r30),r2
  760  0000174c  8fc20004	lw	r2,4(r30)
  761  00001750  20410001	addi	r1,r2,#1
  762  00001754  00011020	add	r2,r0,r1
  763  00001758  afc20004	sw	4(r30),r2
  764  0000175c          	L27_LF2:
  765  0000175c  8fc2fff4	lw	r2,-12(r30)
  766  00001760  20410001	addi	r1,r2,#1
  767  00001764  00011020	add	r2,r0,r1
  768  00001768  afc2fff4	sw	-12(r30),r2
  769  0000176c  0bffff64	j	L25_LF2
  770  00001770  54000000	nop; delay slot nop
  771  00001774          	L26_LF2:
  772  00001774  8fc1fff4	lw	r1,-12(r30)
  773  00001778  8fc20008	lw	r2,8(r30)
  774  0000177c  00220828	seq	r1,r1,r2
  775  00001780  10200018	beqz	r1,L32_LF2
  776  00001784  54000000	nop; delay slot nop
  777  00001788  20010000	addi	r1,r0,#0
  778  0000178c  08000054	j	L24_LF2
  779  00001790  54000000	nop; delay slot nop
  780  00001794  0800004c	j	L33_LF2
  781  00001798  54000000	nop; delay slot nop
  782  0000179c          	L32_LF2:
  783  0000179c  8fc20000	lw	r2,(r30)
  784  000017a0  90410000	lbu	r1,(r2)
  785  000017a4  8fc20004	lw	r2,4(r30)
  786  000017a8  90430000	lbu	r3,(r2)
  787  000017ac  00230822	sub	r1,r1,r3
  788  000017b0  74220000	sgei	r2,r1,#0
  789  000017b4  10400020	beqz	r2,L34_LF2
  790  000017b8  54000000	nop; delay slot nop
  791  000017bc  8fc10000	lw	r1,(r30)
  792  000017c0  8fc20004	lw	r2,4(r30)
  793  000017c4  90210000	lbu	r1,(r1)
  794  000017c8  90420000	lbu	r2,(r2)
  795  000017cc  00220829	sne	r1,r1,r2
  796  000017d0  08000008	j	L35_LF2
  797  000017d4  54000000	nop; delay slot nop
  798  000017d8          	L34_LF2:
  799  000017d8  2001ffff	addi	r1,r0,#-1
  800  000017dc          	L35_LF2:
  801  000017dc  08000004	j	L24_LF2
  802  000017e0  54000000	nop; delay slot nop
  803  000017e4          	L33_LF2:
  804  000017e4          	L24_LF2:
  805  000017e4  8fa20000	lw	r2,0(r29)
  806  000017e8  8fa30004	lw	r3,4(r29)
  807  000017ec  8fdffff8	lw	r31,-8(r30)
  808  000017f0  001ee820	add	r29,r0,r30
  809  000017f4  8fdefffc	lw	r30,-4(r30)
  810  000017f8  4be00000	jr	r31
  811  000017fc  54000000	nop
  812  00001800          	.endproc _dstrncmp
  813  00001800          	.align 2
  814  00001800          	.proc _dstrlen
  815  00001800          	.global _dstrlen
  816  00001800          	_dstrlen:
  817                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  818  00001800  afbefffc	sw	-4(r29),r30; push fp
  819  00001804  001df020	add	r30,r0,r29; fp = sp
  820  00001808  afbffff8	sw	-8(r29),r31; push ret addr
  821  0000180c  2fbd0018	subui	r29,r29,#24; alloc local storage
  822  00001810  afa20000	sw	0(r29),r2
  823  00001814  20010000	addi	r1,r0,#0
  824  00001818  afc1fff4	sw	-12(r30),r1
  825  0000181c          	L37_LF2:
  826  0000181c  8fc10000	lw	r1,(r30)
  827  00001820  20220001	addi	r2,r1,#1
  828  00001824  afc20000	sw	(r30),r2
  829  00001828  90210000	lbu	r1,(r1)
  830  0000182c  64220000	snei	r2,r1,#0
  831  00001830  1440000c	bnez	r2,L39_LF2
  832  00001834  54000000	nop; delay slot nop
  833  00001838  0800001c	j	L38_LF2
  834  0000183c  54000000	nop; delay slot nop
  835  00001840          	L39_LF2:
  836  00001840  8fc2fff4	lw	r2,-12(r30)
  837  00001844  20410001	addi	r1,r2,#1
  838  00001848  00011020	add	r2,r0,r1
  839  0000184c  afc2fff4	sw	-12(r30),r2
  840  00001850  0bffffc8	j	L37_LF2
  841  00001854  54000000	nop; delay slot nop
  842  00001858          	L38_LF2:
  843  00001858  8fc1fff4	lw	r1,-12(r30)
  844  0000185c  08000004	j	L36_LF2
  845  00001860  54000000	nop; delay slot nop
  846  00001864          	L36_LF2:
  847  00001864  8fa20000	lw	r2,0(r29)
  848  00001868  8fdffff8	lw	r31,-8(r30)
  849  0000186c  001ee820	add	r29,r0,r30
  850  00001870  8fdefffc	lw	r30,-4(r30)
  851  00001874  4be00000	jr	r31
  852  00001878  54000000	nop
  853  0000187c          	.endproc _dstrlen
  854  0000187c          	.align 2
  855  0000187c          	.proc _dstrstr
  856  0000187c          	.global _dstrstr
  857  0000187c          	_dstrstr:
  858                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  859  0000187c  afbefffc	sw	-4(r29),r30; push fp
  860  00001880  001df020	add	r30,r0,r29; fp = sp
  861  00001884  afbffff8	sw	-8(r29),r31; push ret addr
  862  00001888  2fbd0018	subui	r29,r29,#24; alloc local storage
  863  0000188c  afa20000	sw	0(r29),r2
  864  00001890  23bdfff8	addi	r29,r29,#-8
  865  00001894  001d0820	add	r1,r0,r29
  866  00001898  8fc20004	lw	r2,4(r30)
  867  0000189c  ac220000	sw	(r1),r2
  868  000018a0  0fffff5c	jal	_dstrlen
  869  000018a4  54000000	nop; delay slot nop
  870  000018a8  23bd0008	addi	r29,r29,#8
  871  000018ac  afc1fff4	sw	-12(r30),r1
  872  000018b0          	L41_LF2:
  873  000018b0  8fc10000	lw	r1,(r30)
  874  000018b4  90220000	lbu	r2,(r1)
  875  000018b8  64410000	snei	r1,r2,#0
  876  000018bc  1420000c	bnez	r1,L43_LF2
  877  000018c0  54000000	nop; delay slot nop
  878  000018c4  08000060	j	L42_LF2
  879  000018c8  54000000	nop; delay slot nop
  880  000018cc          	L43_LF2:
  881  000018cc  23bdfff0	addi	r29,r29,#-16
  882  000018d0  001d0820	add	r1,r0,r29
  883  000018d4  8fc20000	lw	r2,(r30)
  884  000018d8  ac220000	sw	(r1),r2
  885  000018dc  8fc20004	lw	r2,4(r30)
  886  000018e0  ac220004	sw	4(r1),r2
  887  000018e4  8fc2fff4	lw	r2,-12(r30)
  888  000018e8  ac220008	sw	8(r1),r2
  889  000018ec  0ffffdc0	jal	_dstrncmp
  890  000018f0  54000000	nop; delay slot nop
  891  000018f4  23bd0010	addi	r29,r29,#16
  892  000018f8  64220000	snei	r2,r1,#0
  893  000018fc  14400010	bnez	r2,L44_LF2
  894  00001900  54000000	nop; delay slot nop
  895  00001904  8fc10000	lw	r1,(r30)
  896  00001908  08000028	j	L40_LF2
  897  0000190c  54000000	nop; delay slot nop
  898  00001910          	L44_LF2:
  899  00001910  8fc20000	lw	r2,(r30)
  900  00001914  20410001	addi	r1,r2,#1
  901  00001918  00011020	add	r2,r0,r1
  902  0000191c  afc20000	sw	(r30),r2
  903  00001920  0bffff8c	j	L41_LF2
  904  00001924  54000000	nop; delay slot nop
  905  00001928          	L42_LF2:
  906  00001928  20010000	addi	r1,r0,#0
  907  0000192c  08000004	j	L40_LF2
  908  00001930  54000000	nop; delay slot nop
  909  00001934          	L40_LF2:
  910  00001934  8fa20000	lw	r2,0(r29)
  911  00001938  8fdffff8	lw	r31,-8(r30)
  912  0000193c  001ee820	add	r29,r0,r30
  913  00001940  8fdefffc	lw	r30,-4(r30)
  914  00001944  4be00000	jr	r31
  915  00001948  54000000	nop
  916  0000194c          	.endproc _dstrstr
  917  0000194c          	.align 2
  918  0000194c          	.proc _dmindex
  919  0000194c          	.global _dmindex
  920  0000194c          	_dmindex:
  921                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  922  0000194c  afbefffc	sw	-4(r29),r30; push fp
  923  00001950  001df020	add	r30,r0,r29; fp = sp
  924  00001954  afbffff8	sw	-8(r29),r31; push ret addr
  925  00001958  2fbd0018	subui	r29,r29,#24; alloc local storage
  926  0000195c  afa20000	sw	0(r29),r2
  927  00001960  54000000	nop
  928  00001964          	L46_LF2:
  929  00001964  8fc10000	lw	r1,(r30)
  930  00001968  90220000	lbu	r2,(r1)
  931  0000196c  64410000	snei	r1,r2,#0
  932  00001970  1420000c	bnez	r1,L48_LF2
  933  00001974  54000000	nop; delay slot nop
  934  00001978  08000070	j	L47_LF2
  935  0000197c  54000000	nop; delay slot nop
  936  00001980          	L48_LF2:
  937  00001980  8fc10004	lw	r1,4(r30)
  938  00001984  afc1fff4	sw	-12(r30),r1
  939  00001988          	L49_LF2:
  940  00001988  8fc1fff4	lw	r1,-12(r30)
  941  0000198c  90220000	lbu	r2,(r1)
  942  00001990  64410000	snei	r1,r2,#0
  943  00001994  1420000c	bnez	r1,L52_LF2
  944  00001998  54000000	nop; delay slot nop
  945  0000199c  08000044	j	L50_LF2
  946  000019a0  54000000	nop; delay slot nop
  947  000019a4          	L52_LF2:
  948  000019a4  8fc10000	lw	r1,(r30)
  949  000019a8  8fc2fff4	lw	r2,-12(r30)
  950  000019ac  90210000	lbu	r1,(r1)
  951  000019b0  90420000	lbu	r2,(r2)
  952  000019b4  00220828	seq	r1,r1,r2
  953  000019b8  10200010	beqz	r1,L51_LF2
  954  000019bc  54000000	nop; delay slot nop
  955  000019c0  8fc10000	lw	r1,(r30)
  956  000019c4  08000030	j	L45_LF2
  957  000019c8  54000000	nop; delay slot nop
  958  000019cc          	L53_LF2:
  959  000019cc          	L51_LF2:
  960  000019cc  8fc2fff4	lw	r2,-12(r30)
  961  000019d0  20410001	addi	r1,r2,#1
  962  000019d4  00011020	add	r2,r0,r1
  963  000019d8  afc2fff4	sw	-12(r30),r2
  964  000019dc  0bffffa8	j	L49_LF2
  965  000019e0  54000000	nop; delay slot nop
  966  000019e4          	L50_LF2:
  967  000019e4  0bffff7c	j	L46_LF2
  968  000019e8  54000000	nop; delay slot nop
  969  000019ec          	L47_LF2:
  970  000019ec  20010000	addi	r1,r0,#0
  971  000019f0  08000004	j	L45_LF2
  972  000019f4  54000000	nop; delay slot nop
  973  000019f8          	L45_LF2:
  974  000019f8  8fa20000	lw	r2,0(r29)
  975  000019fc  8fdffff8	lw	r31,-8(r30)
  976  00001a00  001ee820	add	r29,r0,r30
  977  00001a04  8fdefffc	lw	r30,-4(r30)
  978  00001a08  4be00000	jr	r31
  979  00001a0c  54000000	nop
  980  00001a10          	.endproc _dmindex
  981  00001a10          	.align 2
  982  00001a10          	.proc _dindex
  983  00001a10          	.global _dindex
  984  00001a10          	_dindex:
  985                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  986  00001a10  afbefffc	sw	-4(r29),r30; push fp
  987  00001a14  001df020	add	r30,r0,r29; fp = sp
  988  00001a18  afbffff8	sw	-8(r29),r31; push ret addr
  989  00001a1c  2fbd0010	subui	r29,r29,#16; alloc local storage
  990  00001a20  afa20000	sw	0(r29),r2
  991  00001a24  54000000	nop
  992  00001a28          	L55_LF2:
  993  00001a28  8fc10000	lw	r1,(r30)
  994  00001a2c  90220000	lbu	r2,(r1)
  995  00001a30  64410000	snei	r1,r2,#0
  996  00001a34  1420000c	bnez	r1,L57_LF2
  997  00001a38  54000000	nop; delay slot nop
  998  00001a3c  08000040	j	L56_LF2
  999  00001a40  54000000	nop; delay slot nop
 1000  00001a44          	L57_LF2:
 1001  00001a44  8fc10000	lw	r1,(r30)
 1002  00001a48  90220000	lbu	r2,(r1)
 1003  00001a4c  8fc10004	lw	r1,4(r30)
 1004  00001a50  00411028	seq	r2,r2,r1
 1005  00001a54  10400010	beqz	r2,L58_LF2
 1006  00001a58  54000000	nop; delay slot nop
 1007  00001a5c  8fc10000	lw	r1,(r30)
 1008  00001a60  08000028	j	L54_LF2
 1009  00001a64  54000000	nop; delay slot nop
 1010  00001a68          	L58_LF2:
 1011  00001a68  8fc20000	lw	r2,(r30)
 1012  00001a6c  20410001	addi	r1,r2,#1
 1013  00001a70  00011020	add	r2,r0,r1
 1014  00001a74  afc20000	sw	(r30),r2
 1015  00001a78  0bffffac	j	L55_LF2
 1016  00001a7c  54000000	nop; delay slot nop
 1017  00001a80          	L56_LF2:
 1018  00001a80  20010000	addi	r1,r0,#0
 1019  00001a84  08000004	j	L54_LF2
 1020  00001a88  54000000	nop; delay slot nop
 1021  00001a8c          	L54_LF2:
 1022  00001a8c  8fa20000	lw	r2,0(r29)
 1023  00001a90  8fdffff8	lw	r31,-8(r30)
 1024  00001a94  001ee820	add	r29,r0,r30
 1025  00001a98  8fdefffc	lw	r30,-4(r30)
 1026  00001a9c  4be00000	jr	r31
 1027  00001aa0  54000000	nop
 1028  00001aa4          	.endproc _dindex
 1029  00001aa4          	.align 2
 1030  00001aa4          	.proc _ditoa
 1031  00001aa4          	.global _ditoa
 1032  00001aa4          	_ditoa:
 1033                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1034  00001aa4  afbefffc	sw	-4(r29),r30; push fp
 1035  00001aa8  001df020	add	r30,r0,r29; fp = sp
 1036  00001aac  afbffff8	sw	-8(r29),r31; push ret addr
 1037  00001ab0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1038  00001ab4  afa20000	sw	0(r29),r2
 1039  00001ab8  afa30004	sw	4(r29),r3
 1040  00001abc  8fc10000	lw	r1,(r30)
 1041  00001ac0  68220000	slti	r2,r1,#0
 1042  00001ac4  1040002c	beqz	r2,L60_LF2
 1043  00001ac8  54000000	nop; delay slot nop
 1044  00001acc  8fc10004	lw	r1,4(r30)
 1045  00001ad0  20220001	addi	r2,r1,#1
 1046  00001ad4  afc20004	sw	4(r30),r2
 1047  00001ad8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1048  00001adc  a0220000	sb	(r1),r2
 1049  00001ae0  8fc10000	lw	r1,(r30)
 1050  00001ae4  00011022	sub	r2,r0,r1
 1051  00001ae8  afc20000	sw	(r30),r2
 1052  00001aec  08000118	j	L61_LF2
 1053  00001af0  54000000	nop; delay slot nop
 1054  00001af4          	L60_LF2:
 1055  00001af4  8fc10000	lw	r1,(r30)
 1056  00001af8  64220000	snei	r2,r1,#0
 1057  00001afc  14400020	bnez	r2,L62_LF2
 1058  00001b00  54000000	nop; delay slot nop
 1059  00001b04  8fc10004	lw	r1,4(r30)
 1060  00001b08  20220001	addi	r2,r1,#1
 1061  00001b0c  afc20004	sw	4(r30),r2
 1062  00001b10  20020030	addi	r2,r0,(#0x30)&0xff
 1063  00001b14  a0220000	sb	(r1),r2
 1064  00001b18  080000ec	j	L61_LF2
 1065  00001b1c  54000000	nop; delay slot nop
 1066  00001b20          	L62_LF2:
 1067  00001b20  20010001	addi	r1,r0,#1
 1068  00001b24  afc1fff4	sw	-12(r30),r1
 1069  00001b28          	L64_LF2:
 1070  00001b28  8fc1fff4	lw	r1,-12(r30)
 1071  00001b2c  8fc20000	lw	r2,(r30)
 1072  00001b30  0022082c	sle	r1,r1,r2
 1073  00001b34  1420000c	bnez	r1,L66_LF2
 1074  00001b38  54000000	nop; delay slot nop
 1075  00001b3c  08000024	j	L65_LF2
 1076  00001b40  54000000	nop; delay slot nop
 1077  00001b44          	L67_LF2:
 1078  00001b44          	L66_LF2:
 1079  00001b44  8fc1fff4	lw	r1,-12(r30)
 1080  00001b48  00011820	add	r3,r0,r1
 1081  00001b4c  50620002	slli	r2,r3,#0x2
 1082  00001b50  00411020	add	r2,r2,r1
 1083  00001b54  50410001	slli	r1,r2,#0x1
 1084  00001b58  afc1fff4	sw	-12(r30),r1
 1085  00001b5c  0bffffc8	j	L64_LF2
 1086  00001b60  54000000	nop; delay slot nop
 1087  00001b64          	L65_LF2:
 1088  00001b64  54000000	nop
 1089  00001b68          	L68_LF2:
 1090  00001b68  8fc1fff4	lw	r1,-12(r30)
 1091  00001b6c  2002000a	addi	r2,r0,#10
 1092  00001b70  00200035	movi2fp	f0,r1
 1093  00001b74  00400835	movi2fp	f1,r2
 1094  00001b78  0401000f	div	f0,f0,f1
 1095  00001b7c  00000834	movfp2i	r1,f0
 1096  00001b80  afc1fff4	sw	-12(r30),r1
 1097  00001b84  8fc10004	lw	r1,4(r30)
 1098  00001b88  20220001	addi	r2,r1,#1
 1099  00001b8c  afc20004	sw	4(r30),r2
 1100  00001b90  8fc20000	lw	r2,(r30)
 1101  00001b94  8fc3fff4	lw	r3,-12(r30)
 1102  00001b98  00400035	movi2fp	f0,r2
 1103  00001b9c  00600835	movi2fp	f1,r3
 1104  00001ba0  0401000f	div	f0,f0,f1
 1105  00001ba4  00001034	movfp2i	r2,f0
 1106  00001ba8  00021820	add	r3,r0,r2
 1107  00001bac  20620030	addi	r2,r3,#48
 1108  00001bb0  a0220000	sb	(r1),r2
 1109  00001bb4  8fc10000	lw	r1,(r30)
 1110  00001bb8  8fc3fff4	lw	r3,-12(r30)
 1111  00001bbc  00200035	movi2fp	f0,r1
 1112  00001bc0  00600835	movi2fp	f1,r3
 1113  00001bc4  0401000f	div	f0,f0,f1
 1114  00001bc8  00001034	movfp2i	r2,f0
 1115  00001bcc  8fc3fff4	lw	r3,-12(r30)
 1116  00001bd0  00400035	movi2fp	f0,r2
 1117  00001bd4  00600835	movi2fp	f1,r3
 1118  00001bd8  0401000e	mult	f0,f0,f1
 1119  00001bdc  00001034	movfp2i	r2,f0
 1120  00001be0  00220822	sub	r1,r1,r2
 1121  00001be4  afc10000	sw	(r30),r1
 1122  00001be8          	L70_LF2:
 1123  00001be8  8fc1fff4	lw	r1,-12(r30)
 1124  00001bec  6c220001	sgti	r2,r1,#1
 1125  00001bf0  1440000c	bnez	r2,L71_LF2
 1126  00001bf4  54000000	nop; delay slot nop
 1127  00001bf8  0800000c	j	L61_LF2
 1128  00001bfc  54000000	nop; delay slot nop
 1129  00001c00          	L71_LF2:
 1130  00001c00  0bffff64	j	L68_LF2
 1131  00001c04  54000000	nop; delay slot nop
 1132  00001c08          	L69_LF2:
 1133  00001c08          	L63_LF2:
 1134  00001c08          	L61_LF2:
 1135  00001c08  8fc10004	lw	r1,4(r30)
 1136  00001c0c  20020000	addi	r2,r0,(#0x0)&0xff
 1137  00001c10  a0220000	sb	(r1),r2
 1138  00001c14          	L59_LF2:
 1139  00001c14  8fa20000	lw	r2,0(r29)
 1140  00001c18  8fa30004	lw	r3,4(r29)
 1141  00001c1c  8fdffff8	lw	r31,-8(r30)
 1142  00001c20  001ee820	add	r29,r0,r30
 1143  00001c24  8fdefffc	lw	r30,-4(r30)
 1144  00001c28  4be00000	jr	r31
 1145  00001c2c  54000000	nop
 1146  00001c30          	.endproc _ditoa
 1147  00001c30          	.align 2
 1148  00001c30          	.proc _dstrtol
 1149  00001c30          	.global _dstrtol
 1150  00001c30          	_dstrtol:
 1151                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1152  00001c30  afbefffc	sw	-4(r29),r30; push fp
 1153  00001c34  001df020	add	r30,r0,r29; fp = sp
 1154  00001c38  afbffff8	sw	-8(r29),r31; push ret addr
 1155  00001c3c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1156  00001c40  afa20000	sw	0(r29),r2
 1157  00001c44  20010000	addi	r1,r0,#0
 1158  00001c48  afc1fff4	sw	-12(r30),r1
 1159  00001c4c          	L73_LF2:
 1160  00001c4c  8fc10000	lw	r1,(r30)
 1161  00001c50  90220000	lbu	r2,(r1)
 1162  00001c54  60410020	seqi	r1,r2,#32
 1163  00001c58  14200034	bnez	r1,L75_LF2
 1164  00001c5c  54000000	nop; delay slot nop
 1165  00001c60  8fc10000	lw	r1,(r30)
 1166  00001c64  90220000	lbu	r2,(r1)
 1167  00001c68  60410009	seqi	r1,r2,#9
 1168  00001c6c  14200020	bnez	r1,L75_LF2
 1169  00001c70  54000000	nop; delay slot nop
 1170  00001c74  8fc10000	lw	r1,(r30)
 1171  00001c78  90220000	lbu	r2,(r1)
 1172  00001c7c  6041000a	seqi	r1,r2,#10
 1173  00001c80  1420000c	bnez	r1,L75_LF2
 1174  00001c84  54000000	nop; delay slot nop
 1175  00001c88  0800001c	j	L74_LF2
 1176  00001c8c  54000000	nop; delay slot nop
 1177  00001c90          	L75_LF2:
 1178  00001c90  8fc20000	lw	r2,(r30)
 1179  00001c94  20410001	addi	r1,r2,#1
 1180  00001c98  00011020	add	r2,r0,r1
 1181  00001c9c  afc20000	sw	(r30),r2
 1182  00001ca0  0bffffa8	j	L73_LF2
 1183  00001ca4  54000000	nop; delay slot nop
 1184  00001ca8          	L74_LF2:
 1185  00001ca8  8fc10004	lw	r1,4(r30)
 1186  00001cac  64220000	snei	r2,r1,#0
 1187  00001cb0  10400010	beqz	r2,L76_LF2
 1188  00001cb4  54000000	nop; delay slot nop
 1189  00001cb8  8fc10004	lw	r1,4(r30)
 1190  00001cbc  8fc20000	lw	r2,(r30)
 1191  00001cc0  ac220000	sw	(r1),r2
 1192  00001cc4          	L76_LF2:
 1193  00001cc4  8fc10000	lw	r1,(r30)
 1194  00001cc8  90220000	lbu	r2,(r1)
 1195  00001ccc  64410000	snei	r1,r2,#0
 1196  00001cd0  14200010	bnez	r1,L77_LF2
 1197  00001cd4  54000000	nop; delay slot nop
 1198  00001cd8  8fc1fff4	lw	r1,-12(r30)
 1199  00001cdc  08000294	j	L72_LF2
 1200  00001ce0  54000000	nop; delay slot nop
 1201  00001ce4          	L77_LF2:
 1202  00001ce4  8fc10000	lw	r1,(r30)
 1203  00001ce8  90220000	lbu	r2,(r1)
 1204  00001cec  6041002d	seqi	r1,r2,#45
 1205  00001cf0  10200024	beqz	r1,L78_LF2
 1206  00001cf4  54000000	nop; delay slot nop
 1207  00001cf8  2001ffff	addi	r1,r0,#-1
 1208  00001cfc  afc1ffec	sw	-20(r30),r1
 1209  00001d00  8fc20000	lw	r2,(r30)
 1210  00001d04  20410001	addi	r1,r2,#1
 1211  00001d08  00011020	add	r2,r0,r1
 1212  00001d0c  afc20000	sw	(r30),r2
 1213  00001d10  0800000c	j	L79_LF2
 1214  00001d14  54000000	nop; delay slot nop
 1215  00001d18          	L78_LF2:
 1216  00001d18  20010001	addi	r1,r0,#1
 1217  00001d1c  afc1ffec	sw	-20(r30),r1
 1218  00001d20          	L79_LF2:
 1219  00001d20  8fc10008	lw	r1,8(r30)
 1220  00001d24  64220000	snei	r2,r1,#0
 1221  00001d28  14400090	bnez	r2,L80_LF2
 1222  00001d2c  54000000	nop; delay slot nop
 1223  00001d30  8fc10000	lw	r1,(r30)
 1224  00001d34  90220000	lbu	r2,(r1)
 1225  00001d38  60410030	seqi	r1,r2,#48
 1226  00001d3c  10200074	beqz	r1,L81_LF2
 1227  00001d40  54000000	nop; delay slot nop
 1228  00001d44  8fc20000	lw	r2,(r30)
 1229  00001d48  20410001	addi	r1,r2,#1
 1230  00001d4c  00011020	add	r2,r0,r1
 1231  00001d50  afc20000	sw	(r30),r2
 1232  00001d54  8fc10000	lw	r1,(r30)
 1233  00001d58  90220000	lbu	r2,(r1)
 1234  00001d5c  60410078	seqi	r1,r2,#120
 1235  00001d60  14200020	bnez	r1,L83_LF2
 1236  00001d64  54000000	nop; delay slot nop
 1237  00001d68  8fc10000	lw	r1,(r30)
 1238  00001d6c  90220000	lbu	r2,(r1)
 1239  00001d70  60410058	seqi	r1,r2,#88
 1240  00001d74  1420000c	bnez	r1,L83_LF2
 1241  00001d78  54000000	nop; delay slot nop
 1242  00001d7c  08000024	j	L82_LF2
 1243  00001d80  54000000	nop; delay slot nop
 1244  00001d84          	L83_LF2:
 1245  00001d84  20010010	addi	r1,r0,#16
 1246  00001d88  afc10008	sw	8(r30),r1
 1247  00001d8c  8fc20000	lw	r2,(r30)
 1248  00001d90  20410001	addi	r1,r2,#1
 1249  00001d94  00011020	add	r2,r0,r1
 1250  00001d98  afc20000	sw	(r30),r2
 1251  00001d9c  0800000c	j	L84_LF2
 1252  00001da0  54000000	nop; delay slot nop
 1253  00001da4          	L82_LF2:
 1254  00001da4  20010008	addi	r1,r0,#8
 1255  00001da8  afc10008	sw	8(r30),r1
 1256  00001dac          	L84_LF2:
 1257  00001dac  0800000c	j	L80_LF2
 1258  00001db0  54000000	nop; delay slot nop
 1259  00001db4          	L81_LF2:
 1260  00001db4  2001000a	addi	r1,r0,#10
 1261  00001db8  afc10008	sw	8(r30),r1
 1262  00001dbc          	L85_LF2:
 1263  00001dbc          	L80_LF2:
 1264  00001dbc  8fc10008	lw	r1,8(r30)
 1265  00001dc0  70220000	slei	r2,r1,#0
 1266  00001dc4  1440001c	bnez	r2,L87_LF2
 1267  00001dc8  54000000	nop; delay slot nop
 1268  00001dcc  8fc10008	lw	r1,8(r30)
 1269  00001dd0  6c220010	sgti	r2,r1,#16
 1270  00001dd4  1440000c	bnez	r2,L87_LF2
 1271  00001dd8  54000000	nop; delay slot nop
 1272  00001ddc  08000010	j	L86_LF2
 1273  00001de0  54000000	nop; delay slot nop
 1274  00001de4          	L87_LF2:
 1275  00001de4  8fc1fff4	lw	r1,-12(r30)
 1276  00001de8  08000188	j	L72_LF2
 1277  00001dec  54000000	nop; delay slot nop
 1278  00001df0          	L86_LF2:
 1279  00001df0  54000000	nop
 1280  00001df4          	L88_LF2:
 1281  00001df4  8fc10000	lw	r1,(r30)
 1282  00001df8  90220000	lbu	r2,(r1)
 1283  00001dfc  6c41002f	sgtui	r1,r2,#47
 1284  00001e00  10200030	beqz	r1,L91_LF2
 1285  00001e04  54000000	nop; delay slot nop
 1286  00001e08  8fc10000	lw	r1,(r30)
 1287  00001e0c  90220000	lbu	r2,(r1)
 1288  00001e10  70410039	sleui	r1,r2,#57
 1289  00001e14  1020001c	beqz	r1,L91_LF2
 1290  00001e18  54000000	nop; delay slot nop
 1291  00001e1c  8fc10000	lw	r1,(r30)
 1292  00001e20  90220000	lbu	r2,(r1)
 1293  00001e24  2041ffd0	addi	r1,r2,#-48
 1294  00001e28  afc1fff0	sw	-16(r30),r1
 1295  00001e2c  0800008c	j	L92_LF2
 1296  00001e30  54000000	nop; delay slot nop
 1297  00001e34          	L91_LF2:
 1298  00001e34  8fc10000	lw	r1,(r30)
 1299  00001e38  90220000	lbu	r2,(r1)
 1300  00001e3c  6c410060	sgtui	r1,r2,#96
 1301  00001e40  10200030	beqz	r1,L93_LF2
 1302  00001e44  54000000	nop; delay slot nop
 1303  00001e48  8fc10000	lw	r1,(r30)
 1304  00001e4c  90220000	lbu	r2,(r1)
 1305  00001e50  7041007a	sleui	r1,r2,#122
 1306  00001e54  1020001c	beqz	r1,L93_LF2
 1307  00001e58  54000000	nop; delay slot nop
 1308  00001e5c  8fc10000	lw	r1,(r30)
 1309  00001e60  90220000	lbu	r2,(r1)
 1310  00001e64  2041ffa9	addi	r1,r2,#-87
 1311  00001e68  afc1fff0	sw	-16(r30),r1
 1312  00001e6c  0800004c	j	L92_LF2
 1313  00001e70  54000000	nop; delay slot nop
 1314  00001e74          	L93_LF2:
 1315  00001e74  8fc10000	lw	r1,(r30)
 1316  00001e78  90220000	lbu	r2,(r1)
 1317  00001e7c  6c410040	sgtui	r1,r2,#64
 1318  00001e80  10200030	beqz	r1,L95_LF2
 1319  00001e84  54000000	nop; delay slot nop
 1320  00001e88  8fc10000	lw	r1,(r30)
 1321  00001e8c  90220000	lbu	r2,(r1)
 1322  00001e90  7041005a	sleui	r1,r2,#90
 1323  00001e94  1020001c	beqz	r1,L95_LF2
 1324  00001e98  54000000	nop; delay slot nop
 1325  00001e9c  8fc10000	lw	r1,(r30)
 1326  00001ea0  90220000	lbu	r2,(r1)
 1327  00001ea4  2041ffc9	addi	r1,r2,#-55
 1328  00001ea8  afc1fff0	sw	-16(r30),r1
 1329  00001eac  0800000c	j	L92_LF2
 1330  00001eb0  54000000	nop; delay slot nop
 1331  00001eb4          	L95_LF2:
 1332  00001eb4  200103e8	addi	r1,r0,#1000
 1333  00001eb8  afc1fff0	sw	-16(r30),r1
 1334  00001ebc          	L96_LF2:
 1335  00001ebc          	L94_LF2:
 1336  00001ebc          	L92_LF2:
 1337  00001ebc  8fc1fff0	lw	r1,-16(r30)
 1338  00001ec0  8fc20008	lw	r2,8(r30)
 1339  00001ec4  0022082a	slt	r1,r1,r2
 1340  00001ec8  10200040	beqz	r1,L90_LF2
 1341  00001ecc  54000000	nop; delay slot nop
 1342  00001ed0  8fc1fff4	lw	r1,-12(r30)
 1343  00001ed4  8fc20008	lw	r2,8(r30)
 1344  00001ed8  00200035	movi2fp	f0,r1
 1345  00001edc  00400835	movi2fp	f1,r2
 1346  00001ee0  0401000e	mult	f0,f0,f1
 1347  00001ee4  00000834	movfp2i	r1,f0
 1348  00001ee8  afc1fff4	sw	-12(r30),r1
 1349  00001eec  8fc1fff4	lw	r1,-12(r30)
 1350  00001ef0  8fc2fff0	lw	r2,-16(r30)
 1351  00001ef4  00220820	add	r1,r1,r2
 1352  00001ef8  afc1fff4	sw	-12(r30),r1
 1353  00001efc  8fc20000	lw	r2,(r30)
 1354  00001f00  20410001	addi	r1,r2,#1
 1355  00001f04  00011020	add	r2,r0,r1
 1356  00001f08  afc20000	sw	(r30),r2
 1357  00001f0c          	L97_LF2:
 1358  00001f0c          	L90_LF2:
 1359  00001f0c  8fc1fff0	lw	r1,-16(r30)
 1360  00001f10  8fc20008	lw	r2,8(r30)
 1361  00001f14  0022082a	slt	r1,r1,r2
 1362  00001f18  1420000c	bnez	r1,L98_LF2
 1363  00001f1c  54000000	nop; delay slot nop
 1364  00001f20  0800000c	j	L89_LF2
 1365  00001f24  54000000	nop; delay slot nop
 1366  00001f28          	L98_LF2:
 1367  00001f28  0bfffec8	j	L88_LF2
 1368  00001f2c  54000000	nop; delay slot nop
 1369  00001f30          	L89_LF2:
 1370  00001f30  8fc10004	lw	r1,4(r30)
 1371  00001f34  64220000	snei	r2,r1,#0
 1372  00001f38  10400010	beqz	r2,L99_LF2
 1373  00001f3c  54000000	nop; delay slot nop
 1374  00001f40  8fc10004	lw	r1,4(r30)
 1375  00001f44  8fc20000	lw	r2,(r30)
 1376  00001f48  ac220000	sw	(r1),r2
 1377  00001f4c          	L99_LF2:
 1378  00001f4c  8fc1fff4	lw	r1,-12(r30)
 1379  00001f50  8fc2ffec	lw	r2,-20(r30)
 1380  00001f54  00200035	movi2fp	f0,r1
 1381  00001f58  00400835	movi2fp	f1,r2
 1382  00001f5c  0401000e	mult	f0,f0,f1
 1383  00001f60  00000834	movfp2i	r1,f0
 1384  00001f64  afc1fff4	sw	-12(r30),r1
 1385  00001f68  8fc1fff4	lw	r1,-12(r30)
 1386  00001f6c  08000004	j	L72_LF2
 1387  00001f70  54000000	nop; delay slot nop
 1388  00001f74          	L72_LF2:
 1389  00001f74  8fa20000	lw	r2,0(r29)
 1390  00001f78  8fdffff8	lw	r31,-8(r30)
 1391  00001f7c  001ee820	add	r29,r0,r30
 1392  00001f80  8fdefffc	lw	r30,-4(r30)
 1393  00001f84  4be00000	jr	r31
 1394  00001f88  54000000	nop
 1395  00001f8c          	.endproc _dstrtol
 1396  00001f8c          	.align 2
 1397  00001f8c          	.proc _bcopy
 1398  00001f8c          	.global _bcopy
 1399  00001f8c          	_bcopy:
 1400                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1401  00001f8c  afbefffc	sw	-4(r29),r30; push fp
 1402  00001f90  001df020	add	r30,r0,r29; fp = sp
 1403  00001f94  afbffff8	sw	-8(r29),r31; push ret addr
 1404  00001f98  2fbd0010	subui	r29,r29,#16; alloc local storage
 1405  00001f9c  afa20000	sw	0(r29),r2
 1406  00001fa0  afa30004	sw	4(r29),r3
 1407  00001fa4  54000000	nop
 1408  00001fa8          	L101_LF2:
 1409  00001fa8  8fc10008	lw	r1,8(r30)
 1410  00001fac  2022ffff	addi	r2,r1,#-1
 1411  00001fb0  afc20008	sw	8(r30),r2
 1412  00001fb4  6c210000	sgti	r1,r1,#0
 1413  00001fb8  1420000c	bnez	r1,L103_LF2
 1414  00001fbc  54000000	nop; delay slot nop
 1415  00001fc0  0800002c	j	L102_LF2
 1416  00001fc4  54000000	nop; delay slot nop
 1417  00001fc8          	L103_LF2:
 1418  00001fc8  8fc10004	lw	r1,4(r30)
 1419  00001fcc  20220001	addi	r2,r1,#1
 1420  00001fd0  afc20004	sw	4(r30),r2
 1421  00001fd4  8fc20000	lw	r2,(r30)
 1422  00001fd8  20430001	addi	r3,r2,#1
 1423  00001fdc  afc30000	sw	(r30),r3
 1424  00001fe0  80420000	lb	r2,(r2)
 1425  00001fe4  a0220000	sb	(r1),r2
 1426  00001fe8  0bffffbc	j	L101_LF2
 1427  00001fec  54000000	nop; delay slot nop
 1428  00001ff0          	L102_LF2:
 1429  00001ff0          	L100_LF2:
 1430  00001ff0  8fa20000	lw	r2,0(r29)
 1431  00001ff4  8fa30004	lw	r3,4(r29)
 1432  00001ff8  8fdffff8	lw	r31,-8(r30)
 1433  00001ffc  001ee820	add	r29,r0,r30
 1434  00002000  8fdefffc	lw	r30,-4(r30)
 1435  00002004  4be00000	jr	r31
 1436  00002008  54000000	nop
 1437  0000200c          	.endproc _bcopy
 1438  0000200c          	.align 2
 1439  0000200c          	.proc _bzero
 1440  0000200c          	.global _bzero
 1441  0000200c          	_bzero:
 1442                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1443  0000200c  afbefffc	sw	-4(r29),r30; push fp
 1444  00002010  001df020	add	r30,r0,r29; fp = sp
 1445  00002014  afbffff8	sw	-8(r29),r31; push ret addr
 1446  00002018  2fbd0010	subui	r29,r29,#16; alloc local storage
 1447  0000201c  afa20000	sw	0(r29),r2
 1448  00002020  54000000	nop
 1449  00002024          	L105_LF2:
 1450  00002024  8fc10004	lw	r1,4(r30)
 1451  00002028  2022ffff	addi	r2,r1,#-1
 1452  0000202c  afc20004	sw	4(r30),r2
 1453  00002030  6c210000	sgti	r1,r1,#0
 1454  00002034  1420000c	bnez	r1,L107_LF2
 1455  00002038  54000000	nop; delay slot nop
 1456  0000203c  08000020	j	L106_LF2
 1457  00002040  54000000	nop; delay slot nop
 1458  00002044          	L107_LF2:
 1459  00002044  8fc10000	lw	r1,(r30)
 1460  00002048  20220001	addi	r2,r1,#1
 1461  0000204c  afc20000	sw	(r30),r2
 1462  00002050  20020000	addi	r2,r0,(#0x0)&0xff
 1463  00002054  a0220000	sb	(r1),r2
 1464  00002058  0bffffc8	j	L105_LF2
 1465  0000205c  54000000	nop; delay slot nop
 1466  00002060          	L106_LF2:
 1467  00002060          	L104_LF2:
 1468  00002060  8fa20000	lw	r2,0(r29)
 1469  00002064  8fdffff8	lw	r31,-8(r30)
 1470  00002068  001ee820	add	r29,r0,r30
 1471  0000206c  8fdefffc	lw	r30,-4(r30)
 1472  00002070  4be00000	jr	r31
 1473  00002074  54000000	nop
 1474  00002078          	.endproc _bzero
 1475  00002078          	.align 2
 1476  00002078          	.proc _min
 1477  00002078          	.global _min
 1478  00002078          	_min:
 1479                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1480  00002078  afbefffc	sw	-4(r29),r30; push fp
 1481  0000207c  001df020	add	r30,r0,r29; fp = sp
 1482  00002080  afbffff8	sw	-8(r29),r31; push ret addr
 1483  00002084  2fbd0010	subui	r29,r29,#16; alloc local storage
 1484  00002088  afa20000	sw	0(r29),r2
 1485  0000208c  afa30004	sw	4(r29),r3
 1486  00002090  8fc10000	lw	r1,(r30)
 1487  00002094  8fc20004	lw	r2,4(r30)
 1488  00002098  0022182c	sle	r3,r1,r2
 1489  0000209c  14600008	bnez	r3,L109_LF2
 1490  000020a0  54000000	nop; delay slot nop
 1491  000020a4  8fc10004	lw	r1,4(r30)
 1492  000020a8          	L109_LF2:
 1493  000020a8  08000004	j	L108_LF2
 1494  000020ac  54000000	nop; delay slot nop
 1495  000020b0          	L108_LF2:
 1496  000020b0  8fa20000	lw	r2,0(r29)
 1497  000020b4  8fa30004	lw	r3,4(r29)
 1498  000020b8  8fdffff8	lw	r31,-8(r30)
 1499  000020bc  001ee820	add	r29,r0,r30
 1500  000020c0  8fdefffc	lw	r30,-4(r30)
 1501  000020c4  4be00000	jr	r31
 1502  000020c8  54000000	nop
 1503  000020cc          	.endproc _min
 1504  000020cc          	.align 2
 1505  000020cc          	.proc _max
 1506  000020cc          	.global _max
 1507  000020cc          	_max:
 1508                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1509  000020cc  afbefffc	sw	-4(r29),r30; push fp
 1510  000020d0  001df020	add	r30,r0,r29; fp = sp
 1511  000020d4  afbffff8	sw	-8(r29),r31; push ret addr
 1512  000020d8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1513  000020dc  afa20000	sw	0(r29),r2
 1514  000020e0  afa30004	sw	4(r29),r3
 1515  000020e4  8fc10000	lw	r1,(r30)
 1516  000020e8  8fc20004	lw	r2,4(r30)
 1517  000020ec  0022182d	sge	r3,r1,r2
 1518  000020f0  14600008	bnez	r3,L111_LF2
 1519  000020f4  54000000	nop; delay slot nop
 1520  000020f8  8fc10004	lw	r1,4(r30)
 1521  000020fc          	L111_LF2:
 1522  000020fc  08000004	j	L110_LF2
 1523  00002100  54000000	nop; delay slot nop
 1524  00002104          	L110_LF2:
 1525  00002104  8fa20000	lw	r2,0(r29)
 1526  00002108  8fa30004	lw	r3,4(r29)
 1527  0000210c  8fdffff8	lw	r31,-8(r30)
 1528  00002110  001ee820	add	r29,r0,r30
 1529  00002114  8fdefffc	lw	r30,-4(r30)
 1530  00002118  4be00000	jr	r31
 1531  0000211c  54000000	nop
 1532  00002120          	.endproc _max
 1533                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1534                      ;;;
 1535                      ;;; Most of the traps are called in files from libtraps.
 1538  00002120          	.align 2
 1539  00002120          	.proc _exit
 1540  00002120          	.global _exit
 1541  00002120          	_exit:
 1542  00002120  44000300	trap	#0x300
 1543  00002124  4be00000	jr	r31
 1544  00002128  54000000	nop
 1545  0000212c          	.endproc _exit
 1547                      ; for the benefit of gcc.
 1548  0000212c          	.proc ___main
 1549  0000212c          	.global ___main
 1550  0000212c          	___main:
 1551  0000212c  4be00000	jr	r31
 1552  00002130  54000000	nop
 1553  00002134          	.endproc ___main
 1554  00002134          	.text
 1555  00002134          	.global _etext
 1556  00002134          	_etext:
 1557  00002134          	.align 3
 1558  00002138          	.data
 1559  000030ee          	.global _edata
 1560  000030ee          	_edata:
