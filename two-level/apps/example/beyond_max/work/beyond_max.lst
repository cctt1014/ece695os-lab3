 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 184
    4                      ; Text size: 4364
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  6265796f	.ascii "beyond_max (%d): Value at out-of-bound memory: %d\n\000"
   85  00003038  6e645f6d	
   85  0000303c  61782028	
   85  00003040  2564293a	
   85  00003044  2056616c	
   85  00003048  75652061	
   85  0000304c  74206f75	
   85  00003050  742d6f66	
   85  00003054  2d626f75	
   85  00003058  6e64206d	
   85  0000305c  656d6f72	
   85  00003060  793a2025	
   85  00003064  640a00  	
   86  00003067          	.align 2
   87  00003068          	LC2_LF0:
   88  00003068  6265796f	.ascii "beyond_max (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   88  0000306c  6e645f6d	
   88  00003070  61782028	
   88  00003074  2564293a	
   88  00003078  20426164	
   88  0000307c  2073656d	
   88  00003080  6170686f	
   88  00003084  72652073	
   88  00003088  5f70726f	
   88  0000308c  63735f63	
   88  00003090  6f6d706c	
   88  00003094  65746564	
   88  00003098  20282564	
   88  0000309c  29210a00	
   89  000030a0          	.align 2
   90  000030a0          	LC3_LF0:
   91  000030a0  6265796f	.ascii "beyond_max (%d): Done!\n\000"
   91  000030a4  6e645f6d	
   91  000030a8  61782028	
   91  000030ac  2564293a	
   91  000030b0  20446f6e	
   91  000030b4  65210a00	
   92  000030b8          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc30004	lw	r3,4(r30)
  104  000010ec  0c001014	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410002	snei	r1,r2,#2
  107  000010f8  10200028	beqz	r1,L17_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff8	addi	r29,r29,#-8
  110  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  111  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  112  0000110c  afa40000	sw	(r29),r4
  113  00001110  0c000130	jal	_Printf
  114  00001114  54000000	nop; not filled.
  115  00001118  0c000230	jal	_Exit
  116  0000111c  54000000	nop; not filled.
  117  00001120  23bd0008	addi	r29,r29,#8
  118  00001124          	L17_LF0:
  119  00001124  23bdfff0	addi	r29,r29,#-16
  120  00001128  8c630004	lw	r3,4(r3)
  121  0000112c  afa30000	sw	(r29),r3
  122  00001130  20040000	addi	r4,r0,#0
  123  00001134  afa40004	sw	4(r29),r4
  124  00001138  2004000a	addi	r4,r0,#10
  125  0000113c  afa40008	sw	8(r29),r4
  126  00001140  0c000ac4	jal	_dstrtol
  127  00001144  54000000	nop; not filled.
  128  00001148  00011820	add	r3,r0,r1
  129  0000114c  3c020040	lhi	r2,#64
  130  00001150  24420000	addui	r2,r2,#0
  131  00001154  0c0000f8	jal	_getpid
  132  00001158  54000000	nop; not filled.
  133  0000115c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  134  00001160  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  135  00001164  afa40000	sw	(r29),r4
  136  00001168  afa10004	sw	4(r29),r1
  137  0000116c  8c420000	lw	r2,(r2)
  138  00001170  afa20008	sw	8(r29),r2
  139  00001174  0c0000cc	jal	_Printf
  140  00001178  54000000	nop; not filled.
  141  0000117c  afa30000	sw	(r29),r3
  142  00001180  0c000114	jal	_sem_signal
  143  00001184  54000000	nop; not filled.
  144  00001188  23bd0010	addi	r29,r29,#16
  145  0000118c  64210001	snei	r1,r1,#1
  146  00001190  10200038	beqz	r1,L18_LF0
  147  00001194  54000000	nop; not filled.
  148  00001198  0c0000b4	jal	_getpid
  149  0000119c  54000000	nop; not filled.
  150  000011a0  23bdfff0	addi	r29,r29,#-16
  151  000011a4  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  152  000011a8  24843068	addui	r4,r4,(LC2_LF0)&0xffff
  153  000011ac  afa40000	sw	(r29),r4
  154  000011b0  afa10004	sw	4(r29),r1
  155  000011b4  afa30008	sw	8(r29),r3
  156  000011b8  0c000088	jal	_Printf
  157  000011bc  54000000	nop; not filled.
  158  000011c0  0c000188	jal	_Exit
  159  000011c4  54000000	nop; not filled.
  160  000011c8  23bd0010	addi	r29,r29,#16
  161  000011cc          	L18_LF0:
  162  000011cc  0c000080	jal	_getpid
  163  000011d0  54000000	nop; not filled.
  164  000011d4  23bdfff8	addi	r29,r29,#-8
  165  000011d8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  166  000011dc  248430a0	addui	r4,r4,(LC3_LF0)&0xffff
  167  000011e0  afa40000	sw	(r29),r4
  168  000011e4  afa10004	sw	4(r29),r1
  169  000011e8  0c000058	jal	_Printf
  170  000011ec  54000000	nop; not filled.
  171  000011f0  23bd0008	addi	r29,r29,#8
  172  000011f4  0c000f00	jal	_exit
  173  000011f8  54000000	nop
  174  000011fc          	.endproc _main
  175                      ;;;
  176                      ;;; Stub functions for DLX traps.
  177                      ;;;
  178                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  179                      ;;;
  180                      ;;; The traps such as Open and Close
  181                      ;;; (note the capital letters) are for use by user programs.  The traps
  182                      ;;; with names such as open and close (lower case) are for use by the OS.
  183                      ;;;
  186  000011fc          	.align 2
  188                      ;;; The following are the traps to be used by user-level programs
  189                      ;;;
  191  000011fc          	.align 2
  192  000011fc          	.proc _Open
  193  000011fc          	.global _Open
  194  000011fc          	_Open:
  195                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  196                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  197                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  198  000011fc  44000213	trap	#0x213
  199  00001200  4be00000	jr	r31
  200  00001204  54000000	nop
  201  00001208          	.endproc _Open
  203  00001208          	.proc _Close
  204  00001208          	.global _Close
  205  00001208          	_Close:
  206  00001208  44000214	trap	#0x214
  207  0000120c  4be00000	jr	r31
  208  00001210  54000000	nop
  209  00001214          	.endproc _Close
  211  00001214          	.proc _Read
  212  00001214          	.global _Read
  213  00001214          	_Read:
  214  00001214  44000210	trap	#0x210
  215  00001218  4be00000	jr	r31
  216  0000121c  54000000	nop
  217  00001220          	.endproc _Read
  219  00001220          	.proc _Write
  220  00001220          	.global _Write
  221  00001220          	_Write:
  222  00001220  44000211	trap	#0x211
  223  00001224  4be00000	jr	r31
  224  00001228  54000000	nop
  225  0000122c          	.endproc _Write
  227  0000122c          	.proc _Lseek
  228  0000122c          	.global _Lseek
  229  0000122c          	_Lseek:
  230  0000122c  44000212	trap	#0x212
  231  00001230  4be00000	jr	r31
  232  00001234  54000000	nop
  233  00001238          	.endproc _Lseek
  235  00001238          	.proc _Putchar
  236  00001238          	.global _Putchar
  237  00001238          	_Putchar:
  238  00001238  44000280	trap	#0x280
  239  0000123c  4be00000	jr	r31
  240  00001240  54000000	nop
  241  00001244          	.endproc _Putchar
  243  00001244          	.proc _Printf
  244  00001244          	.global _Printf
  245  00001244          	_Printf:
  246  00001244  44000201	trap	#0x201
  247  00001248  4be00000	jr	r31
  248  0000124c  54000000	nop
  249  00001250          	.endproc _Printf
  251  00001250          	.proc _getpid
  252  00001250          	.global _getpid
  253  00001250          	_getpid:
  254  00001250  44000431	trap	#0x431
  255  00001254  4be00000	jr	r31
  256  00001258  54000000	nop
  257  0000125c          	.endproc _getpid
  259  0000125c          	.proc _process_create
  260  0000125c          	.global _process_create
  261  0000125c          	_process_create:
  262  0000125c  44000432	trap	#0x432
  263  00001260  4be00000	jr	r31
  264  00001264  54000000	nop
  265  00001268          	.endproc _process_create
  267  00001268          	.proc _shmget
  268  00001268          	.global _shmget
  269  00001268          	_shmget:
  270  00001268  44000440	trap	#0x440
  271  0000126c  4be00000	jr	r31
  272  00001270  54000000	nop
  273  00001274          	.endproc _shmget
  275  00001274          	.proc _shmat
  276  00001274          	.global _shmat
  277  00001274          	_shmat:
  278  00001274  44000441	trap	#0x441
  279  00001278  4be00000	jr	r31
  280  0000127c  54000000	nop
  281  00001280          	.endproc _shmat
  283  00001280          	.proc _sem_create
  284  00001280          	.global _sem_create
  285  00001280          	_sem_create:
  286  00001280  44000450	trap	#0x450
  287  00001284  4be00000	jr	r31
  288  00001288  54000000	nop
  289  0000128c          	.endproc _sem_create
  291  0000128c          	.proc _sem_wait
  292  0000128c          	.global _sem_wait
  293  0000128c          	_sem_wait:
  294  0000128c  44000451	trap	#0x451
  295  00001290  4be00000	jr	r31
  296  00001294  54000000	nop
  297  00001298          	.endproc _sem_wait
  299  00001298          	.proc _sem_signal
  300  00001298          	.global _sem_signal
  301  00001298          	_sem_signal:
  302  00001298  44000452	trap	#0x452
  303  0000129c  4be00000	jr	r31
  304  000012a0  54000000	nop
  305  000012a4          	.endproc _sem_signal
  307  000012a4          	.proc _lock_create
  308  000012a4          	.global _lock_create
  309  000012a4          	_lock_create:
  310  000012a4  44000453	trap	#0x453
  311  000012a8  4be00000	jr	r31
  312  000012ac  54000000	nop
  313  000012b0          	.endproc _lock_create
  315  000012b0          	.proc _lock_acquire
  316  000012b0          	.global _lock_acquire
  317  000012b0          	_lock_acquire:
  318  000012b0  44000454	trap	#0x454
  319  000012b4  4be00000	jr	r31
  320  000012b8  54000000	nop
  321  000012bc          	.endproc _lock_acquire
  323  000012bc          	.proc _lock_release
  324  000012bc          	.global _lock_release
  325  000012bc          	_lock_release:
  326  000012bc  44000455	trap	#0x455
  327  000012c0  4be00000	jr	r31
  328  000012c4  54000000	nop
  329  000012c8          	.endproc _lock_release
  331  000012c8          	.proc _cond_create
  332  000012c8          	.global _cond_create
  333  000012c8          	_cond_create:
  334  000012c8  44000456	trap	#0x456
  335  000012cc  4be00000	jr	r31
  336  000012d0  54000000	nop
  337  000012d4          	.endproc _cond_create
  339  000012d4          	.proc _cond_wait
  340  000012d4          	.global _cond_wait
  341  000012d4          	_cond_wait:
  342  000012d4  44000457	trap	#0x457
  343  000012d8  4be00000	jr	r31
  344  000012dc  54000000	nop
  345  000012e0          	.endproc _cond_wait
  347  000012e0          	.proc _cond_signal
  348  000012e0          	.global _cond_signal
  349  000012e0          	_cond_signal:
  350  000012e0  44000458	trap	#0x458
  351  000012e4  4be00000	jr	r31
  352  000012e8  54000000	nop
  353  000012ec          	.endproc _cond_signal
  355  000012ec          	.proc _cond_broadcast
  356  000012ec          	.global _cond_broadcast
  357  000012ec          	_cond_broadcast:
  358  000012ec  44000459	trap	#0x459
  359  000012f0  4be00000	jr	r31
  360  000012f4  54000000	nop
  361  000012f8          	.endproc _cond_broadcast
  363  000012f8          	.proc _mbox_create
  364  000012f8          	.global _mbox_create
  365  000012f8          	_mbox_create:
  366  000012f8  44000460	trap	#0x460
  367  000012fc  4be00000	jr	r31
  368  00001300  54000000	nop
  369  00001304          	.endproc _mbox_create
  371  00001304          	.proc _mbox_open
  372  00001304          	.global _mbox_open
  373  00001304          	_mbox_open:
  374  00001304  44000461	trap	#0x461
  375  00001308  4be00000	jr	r31
  376  0000130c  54000000	nop
  377  00001310          	.endproc _mbox_open
  379  00001310          	.proc _mbox_close
  380  00001310          	.global _mbox_close
  381  00001310          	_mbox_close:
  382  00001310  44000462	trap	#0x462
  383  00001314  4be00000	jr	r31
  384  00001318  54000000	nop
  385  0000131c          	.endproc _mbox_close
  387  0000131c          	.proc _mbox_send
  388  0000131c          	.global _mbox_send
  389  0000131c          	_mbox_send:
  390  0000131c  44000463	trap	#0x463
  391  00001320  4be00000	jr	r31
  392  00001324  54000000	nop
  393  00001328          	.endproc _mbox_send
  395  00001328          	.proc _mbox_recv
  396  00001328          	.global _mbox_recv
  397  00001328          	_mbox_recv:
  398  00001328  44000464	trap	#0x464
  399  0000132c  4be00000	jr	r31
  400  00001330  54000000	nop
  401  00001334          	.endproc _mbox_recv
  403  00001334          	.proc _sleep
  404  00001334          	.global _sleep
  405  00001334          	_sleep:
  406  00001334  44000465	trap	#0x465
  407  00001338  4be00000	jr	r31
  408  0000133c  54000000	nop
  409  00001340          	.endproc _sleep
  411  00001340          	.proc _yield
  412  00001340          	.global _yield
  413  00001340          	_yield:
  414  00001340  44000466	trap	#0x466
  415  00001344  4be00000	jr	r31
  416  00001348  54000000	nop
  417  0000134c          	.endproc _yield
  420  0000134c          	.proc _Exit
  421  0000134c          	.global _Exit
  422  0000134c          	_Exit:
  423  0000134c  44000500	trap	#0x500
  424  00001350  4be00000	jr	r31
  425  00001354  54000000	nop
  426  00001358          	.endproc _Exit
  429  00001358          	.proc _malloc
  430  00001358          	.global _malloc
  431  00001358          	_malloc:
  432  00001358  44000467	trap	#0x467
  433  0000135c  4be00000	jr	r31
  434  00001360          	.endproc _malloc
  437  00001360          	.proc _mfree
  438  00001360          	.global _mfree
  439  00001360          	_mfree:
  440  00001360  44000468	trap	#0x468
  441  00001364  4be00000	jr	r31
  442  00001368          	.endproc _mfree
  443                      ; Compiled by GCC
  445  00001368          	.align 2
  446  00001368          	.proc _isspace
  447  00001368          	.global _isspace
  448  00001368          	_isspace:
  449                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  450  00001368  afbefffc	sw	-4(r29),r30; push fp
  451  0000136c  001df020	add	r30,r0,r29; fp = sp
  452  00001370  afbffff8	sw	-8(r29),r31; push ret addr
  453  00001374  2fbd0018	subui	r29,r29,#24; alloc local storage
  454  00001378  afa20000	sw	0(r29),r2
  455  0000137c  afa30004	sw	4(r29),r3
  456  00001380  afa40008	sw	8(r29),r4
  457  00001384  83c20003	lb	r2,3(r30)
  458  00001388  20010000	addi	r1,r0,#0
  459  0000138c  304300ff	andi	r3,r2,#0x00ff
  460  00001390  60640020	seqi	r4,r3,#32
  461  00001394  1480002c	bnez	r4,L3_LF2
  462  00001398  54000000	nop; delay slot nop
  463  0000139c  304300ff	andi	r3,r2,#0x00ff
  464  000013a0  60640009	seqi	r4,r3,#9
  465  000013a4  1480001c	bnez	r4,L3_LF2
  466  000013a8  54000000	nop; delay slot nop
  467  000013ac  304300ff	andi	r3,r2,#0x00ff
  468  000013b0  6064000a	seqi	r4,r3,#10
  469  000013b4  1480000c	bnez	r4,L3_LF2
  470  000013b8  54000000	nop; delay slot nop
  471  000013bc  08000008	j	L2_LF2
  472  000013c0  54000000	nop; delay slot nop
  473  000013c4          	L3_LF2:
  474  000013c4  20010001	addi	r1,r0,#1
  475  000013c8          	L2_LF2:
  476  000013c8  08000004	j	L1_LF2
  477  000013cc  54000000	nop; delay slot nop
  478  000013d0          	L1_LF2:
  479  000013d0  8fa20000	lw	r2,0(r29)
  480  000013d4  8fa30004	lw	r3,4(r29)
  481  000013d8  8fa40008	lw	r4,8(r29)
  482  000013dc  8fdffff8	lw	r31,-8(r30)
  483  000013e0  001ee820	add	r29,r0,r30
  484  000013e4  8fdefffc	lw	r30,-4(r30)
  485  000013e8  4be00000	jr	r31
  486  000013ec  54000000	nop
  487  000013f0          	.endproc _isspace
  488  000013f0          	.align 2
  489  000013f0          	.proc _isxdigit
  490  000013f0          	.global _isxdigit
  491  000013f0          	_isxdigit:
  492                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  493  000013f0  afbefffc	sw	-4(r29),r30; push fp
  494  000013f4  001df020	add	r30,r0,r29; fp = sp
  495  000013f8  afbffff8	sw	-8(r29),r31; push ret addr
  496  000013fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  497  00001400  afa20000	sw	0(r29),r2
  498  00001404  afa30004	sw	4(r29),r3
  499  00001408  afa40008	sw	8(r29),r4
  500  0000140c  83c20003	lb	r2,3(r30)
  501  00001410  20010000	addi	r1,r0,#0
  502  00001414  304300ff	andi	r3,r2,#0x00ff
  503  00001418  6c64002f	sgtui	r4,r3,#47
  504  0000141c  1080001c	beqz	r4,L7_LF2
  505  00001420  54000000	nop; delay slot nop
  506  00001424  304300ff	andi	r3,r2,#0x00ff
  507  00001428  70640039	sleui	r4,r3,#57
  508  0000142c  1480005c	bnez	r4,L6_LF2
  509  00001430  54000000	nop; delay slot nop
  510  00001434  08000004	j	L7_LF2
  511  00001438  54000000	nop; delay slot nop
  512  0000143c          	L7_LF2:
  513  0000143c  304300ff	andi	r3,r2,#0x00ff
  514  00001440  6c640060	sgtui	r4,r3,#96
  515  00001444  1080001c	beqz	r4,L8_LF2
  516  00001448  54000000	nop; delay slot nop
  517  0000144c  304300ff	andi	r3,r2,#0x00ff
  518  00001450  70640066	sleui	r4,r3,#102
  519  00001454  14800034	bnez	r4,L6_LF2
  520  00001458  54000000	nop; delay slot nop
  521  0000145c  08000004	j	L8_LF2
  522  00001460  54000000	nop; delay slot nop
  523  00001464          	L8_LF2:
  524  00001464  304300ff	andi	r3,r2,#0x00ff
  525  00001468  6c640040	sgtui	r4,r3,#64
  526  0000146c  10800020	beqz	r4,L5_LF2
  527  00001470  54000000	nop; delay slot nop
  528  00001474  304300ff	andi	r3,r2,#0x00ff
  529  00001478  70640041	sleui	r4,r3,#65
  530  0000147c  1480000c	bnez	r4,L6_LF2
  531  00001480  54000000	nop; delay slot nop
  532  00001484  08000008	j	L5_LF2
  533  00001488  54000000	nop; delay slot nop
  534  0000148c          	L6_LF2:
  535  0000148c  20010001	addi	r1,r0,#1
  536  00001490          	L5_LF2:
  537  00001490  08000004	j	L4_LF2
  538  00001494  54000000	nop; delay slot nop
  539  00001498          	L4_LF2:
  540  00001498  8fa20000	lw	r2,0(r29)
  541  0000149c  8fa30004	lw	r3,4(r29)
  542  000014a0  8fa40008	lw	r4,8(r29)
  543  000014a4  8fdffff8	lw	r31,-8(r30)
  544  000014a8  001ee820	add	r29,r0,r30
  545  000014ac  8fdefffc	lw	r30,-4(r30)
  546  000014b0  4be00000	jr	r31
  547  000014b4  54000000	nop
  548  000014b8          	.endproc _isxdigit
  549  000014b8          	.align 2
  550  000014b8          	.proc _dstrcpy
  551  000014b8          	.global _dstrcpy
  552  000014b8          	_dstrcpy:
  553                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  554  000014b8  afbefffc	sw	-4(r29),r30; push fp
  555  000014bc  001df020	add	r30,r0,r29; fp = sp
  556  000014c0  afbffff8	sw	-8(r29),r31; push ret addr
  557  000014c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  558  000014c8  afa20000	sw	0(r29),r2
  559  000014cc  afa30004	sw	4(r29),r3
  560  000014d0  8fc10000	lw	r1,(r30)
  561  000014d4  afc1fff4	sw	-12(r30),r1
  562  000014d8          	L10_LF2:
  563  000014d8  8fc10000	lw	r1,(r30)
  564  000014dc  20220001	addi	r2,r1,#1
  565  000014e0  afc20000	sw	(r30),r2
  566  000014e4  8fc20004	lw	r2,4(r30)
  567  000014e8  20430001	addi	r3,r2,#1
  568  000014ec  afc30004	sw	4(r30),r3
  569  000014f0  80420000	lb	r2,(r2)
  570  000014f4  a0220000	sb	(r1),r2
  571  000014f8  a3c2fff3	sb	-13(r30),r2
  572  000014fc          	L12_LF2:
  573  000014fc  93c1fff3	lbu	r1,-13(r30)
  574  00001500  64220000	snei	r2,r1,#0
  575  00001504  1440000c	bnez	r2,L13_LF2
  576  00001508  54000000	nop; delay slot nop
  577  0000150c  0800000c	j	L11_LF2
  578  00001510  54000000	nop; delay slot nop
  579  00001514          	L13_LF2:
  580  00001514  0bffffc0	j	L10_LF2
  581  00001518  54000000	nop; delay slot nop
  582  0000151c          	L11_LF2:
  583  0000151c  8fc1fff4	lw	r1,-12(r30)
  584  00001520  08000004	j	L9_LF2
  585  00001524  54000000	nop; delay slot nop
  586  00001528          	L9_LF2:
  587  00001528  8fa20000	lw	r2,0(r29)
  588  0000152c  8fa30004	lw	r3,4(r29)
  589  00001530  8fdffff8	lw	r31,-8(r30)
  590  00001534  001ee820	add	r29,r0,r30
  591  00001538  8fdefffc	lw	r30,-4(r30)
  592  0000153c  4be00000	jr	r31
  593  00001540  54000000	nop
  594  00001544          	.endproc _dstrcpy
  595  00001544          	.align 2
  596  00001544          	.proc _dstrncpy
  597  00001544          	.global _dstrncpy
  598  00001544          	_dstrncpy:
  599                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  600  00001544  afbefffc	sw	-4(r29),r30; push fp
  601  00001548  001df020	add	r30,r0,r29; fp = sp
  602  0000154c  afbffff8	sw	-8(r29),r31; push ret addr
  603  00001550  2fbd0018	subui	r29,r29,#24; alloc local storage
  604  00001554  afa20000	sw	0(r29),r2
  605  00001558  afa30004	sw	4(r29),r3
  606  0000155c  8fc10000	lw	r1,(r30)
  607  00001560  afc1fff4	sw	-12(r30),r1
  608  00001564          	L15_LF2:
  609  00001564  8fc10008	lw	r1,8(r30)
  610  00001568  2022ffff	addi	r2,r1,#-1
  611  0000156c  afc20008	sw	8(r30),r2
  612  00001570  70210000	slei	r1,r1,#0
  613  00001574  1020000c	beqz	r1,L18_LF2
  614  00001578  54000000	nop; delay slot nop
  615  0000157c  08000048	j	L16_LF2
  616  00001580  54000000	nop; delay slot nop
  617  00001584          	L18_LF2:
  618  00001584  8fc10000	lw	r1,(r30)
  619  00001588  20220001	addi	r2,r1,#1
  620  0000158c  afc20000	sw	(r30),r2
  621  00001590  8fc20004	lw	r2,4(r30)
  622  00001594  20430001	addi	r3,r2,#1
  623  00001598  afc30004	sw	4(r30),r3
  624  0000159c  80420000	lb	r2,(r2)
  625  000015a0  a0220000	sb	(r1),r2
  626  000015a4  a3c2fff3	sb	-13(r30),r2
  627  000015a8          	L17_LF2:
  628  000015a8  93c1fff3	lbu	r1,-13(r30)
  629  000015ac  64220000	snei	r2,r1,#0
  630  000015b0  1440000c	bnez	r2,L19_LF2
  631  000015b4  54000000	nop; delay slot nop
  632  000015b8  0800000c	j	L16_LF2
  633  000015bc  54000000	nop; delay slot nop
  634  000015c0          	L19_LF2:
  635  000015c0  0bffffa0	j	L15_LF2
  636  000015c4  54000000	nop; delay slot nop
  637  000015c8          	L16_LF2:
  638  000015c8  8fc1fff4	lw	r1,-12(r30)
  639  000015cc  08000004	j	L14_LF2
  640  000015d0  54000000	nop; delay slot nop
  641  000015d4          	L14_LF2:
  642  000015d4  8fa20000	lw	r2,0(r29)
  643  000015d8  8fa30004	lw	r3,4(r29)
  644  000015dc  8fdffff8	lw	r31,-8(r30)
  645  000015e0  001ee820	add	r29,r0,r30
  646  000015e4  8fdefffc	lw	r30,-4(r30)
  647  000015e8  4be00000	jr	r31
  648  000015ec  54000000	nop
  649  000015f0          	.endproc _dstrncpy
  650  000015f0          	.align 2
  651  000015f0          	.proc _dstrcat
  652  000015f0          	.global _dstrcat
  653  000015f0          	_dstrcat:
  654                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  655  000015f0  afbefffc	sw	-4(r29),r30; push fp
  656  000015f4  001df020	add	r30,r0,r29; fp = sp
  657  000015f8  afbffff8	sw	-8(r29),r31; push ret addr
  658  000015fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  659  00001600  afa20000	sw	0(r29),r2
  660  00001604  8fc10000	lw	r1,(r30)
  661  00001608  afc1fff4	sw	-12(r30),r1
  662  0000160c          	L21_LF2:
  663  0000160c  8fc10000	lw	r1,(r30)
  664  00001610  90220000	lbu	r2,(r1)
  665  00001614  64410000	snei	r1,r2,#0
  666  00001618  1420000c	bnez	r1,L23_LF2
  667  0000161c  54000000	nop; delay slot nop
  668  00001620  0800001c	j	L22_LF2
  669  00001624  54000000	nop; delay slot nop
  670  00001628          	L23_LF2:
  671  00001628  8fc20000	lw	r2,(r30)
  672  0000162c  20410001	addi	r1,r2,#1
  673  00001630  00011020	add	r2,r0,r1
  674  00001634  afc20000	sw	(r30),r2
  675  00001638  0bffffd0	j	L21_LF2
  676  0000163c  54000000	nop; delay slot nop
  677  00001640          	L22_LF2:
  678  00001640  23bdfff8	addi	r29,r29,#-8
  679  00001644  001d0820	add	r1,r0,r29
  680  00001648  8fc20000	lw	r2,(r30)
  681  0000164c  ac220000	sw	(r1),r2
  682  00001650  8fc20004	lw	r2,4(r30)
  683  00001654  ac220004	sw	4(r1),r2
  684  00001658  0ffffe5c	jal	_dstrcpy
  685  0000165c  54000000	nop; delay slot nop
  686  00001660  23bd0008	addi	r29,r29,#8
  687  00001664  8fc1fff4	lw	r1,-12(r30)
  688  00001668  08000004	j	L20_LF2
  689  0000166c  54000000	nop; delay slot nop
  690  00001670          	L20_LF2:
  691  00001670  8fa20000	lw	r2,0(r29)
  692  00001674  8fdffff8	lw	r31,-8(r30)
  693  00001678  001ee820	add	r29,r0,r30
  694  0000167c  8fdefffc	lw	r30,-4(r30)
  695  00001680  4be00000	jr	r31
  696  00001684  54000000	nop
  697  00001688          	.endproc _dstrcat
  698  00001688          	.align 2
  699  00001688          	.proc _dstrncmp
  700  00001688          	.global _dstrncmp
  701  00001688          	_dstrncmp:
  702                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  703  00001688  afbefffc	sw	-4(r29),r30; push fp
  704  0000168c  001df020	add	r30,r0,r29; fp = sp
  705  00001690  afbffff8	sw	-8(r29),r31; push ret addr
  706  00001694  2fbd0018	subui	r29,r29,#24; alloc local storage
  707  00001698  afa20000	sw	0(r29),r2
  708  0000169c  afa30004	sw	4(r29),r3
  709  000016a0  54000000	nop
  710  000016a4  20010000	addi	r1,r0,#0
  711  000016a8  afc1fff4	sw	-12(r30),r1
  712  000016ac          	L25_LF2:
  713  000016ac  8fc1fff4	lw	r1,-12(r30)
  714  000016b0  8fc20008	lw	r2,8(r30)
  715  000016b4  0022082a	slt	r1,r1,r2
  716  000016b8  1420000c	bnez	r1,L28_LF2
  717  000016bc  54000000	nop; delay slot nop
  718  000016c0  08000088	j	L26_LF2
  719  000016c4  54000000	nop; delay slot nop
  720  000016c8          	L28_LF2:
  721  000016c8  8fc10004	lw	r1,4(r30)
  722  000016cc  90220000	lbu	r2,(r1)
  723  000016d0  64410000	snei	r1,r2,#0
  724  000016d4  14200018	bnez	r1,L29_LF2
  725  000016d8  54000000	nop; delay slot nop
  726  000016dc  20010000	addi	r1,r0,#0
  727  000016e0  080000d8	j	L24_LF2
  728  000016e4  54000000	nop; delay slot nop
  729  000016e8  08000028	j	L30_LF2
  730  000016ec  54000000	nop; delay slot nop
  731  000016f0          	L29_LF2:
  732  000016f0  8fc10000	lw	r1,(r30)
  733  000016f4  8fc20004	lw	r2,4(r30)
  734  000016f8  90210000	lbu	r1,(r1)
  735  000016fc  90420000	lbu	r2,(r2)
  736  00001700  00220829	sne	r1,r1,r2
  737  00001704  1020000c	beqz	r1,L30_LF2
  738  00001708  54000000	nop; delay slot nop
  739  0000170c  0800003c	j	L26_LF2
  740  00001710  54000000	nop; delay slot nop
  741  00001714          	L31_LF2:
  742  00001714          	L30_LF2:
  743  00001714  8fc20000	lw	r2,(r30)
  744  00001718  20410001	addi	r1,r2,#1
  745  0000171c  00011020	add	r2,r0,r1
  746  00001720  afc20000	sw	(r30),r2
  747  00001724  8fc20004	lw	r2,4(r30)
  748  00001728  20410001	addi	r1,r2,#1
  749  0000172c  00011020	add	r2,r0,r1
  750  00001730  afc20004	sw	4(r30),r2
  751  00001734          	L27_LF2:
  752  00001734  8fc2fff4	lw	r2,-12(r30)
  753  00001738  20410001	addi	r1,r2,#1
  754  0000173c  00011020	add	r2,r0,r1
  755  00001740  afc2fff4	sw	-12(r30),r2
  756  00001744  0bffff64	j	L25_LF2
  757  00001748  54000000	nop; delay slot nop
  758  0000174c          	L26_LF2:
  759  0000174c  8fc1fff4	lw	r1,-12(r30)
  760  00001750  8fc20008	lw	r2,8(r30)
  761  00001754  00220828	seq	r1,r1,r2
  762  00001758  10200018	beqz	r1,L32_LF2
  763  0000175c  54000000	nop; delay slot nop
  764  00001760  20010000	addi	r1,r0,#0
  765  00001764  08000054	j	L24_LF2
  766  00001768  54000000	nop; delay slot nop
  767  0000176c  0800004c	j	L33_LF2
  768  00001770  54000000	nop; delay slot nop
  769  00001774          	L32_LF2:
  770  00001774  8fc20000	lw	r2,(r30)
  771  00001778  90410000	lbu	r1,(r2)
  772  0000177c  8fc20004	lw	r2,4(r30)
  773  00001780  90430000	lbu	r3,(r2)
  774  00001784  00230822	sub	r1,r1,r3
  775  00001788  74220000	sgei	r2,r1,#0
  776  0000178c  10400020	beqz	r2,L34_LF2
  777  00001790  54000000	nop; delay slot nop
  778  00001794  8fc10000	lw	r1,(r30)
  779  00001798  8fc20004	lw	r2,4(r30)
  780  0000179c  90210000	lbu	r1,(r1)
  781  000017a0  90420000	lbu	r2,(r2)
  782  000017a4  00220829	sne	r1,r1,r2
  783  000017a8  08000008	j	L35_LF2
  784  000017ac  54000000	nop; delay slot nop
  785  000017b0          	L34_LF2:
  786  000017b0  2001ffff	addi	r1,r0,#-1
  787  000017b4          	L35_LF2:
  788  000017b4  08000004	j	L24_LF2
  789  000017b8  54000000	nop; delay slot nop
  790  000017bc          	L33_LF2:
  791  000017bc          	L24_LF2:
  792  000017bc  8fa20000	lw	r2,0(r29)
  793  000017c0  8fa30004	lw	r3,4(r29)
  794  000017c4  8fdffff8	lw	r31,-8(r30)
  795  000017c8  001ee820	add	r29,r0,r30
  796  000017cc  8fdefffc	lw	r30,-4(r30)
  797  000017d0  4be00000	jr	r31
  798  000017d4  54000000	nop
  799  000017d8          	.endproc _dstrncmp
  800  000017d8          	.align 2
  801  000017d8          	.proc _dstrlen
  802  000017d8          	.global _dstrlen
  803  000017d8          	_dstrlen:
  804                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  805  000017d8  afbefffc	sw	-4(r29),r30; push fp
  806  000017dc  001df020	add	r30,r0,r29; fp = sp
  807  000017e0  afbffff8	sw	-8(r29),r31; push ret addr
  808  000017e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  809  000017e8  afa20000	sw	0(r29),r2
  810  000017ec  20010000	addi	r1,r0,#0
  811  000017f0  afc1fff4	sw	-12(r30),r1
  812  000017f4          	L37_LF2:
  813  000017f4  8fc10000	lw	r1,(r30)
  814  000017f8  20220001	addi	r2,r1,#1
  815  000017fc  afc20000	sw	(r30),r2
  816  00001800  90210000	lbu	r1,(r1)
  817  00001804  64220000	snei	r2,r1,#0
  818  00001808  1440000c	bnez	r2,L39_LF2
  819  0000180c  54000000	nop; delay slot nop
  820  00001810  0800001c	j	L38_LF2
  821  00001814  54000000	nop; delay slot nop
  822  00001818          	L39_LF2:
  823  00001818  8fc2fff4	lw	r2,-12(r30)
  824  0000181c  20410001	addi	r1,r2,#1
  825  00001820  00011020	add	r2,r0,r1
  826  00001824  afc2fff4	sw	-12(r30),r2
  827  00001828  0bffffc8	j	L37_LF2
  828  0000182c  54000000	nop; delay slot nop
  829  00001830          	L38_LF2:
  830  00001830  8fc1fff4	lw	r1,-12(r30)
  831  00001834  08000004	j	L36_LF2
  832  00001838  54000000	nop; delay slot nop
  833  0000183c          	L36_LF2:
  834  0000183c  8fa20000	lw	r2,0(r29)
  835  00001840  8fdffff8	lw	r31,-8(r30)
  836  00001844  001ee820	add	r29,r0,r30
  837  00001848  8fdefffc	lw	r30,-4(r30)
  838  0000184c  4be00000	jr	r31
  839  00001850  54000000	nop
  840  00001854          	.endproc _dstrlen
  841  00001854          	.align 2
  842  00001854          	.proc _dstrstr
  843  00001854          	.global _dstrstr
  844  00001854          	_dstrstr:
  845                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  846  00001854  afbefffc	sw	-4(r29),r30; push fp
  847  00001858  001df020	add	r30,r0,r29; fp = sp
  848  0000185c  afbffff8	sw	-8(r29),r31; push ret addr
  849  00001860  2fbd0018	subui	r29,r29,#24; alloc local storage
  850  00001864  afa20000	sw	0(r29),r2
  851  00001868  23bdfff8	addi	r29,r29,#-8
  852  0000186c  001d0820	add	r1,r0,r29
  853  00001870  8fc20004	lw	r2,4(r30)
  854  00001874  ac220000	sw	(r1),r2
  855  00001878  0fffff5c	jal	_dstrlen
  856  0000187c  54000000	nop; delay slot nop
  857  00001880  23bd0008	addi	r29,r29,#8
  858  00001884  afc1fff4	sw	-12(r30),r1
  859  00001888          	L41_LF2:
  860  00001888  8fc10000	lw	r1,(r30)
  861  0000188c  90220000	lbu	r2,(r1)
  862  00001890  64410000	snei	r1,r2,#0
  863  00001894  1420000c	bnez	r1,L43_LF2
  864  00001898  54000000	nop; delay slot nop
  865  0000189c  08000060	j	L42_LF2
  866  000018a0  54000000	nop; delay slot nop
  867  000018a4          	L43_LF2:
  868  000018a4  23bdfff0	addi	r29,r29,#-16
  869  000018a8  001d0820	add	r1,r0,r29
  870  000018ac  8fc20000	lw	r2,(r30)
  871  000018b0  ac220000	sw	(r1),r2
  872  000018b4  8fc20004	lw	r2,4(r30)
  873  000018b8  ac220004	sw	4(r1),r2
  874  000018bc  8fc2fff4	lw	r2,-12(r30)
  875  000018c0  ac220008	sw	8(r1),r2
  876  000018c4  0ffffdc0	jal	_dstrncmp
  877  000018c8  54000000	nop; delay slot nop
  878  000018cc  23bd0010	addi	r29,r29,#16
  879  000018d0  64220000	snei	r2,r1,#0
  880  000018d4  14400010	bnez	r2,L44_LF2
  881  000018d8  54000000	nop; delay slot nop
  882  000018dc  8fc10000	lw	r1,(r30)
  883  000018e0  08000028	j	L40_LF2
  884  000018e4  54000000	nop; delay slot nop
  885  000018e8          	L44_LF2:
  886  000018e8  8fc20000	lw	r2,(r30)
  887  000018ec  20410001	addi	r1,r2,#1
  888  000018f0  00011020	add	r2,r0,r1
  889  000018f4  afc20000	sw	(r30),r2
  890  000018f8  0bffff8c	j	L41_LF2
  891  000018fc  54000000	nop; delay slot nop
  892  00001900          	L42_LF2:
  893  00001900  20010000	addi	r1,r0,#0
  894  00001904  08000004	j	L40_LF2
  895  00001908  54000000	nop; delay slot nop
  896  0000190c          	L40_LF2:
  897  0000190c  8fa20000	lw	r2,0(r29)
  898  00001910  8fdffff8	lw	r31,-8(r30)
  899  00001914  001ee820	add	r29,r0,r30
  900  00001918  8fdefffc	lw	r30,-4(r30)
  901  0000191c  4be00000	jr	r31
  902  00001920  54000000	nop
  903  00001924          	.endproc _dstrstr
  904  00001924          	.align 2
  905  00001924          	.proc _dmindex
  906  00001924          	.global _dmindex
  907  00001924          	_dmindex:
  908                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  909  00001924  afbefffc	sw	-4(r29),r30; push fp
  910  00001928  001df020	add	r30,r0,r29; fp = sp
  911  0000192c  afbffff8	sw	-8(r29),r31; push ret addr
  912  00001930  2fbd0018	subui	r29,r29,#24; alloc local storage
  913  00001934  afa20000	sw	0(r29),r2
  914  00001938  54000000	nop
  915  0000193c          	L46_LF2:
  916  0000193c  8fc10000	lw	r1,(r30)
  917  00001940  90220000	lbu	r2,(r1)
  918  00001944  64410000	snei	r1,r2,#0
  919  00001948  1420000c	bnez	r1,L48_LF2
  920  0000194c  54000000	nop; delay slot nop
  921  00001950  08000070	j	L47_LF2
  922  00001954  54000000	nop; delay slot nop
  923  00001958          	L48_LF2:
  924  00001958  8fc10004	lw	r1,4(r30)
  925  0000195c  afc1fff4	sw	-12(r30),r1
  926  00001960          	L49_LF2:
  927  00001960  8fc1fff4	lw	r1,-12(r30)
  928  00001964  90220000	lbu	r2,(r1)
  929  00001968  64410000	snei	r1,r2,#0
  930  0000196c  1420000c	bnez	r1,L52_LF2
  931  00001970  54000000	nop; delay slot nop
  932  00001974  08000044	j	L50_LF2
  933  00001978  54000000	nop; delay slot nop
  934  0000197c          	L52_LF2:
  935  0000197c  8fc10000	lw	r1,(r30)
  936  00001980  8fc2fff4	lw	r2,-12(r30)
  937  00001984  90210000	lbu	r1,(r1)
  938  00001988  90420000	lbu	r2,(r2)
  939  0000198c  00220828	seq	r1,r1,r2
  940  00001990  10200010	beqz	r1,L51_LF2
  941  00001994  54000000	nop; delay slot nop
  942  00001998  8fc10000	lw	r1,(r30)
  943  0000199c  08000030	j	L45_LF2
  944  000019a0  54000000	nop; delay slot nop
  945  000019a4          	L53_LF2:
  946  000019a4          	L51_LF2:
  947  000019a4  8fc2fff4	lw	r2,-12(r30)
  948  000019a8  20410001	addi	r1,r2,#1
  949  000019ac  00011020	add	r2,r0,r1
  950  000019b0  afc2fff4	sw	-12(r30),r2
  951  000019b4  0bffffa8	j	L49_LF2
  952  000019b8  54000000	nop; delay slot nop
  953  000019bc          	L50_LF2:
  954  000019bc  0bffff7c	j	L46_LF2
  955  000019c0  54000000	nop; delay slot nop
  956  000019c4          	L47_LF2:
  957  000019c4  20010000	addi	r1,r0,#0
  958  000019c8  08000004	j	L45_LF2
  959  000019cc  54000000	nop; delay slot nop
  960  000019d0          	L45_LF2:
  961  000019d0  8fa20000	lw	r2,0(r29)
  962  000019d4  8fdffff8	lw	r31,-8(r30)
  963  000019d8  001ee820	add	r29,r0,r30
  964  000019dc  8fdefffc	lw	r30,-4(r30)
  965  000019e0  4be00000	jr	r31
  966  000019e4  54000000	nop
  967  000019e8          	.endproc _dmindex
  968  000019e8          	.align 2
  969  000019e8          	.proc _dindex
  970  000019e8          	.global _dindex
  971  000019e8          	_dindex:
  972                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  973  000019e8  afbefffc	sw	-4(r29),r30; push fp
  974  000019ec  001df020	add	r30,r0,r29; fp = sp
  975  000019f0  afbffff8	sw	-8(r29),r31; push ret addr
  976  000019f4  2fbd0010	subui	r29,r29,#16; alloc local storage
  977  000019f8  afa20000	sw	0(r29),r2
  978  000019fc  54000000	nop
  979  00001a00          	L55_LF2:
  980  00001a00  8fc10000	lw	r1,(r30)
  981  00001a04  90220000	lbu	r2,(r1)
  982  00001a08  64410000	snei	r1,r2,#0
  983  00001a0c  1420000c	bnez	r1,L57_LF2
  984  00001a10  54000000	nop; delay slot nop
  985  00001a14  08000040	j	L56_LF2
  986  00001a18  54000000	nop; delay slot nop
  987  00001a1c          	L57_LF2:
  988  00001a1c  8fc10000	lw	r1,(r30)
  989  00001a20  90220000	lbu	r2,(r1)
  990  00001a24  8fc10004	lw	r1,4(r30)
  991  00001a28  00411028	seq	r2,r2,r1
  992  00001a2c  10400010	beqz	r2,L58_LF2
  993  00001a30  54000000	nop; delay slot nop
  994  00001a34  8fc10000	lw	r1,(r30)
  995  00001a38  08000028	j	L54_LF2
  996  00001a3c  54000000	nop; delay slot nop
  997  00001a40          	L58_LF2:
  998  00001a40  8fc20000	lw	r2,(r30)
  999  00001a44  20410001	addi	r1,r2,#1
 1000  00001a48  00011020	add	r2,r0,r1
 1001  00001a4c  afc20000	sw	(r30),r2
 1002  00001a50  0bffffac	j	L55_LF2
 1003  00001a54  54000000	nop; delay slot nop
 1004  00001a58          	L56_LF2:
 1005  00001a58  20010000	addi	r1,r0,#0
 1006  00001a5c  08000004	j	L54_LF2
 1007  00001a60  54000000	nop; delay slot nop
 1008  00001a64          	L54_LF2:
 1009  00001a64  8fa20000	lw	r2,0(r29)
 1010  00001a68  8fdffff8	lw	r31,-8(r30)
 1011  00001a6c  001ee820	add	r29,r0,r30
 1012  00001a70  8fdefffc	lw	r30,-4(r30)
 1013  00001a74  4be00000	jr	r31
 1014  00001a78  54000000	nop
 1015  00001a7c          	.endproc _dindex
 1016  00001a7c          	.align 2
 1017  00001a7c          	.proc _ditoa
 1018  00001a7c          	.global _ditoa
 1019  00001a7c          	_ditoa:
 1020                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1021  00001a7c  afbefffc	sw	-4(r29),r30; push fp
 1022  00001a80  001df020	add	r30,r0,r29; fp = sp
 1023  00001a84  afbffff8	sw	-8(r29),r31; push ret addr
 1024  00001a88  2fbd0018	subui	r29,r29,#24; alloc local storage
 1025  00001a8c  afa20000	sw	0(r29),r2
 1026  00001a90  afa30004	sw	4(r29),r3
 1027  00001a94  8fc10000	lw	r1,(r30)
 1028  00001a98  68220000	slti	r2,r1,#0
 1029  00001a9c  1040002c	beqz	r2,L60_LF2
 1030  00001aa0  54000000	nop; delay slot nop
 1031  00001aa4  8fc10004	lw	r1,4(r30)
 1032  00001aa8  20220001	addi	r2,r1,#1
 1033  00001aac  afc20004	sw	4(r30),r2
 1034  00001ab0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1035  00001ab4  a0220000	sb	(r1),r2
 1036  00001ab8  8fc10000	lw	r1,(r30)
 1037  00001abc  00011022	sub	r2,r0,r1
 1038  00001ac0  afc20000	sw	(r30),r2
 1039  00001ac4  08000118	j	L61_LF2
 1040  00001ac8  54000000	nop; delay slot nop
 1041  00001acc          	L60_LF2:
 1042  00001acc  8fc10000	lw	r1,(r30)
 1043  00001ad0  64220000	snei	r2,r1,#0
 1044  00001ad4  14400020	bnez	r2,L62_LF2
 1045  00001ad8  54000000	nop; delay slot nop
 1046  00001adc  8fc10004	lw	r1,4(r30)
 1047  00001ae0  20220001	addi	r2,r1,#1
 1048  00001ae4  afc20004	sw	4(r30),r2
 1049  00001ae8  20020030	addi	r2,r0,(#0x30)&0xff
 1050  00001aec  a0220000	sb	(r1),r2
 1051  00001af0  080000ec	j	L61_LF2
 1052  00001af4  54000000	nop; delay slot nop
 1053  00001af8          	L62_LF2:
 1054  00001af8  20010001	addi	r1,r0,#1
 1055  00001afc  afc1fff4	sw	-12(r30),r1
 1056  00001b00          	L64_LF2:
 1057  00001b00  8fc1fff4	lw	r1,-12(r30)
 1058  00001b04  8fc20000	lw	r2,(r30)
 1059  00001b08  0022082c	sle	r1,r1,r2
 1060  00001b0c  1420000c	bnez	r1,L66_LF2
 1061  00001b10  54000000	nop; delay slot nop
 1062  00001b14  08000024	j	L65_LF2
 1063  00001b18  54000000	nop; delay slot nop
 1064  00001b1c          	L67_LF2:
 1065  00001b1c          	L66_LF2:
 1066  00001b1c  8fc1fff4	lw	r1,-12(r30)
 1067  00001b20  00011820	add	r3,r0,r1
 1068  00001b24  50620002	slli	r2,r3,#0x2
 1069  00001b28  00411020	add	r2,r2,r1
 1070  00001b2c  50410001	slli	r1,r2,#0x1
 1071  00001b30  afc1fff4	sw	-12(r30),r1
 1072  00001b34  0bffffc8	j	L64_LF2
 1073  00001b38  54000000	nop; delay slot nop
 1074  00001b3c          	L65_LF2:
 1075  00001b3c  54000000	nop
 1076  00001b40          	L68_LF2:
 1077  00001b40  8fc1fff4	lw	r1,-12(r30)
 1078  00001b44  2002000a	addi	r2,r0,#10
 1079  00001b48  00200035	movi2fp	f0,r1
 1080  00001b4c  00400835	movi2fp	f1,r2
 1081  00001b50  0401000f	div	f0,f0,f1
 1082  00001b54  00000834	movfp2i	r1,f0
 1083  00001b58  afc1fff4	sw	-12(r30),r1
 1084  00001b5c  8fc10004	lw	r1,4(r30)
 1085  00001b60  20220001	addi	r2,r1,#1
 1086  00001b64  afc20004	sw	4(r30),r2
 1087  00001b68  8fc20000	lw	r2,(r30)
 1088  00001b6c  8fc3fff4	lw	r3,-12(r30)
 1089  00001b70  00400035	movi2fp	f0,r2
 1090  00001b74  00600835	movi2fp	f1,r3
 1091  00001b78  0401000f	div	f0,f0,f1
 1092  00001b7c  00001034	movfp2i	r2,f0
 1093  00001b80  00021820	add	r3,r0,r2
 1094  00001b84  20620030	addi	r2,r3,#48
 1095  00001b88  a0220000	sb	(r1),r2
 1096  00001b8c  8fc10000	lw	r1,(r30)
 1097  00001b90  8fc3fff4	lw	r3,-12(r30)
 1098  00001b94  00200035	movi2fp	f0,r1
 1099  00001b98  00600835	movi2fp	f1,r3
 1100  00001b9c  0401000f	div	f0,f0,f1
 1101  00001ba0  00001034	movfp2i	r2,f0
 1102  00001ba4  8fc3fff4	lw	r3,-12(r30)
 1103  00001ba8  00400035	movi2fp	f0,r2
 1104  00001bac  00600835	movi2fp	f1,r3
 1105  00001bb0  0401000e	mult	f0,f0,f1
 1106  00001bb4  00001034	movfp2i	r2,f0
 1107  00001bb8  00220822	sub	r1,r1,r2
 1108  00001bbc  afc10000	sw	(r30),r1
 1109  00001bc0          	L70_LF2:
 1110  00001bc0  8fc1fff4	lw	r1,-12(r30)
 1111  00001bc4  6c220001	sgti	r2,r1,#1
 1112  00001bc8  1440000c	bnez	r2,L71_LF2
 1113  00001bcc  54000000	nop; delay slot nop
 1114  00001bd0  0800000c	j	L61_LF2
 1115  00001bd4  54000000	nop; delay slot nop
 1116  00001bd8          	L71_LF2:
 1117  00001bd8  0bffff64	j	L68_LF2
 1118  00001bdc  54000000	nop; delay slot nop
 1119  00001be0          	L69_LF2:
 1120  00001be0          	L63_LF2:
 1121  00001be0          	L61_LF2:
 1122  00001be0  8fc10004	lw	r1,4(r30)
 1123  00001be4  20020000	addi	r2,r0,(#0x0)&0xff
 1124  00001be8  a0220000	sb	(r1),r2
 1125  00001bec          	L59_LF2:
 1126  00001bec  8fa20000	lw	r2,0(r29)
 1127  00001bf0  8fa30004	lw	r3,4(r29)
 1128  00001bf4  8fdffff8	lw	r31,-8(r30)
 1129  00001bf8  001ee820	add	r29,r0,r30
 1130  00001bfc  8fdefffc	lw	r30,-4(r30)
 1131  00001c00  4be00000	jr	r31
 1132  00001c04  54000000	nop
 1133  00001c08          	.endproc _ditoa
 1134  00001c08          	.align 2
 1135  00001c08          	.proc _dstrtol
 1136  00001c08          	.global _dstrtol
 1137  00001c08          	_dstrtol:
 1138                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1139  00001c08  afbefffc	sw	-4(r29),r30; push fp
 1140  00001c0c  001df020	add	r30,r0,r29; fp = sp
 1141  00001c10  afbffff8	sw	-8(r29),r31; push ret addr
 1142  00001c14  2fbd0020	subui	r29,r29,#32; alloc local storage
 1143  00001c18  afa20000	sw	0(r29),r2
 1144  00001c1c  20010000	addi	r1,r0,#0
 1145  00001c20  afc1fff4	sw	-12(r30),r1
 1146  00001c24          	L73_LF2:
 1147  00001c24  8fc10000	lw	r1,(r30)
 1148  00001c28  90220000	lbu	r2,(r1)
 1149  00001c2c  60410020	seqi	r1,r2,#32
 1150  00001c30  14200034	bnez	r1,L75_LF2
 1151  00001c34  54000000	nop; delay slot nop
 1152  00001c38  8fc10000	lw	r1,(r30)
 1153  00001c3c  90220000	lbu	r2,(r1)
 1154  00001c40  60410009	seqi	r1,r2,#9
 1155  00001c44  14200020	bnez	r1,L75_LF2
 1156  00001c48  54000000	nop; delay slot nop
 1157  00001c4c  8fc10000	lw	r1,(r30)
 1158  00001c50  90220000	lbu	r2,(r1)
 1159  00001c54  6041000a	seqi	r1,r2,#10
 1160  00001c58  1420000c	bnez	r1,L75_LF2
 1161  00001c5c  54000000	nop; delay slot nop
 1162  00001c60  0800001c	j	L74_LF2
 1163  00001c64  54000000	nop; delay slot nop
 1164  00001c68          	L75_LF2:
 1165  00001c68  8fc20000	lw	r2,(r30)
 1166  00001c6c  20410001	addi	r1,r2,#1
 1167  00001c70  00011020	add	r2,r0,r1
 1168  00001c74  afc20000	sw	(r30),r2
 1169  00001c78  0bffffa8	j	L73_LF2
 1170  00001c7c  54000000	nop; delay slot nop
 1171  00001c80          	L74_LF2:
 1172  00001c80  8fc10004	lw	r1,4(r30)
 1173  00001c84  64220000	snei	r2,r1,#0
 1174  00001c88  10400010	beqz	r2,L76_LF2
 1175  00001c8c  54000000	nop; delay slot nop
 1176  00001c90  8fc10004	lw	r1,4(r30)
 1177  00001c94  8fc20000	lw	r2,(r30)
 1178  00001c98  ac220000	sw	(r1),r2
 1179  00001c9c          	L76_LF2:
 1180  00001c9c  8fc10000	lw	r1,(r30)
 1181  00001ca0  90220000	lbu	r2,(r1)
 1182  00001ca4  64410000	snei	r1,r2,#0
 1183  00001ca8  14200010	bnez	r1,L77_LF2
 1184  00001cac  54000000	nop; delay slot nop
 1185  00001cb0  8fc1fff4	lw	r1,-12(r30)
 1186  00001cb4  08000294	j	L72_LF2
 1187  00001cb8  54000000	nop; delay slot nop
 1188  00001cbc          	L77_LF2:
 1189  00001cbc  8fc10000	lw	r1,(r30)
 1190  00001cc0  90220000	lbu	r2,(r1)
 1191  00001cc4  6041002d	seqi	r1,r2,#45
 1192  00001cc8  10200024	beqz	r1,L78_LF2
 1193  00001ccc  54000000	nop; delay slot nop
 1194  00001cd0  2001ffff	addi	r1,r0,#-1
 1195  00001cd4  afc1ffec	sw	-20(r30),r1
 1196  00001cd8  8fc20000	lw	r2,(r30)
 1197  00001cdc  20410001	addi	r1,r2,#1
 1198  00001ce0  00011020	add	r2,r0,r1
 1199  00001ce4  afc20000	sw	(r30),r2
 1200  00001ce8  0800000c	j	L79_LF2
 1201  00001cec  54000000	nop; delay slot nop
 1202  00001cf0          	L78_LF2:
 1203  00001cf0  20010001	addi	r1,r0,#1
 1204  00001cf4  afc1ffec	sw	-20(r30),r1
 1205  00001cf8          	L79_LF2:
 1206  00001cf8  8fc10008	lw	r1,8(r30)
 1207  00001cfc  64220000	snei	r2,r1,#0
 1208  00001d00  14400090	bnez	r2,L80_LF2
 1209  00001d04  54000000	nop; delay slot nop
 1210  00001d08  8fc10000	lw	r1,(r30)
 1211  00001d0c  90220000	lbu	r2,(r1)
 1212  00001d10  60410030	seqi	r1,r2,#48
 1213  00001d14  10200074	beqz	r1,L81_LF2
 1214  00001d18  54000000	nop; delay slot nop
 1215  00001d1c  8fc20000	lw	r2,(r30)
 1216  00001d20  20410001	addi	r1,r2,#1
 1217  00001d24  00011020	add	r2,r0,r1
 1218  00001d28  afc20000	sw	(r30),r2
 1219  00001d2c  8fc10000	lw	r1,(r30)
 1220  00001d30  90220000	lbu	r2,(r1)
 1221  00001d34  60410078	seqi	r1,r2,#120
 1222  00001d38  14200020	bnez	r1,L83_LF2
 1223  00001d3c  54000000	nop; delay slot nop
 1224  00001d40  8fc10000	lw	r1,(r30)
 1225  00001d44  90220000	lbu	r2,(r1)
 1226  00001d48  60410058	seqi	r1,r2,#88
 1227  00001d4c  1420000c	bnez	r1,L83_LF2
 1228  00001d50  54000000	nop; delay slot nop
 1229  00001d54  08000024	j	L82_LF2
 1230  00001d58  54000000	nop; delay slot nop
 1231  00001d5c          	L83_LF2:
 1232  00001d5c  20010010	addi	r1,r0,#16
 1233  00001d60  afc10008	sw	8(r30),r1
 1234  00001d64  8fc20000	lw	r2,(r30)
 1235  00001d68  20410001	addi	r1,r2,#1
 1236  00001d6c  00011020	add	r2,r0,r1
 1237  00001d70  afc20000	sw	(r30),r2
 1238  00001d74  0800000c	j	L84_LF2
 1239  00001d78  54000000	nop; delay slot nop
 1240  00001d7c          	L82_LF2:
 1241  00001d7c  20010008	addi	r1,r0,#8
 1242  00001d80  afc10008	sw	8(r30),r1
 1243  00001d84          	L84_LF2:
 1244  00001d84  0800000c	j	L80_LF2
 1245  00001d88  54000000	nop; delay slot nop
 1246  00001d8c          	L81_LF2:
 1247  00001d8c  2001000a	addi	r1,r0,#10
 1248  00001d90  afc10008	sw	8(r30),r1
 1249  00001d94          	L85_LF2:
 1250  00001d94          	L80_LF2:
 1251  00001d94  8fc10008	lw	r1,8(r30)
 1252  00001d98  70220000	slei	r2,r1,#0
 1253  00001d9c  1440001c	bnez	r2,L87_LF2
 1254  00001da0  54000000	nop; delay slot nop
 1255  00001da4  8fc10008	lw	r1,8(r30)
 1256  00001da8  6c220010	sgti	r2,r1,#16
 1257  00001dac  1440000c	bnez	r2,L87_LF2
 1258  00001db0  54000000	nop; delay slot nop
 1259  00001db4  08000010	j	L86_LF2
 1260  00001db8  54000000	nop; delay slot nop
 1261  00001dbc          	L87_LF2:
 1262  00001dbc  8fc1fff4	lw	r1,-12(r30)
 1263  00001dc0  08000188	j	L72_LF2
 1264  00001dc4  54000000	nop; delay slot nop
 1265  00001dc8          	L86_LF2:
 1266  00001dc8  54000000	nop
 1267  00001dcc          	L88_LF2:
 1268  00001dcc  8fc10000	lw	r1,(r30)
 1269  00001dd0  90220000	lbu	r2,(r1)
 1270  00001dd4  6c41002f	sgtui	r1,r2,#47
 1271  00001dd8  10200030	beqz	r1,L91_LF2
 1272  00001ddc  54000000	nop; delay slot nop
 1273  00001de0  8fc10000	lw	r1,(r30)
 1274  00001de4  90220000	lbu	r2,(r1)
 1275  00001de8  70410039	sleui	r1,r2,#57
 1276  00001dec  1020001c	beqz	r1,L91_LF2
 1277  00001df0  54000000	nop; delay slot nop
 1278  00001df4  8fc10000	lw	r1,(r30)
 1279  00001df8  90220000	lbu	r2,(r1)
 1280  00001dfc  2041ffd0	addi	r1,r2,#-48
 1281  00001e00  afc1fff0	sw	-16(r30),r1
 1282  00001e04  0800008c	j	L92_LF2
 1283  00001e08  54000000	nop; delay slot nop
 1284  00001e0c          	L91_LF2:
 1285  00001e0c  8fc10000	lw	r1,(r30)
 1286  00001e10  90220000	lbu	r2,(r1)
 1287  00001e14  6c410060	sgtui	r1,r2,#96
 1288  00001e18  10200030	beqz	r1,L93_LF2
 1289  00001e1c  54000000	nop; delay slot nop
 1290  00001e20  8fc10000	lw	r1,(r30)
 1291  00001e24  90220000	lbu	r2,(r1)
 1292  00001e28  7041007a	sleui	r1,r2,#122
 1293  00001e2c  1020001c	beqz	r1,L93_LF2
 1294  00001e30  54000000	nop; delay slot nop
 1295  00001e34  8fc10000	lw	r1,(r30)
 1296  00001e38  90220000	lbu	r2,(r1)
 1297  00001e3c  2041ffa9	addi	r1,r2,#-87
 1298  00001e40  afc1fff0	sw	-16(r30),r1
 1299  00001e44  0800004c	j	L92_LF2
 1300  00001e48  54000000	nop; delay slot nop
 1301  00001e4c          	L93_LF2:
 1302  00001e4c  8fc10000	lw	r1,(r30)
 1303  00001e50  90220000	lbu	r2,(r1)
 1304  00001e54  6c410040	sgtui	r1,r2,#64
 1305  00001e58  10200030	beqz	r1,L95_LF2
 1306  00001e5c  54000000	nop; delay slot nop
 1307  00001e60  8fc10000	lw	r1,(r30)
 1308  00001e64  90220000	lbu	r2,(r1)
 1309  00001e68  7041005a	sleui	r1,r2,#90
 1310  00001e6c  1020001c	beqz	r1,L95_LF2
 1311  00001e70  54000000	nop; delay slot nop
 1312  00001e74  8fc10000	lw	r1,(r30)
 1313  00001e78  90220000	lbu	r2,(r1)
 1314  00001e7c  2041ffc9	addi	r1,r2,#-55
 1315  00001e80  afc1fff0	sw	-16(r30),r1
 1316  00001e84  0800000c	j	L92_LF2
 1317  00001e88  54000000	nop; delay slot nop
 1318  00001e8c          	L95_LF2:
 1319  00001e8c  200103e8	addi	r1,r0,#1000
 1320  00001e90  afc1fff0	sw	-16(r30),r1
 1321  00001e94          	L96_LF2:
 1322  00001e94          	L94_LF2:
 1323  00001e94          	L92_LF2:
 1324  00001e94  8fc1fff0	lw	r1,-16(r30)
 1325  00001e98  8fc20008	lw	r2,8(r30)
 1326  00001e9c  0022082a	slt	r1,r1,r2
 1327  00001ea0  10200040	beqz	r1,L90_LF2
 1328  00001ea4  54000000	nop; delay slot nop
 1329  00001ea8  8fc1fff4	lw	r1,-12(r30)
 1330  00001eac  8fc20008	lw	r2,8(r30)
 1331  00001eb0  00200035	movi2fp	f0,r1
 1332  00001eb4  00400835	movi2fp	f1,r2
 1333  00001eb8  0401000e	mult	f0,f0,f1
 1334  00001ebc  00000834	movfp2i	r1,f0
 1335  00001ec0  afc1fff4	sw	-12(r30),r1
 1336  00001ec4  8fc1fff4	lw	r1,-12(r30)
 1337  00001ec8  8fc2fff0	lw	r2,-16(r30)
 1338  00001ecc  00220820	add	r1,r1,r2
 1339  00001ed0  afc1fff4	sw	-12(r30),r1
 1340  00001ed4  8fc20000	lw	r2,(r30)
 1341  00001ed8  20410001	addi	r1,r2,#1
 1342  00001edc  00011020	add	r2,r0,r1
 1343  00001ee0  afc20000	sw	(r30),r2
 1344  00001ee4          	L97_LF2:
 1345  00001ee4          	L90_LF2:
 1346  00001ee4  8fc1fff0	lw	r1,-16(r30)
 1347  00001ee8  8fc20008	lw	r2,8(r30)
 1348  00001eec  0022082a	slt	r1,r1,r2
 1349  00001ef0  1420000c	bnez	r1,L98_LF2
 1350  00001ef4  54000000	nop; delay slot nop
 1351  00001ef8  0800000c	j	L89_LF2
 1352  00001efc  54000000	nop; delay slot nop
 1353  00001f00          	L98_LF2:
 1354  00001f00  0bfffec8	j	L88_LF2
 1355  00001f04  54000000	nop; delay slot nop
 1356  00001f08          	L89_LF2:
 1357  00001f08  8fc10004	lw	r1,4(r30)
 1358  00001f0c  64220000	snei	r2,r1,#0
 1359  00001f10  10400010	beqz	r2,L99_LF2
 1360  00001f14  54000000	nop; delay slot nop
 1361  00001f18  8fc10004	lw	r1,4(r30)
 1362  00001f1c  8fc20000	lw	r2,(r30)
 1363  00001f20  ac220000	sw	(r1),r2
 1364  00001f24          	L99_LF2:
 1365  00001f24  8fc1fff4	lw	r1,-12(r30)
 1366  00001f28  8fc2ffec	lw	r2,-20(r30)
 1367  00001f2c  00200035	movi2fp	f0,r1
 1368  00001f30  00400835	movi2fp	f1,r2
 1369  00001f34  0401000e	mult	f0,f0,f1
 1370  00001f38  00000834	movfp2i	r1,f0
 1371  00001f3c  afc1fff4	sw	-12(r30),r1
 1372  00001f40  8fc1fff4	lw	r1,-12(r30)
 1373  00001f44  08000004	j	L72_LF2
 1374  00001f48  54000000	nop; delay slot nop
 1375  00001f4c          	L72_LF2:
 1376  00001f4c  8fa20000	lw	r2,0(r29)
 1377  00001f50  8fdffff8	lw	r31,-8(r30)
 1378  00001f54  001ee820	add	r29,r0,r30
 1379  00001f58  8fdefffc	lw	r30,-4(r30)
 1380  00001f5c  4be00000	jr	r31
 1381  00001f60  54000000	nop
 1382  00001f64          	.endproc _dstrtol
 1383  00001f64          	.align 2
 1384  00001f64          	.proc _bcopy
 1385  00001f64          	.global _bcopy
 1386  00001f64          	_bcopy:
 1387                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1388  00001f64  afbefffc	sw	-4(r29),r30; push fp
 1389  00001f68  001df020	add	r30,r0,r29; fp = sp
 1390  00001f6c  afbffff8	sw	-8(r29),r31; push ret addr
 1391  00001f70  2fbd0010	subui	r29,r29,#16; alloc local storage
 1392  00001f74  afa20000	sw	0(r29),r2
 1393  00001f78  afa30004	sw	4(r29),r3
 1394  00001f7c  54000000	nop
 1395  00001f80          	L101_LF2:
 1396  00001f80  8fc10008	lw	r1,8(r30)
 1397  00001f84  2022ffff	addi	r2,r1,#-1
 1398  00001f88  afc20008	sw	8(r30),r2
 1399  00001f8c  6c210000	sgti	r1,r1,#0
 1400  00001f90  1420000c	bnez	r1,L103_LF2
 1401  00001f94  54000000	nop; delay slot nop
 1402  00001f98  0800002c	j	L102_LF2
 1403  00001f9c  54000000	nop; delay slot nop
 1404  00001fa0          	L103_LF2:
 1405  00001fa0  8fc10004	lw	r1,4(r30)
 1406  00001fa4  20220001	addi	r2,r1,#1
 1407  00001fa8  afc20004	sw	4(r30),r2
 1408  00001fac  8fc20000	lw	r2,(r30)
 1409  00001fb0  20430001	addi	r3,r2,#1
 1410  00001fb4  afc30000	sw	(r30),r3
 1411  00001fb8  80420000	lb	r2,(r2)
 1412  00001fbc  a0220000	sb	(r1),r2
 1413  00001fc0  0bffffbc	j	L101_LF2
 1414  00001fc4  54000000	nop; delay slot nop
 1415  00001fc8          	L102_LF2:
 1416  00001fc8          	L100_LF2:
 1417  00001fc8  8fa20000	lw	r2,0(r29)
 1418  00001fcc  8fa30004	lw	r3,4(r29)
 1419  00001fd0  8fdffff8	lw	r31,-8(r30)
 1420  00001fd4  001ee820	add	r29,r0,r30
 1421  00001fd8  8fdefffc	lw	r30,-4(r30)
 1422  00001fdc  4be00000	jr	r31
 1423  00001fe0  54000000	nop
 1424  00001fe4          	.endproc _bcopy
 1425  00001fe4          	.align 2
 1426  00001fe4          	.proc _bzero
 1427  00001fe4          	.global _bzero
 1428  00001fe4          	_bzero:
 1429                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1430  00001fe4  afbefffc	sw	-4(r29),r30; push fp
 1431  00001fe8  001df020	add	r30,r0,r29; fp = sp
 1432  00001fec  afbffff8	sw	-8(r29),r31; push ret addr
 1433  00001ff0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1434  00001ff4  afa20000	sw	0(r29),r2
 1435  00001ff8  54000000	nop
 1436  00001ffc          	L105_LF2:
 1437  00001ffc  8fc10004	lw	r1,4(r30)
 1438  00002000  2022ffff	addi	r2,r1,#-1
 1439  00002004  afc20004	sw	4(r30),r2
 1440  00002008  6c210000	sgti	r1,r1,#0
 1441  0000200c  1420000c	bnez	r1,L107_LF2
 1442  00002010  54000000	nop; delay slot nop
 1443  00002014  08000020	j	L106_LF2
 1444  00002018  54000000	nop; delay slot nop
 1445  0000201c          	L107_LF2:
 1446  0000201c  8fc10000	lw	r1,(r30)
 1447  00002020  20220001	addi	r2,r1,#1
 1448  00002024  afc20000	sw	(r30),r2
 1449  00002028  20020000	addi	r2,r0,(#0x0)&0xff
 1450  0000202c  a0220000	sb	(r1),r2
 1451  00002030  0bffffc8	j	L105_LF2
 1452  00002034  54000000	nop; delay slot nop
 1453  00002038          	L106_LF2:
 1454  00002038          	L104_LF2:
 1455  00002038  8fa20000	lw	r2,0(r29)
 1456  0000203c  8fdffff8	lw	r31,-8(r30)
 1457  00002040  001ee820	add	r29,r0,r30
 1458  00002044  8fdefffc	lw	r30,-4(r30)
 1459  00002048  4be00000	jr	r31
 1460  0000204c  54000000	nop
 1461  00002050          	.endproc _bzero
 1462  00002050          	.align 2
 1463  00002050          	.proc _min
 1464  00002050          	.global _min
 1465  00002050          	_min:
 1466                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1467  00002050  afbefffc	sw	-4(r29),r30; push fp
 1468  00002054  001df020	add	r30,r0,r29; fp = sp
 1469  00002058  afbffff8	sw	-8(r29),r31; push ret addr
 1470  0000205c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1471  00002060  afa20000	sw	0(r29),r2
 1472  00002064  afa30004	sw	4(r29),r3
 1473  00002068  8fc10000	lw	r1,(r30)
 1474  0000206c  8fc20004	lw	r2,4(r30)
 1475  00002070  0022182c	sle	r3,r1,r2
 1476  00002074  14600008	bnez	r3,L109_LF2
 1477  00002078  54000000	nop; delay slot nop
 1478  0000207c  8fc10004	lw	r1,4(r30)
 1479  00002080          	L109_LF2:
 1480  00002080  08000004	j	L108_LF2
 1481  00002084  54000000	nop; delay slot nop
 1482  00002088          	L108_LF2:
 1483  00002088  8fa20000	lw	r2,0(r29)
 1484  0000208c  8fa30004	lw	r3,4(r29)
 1485  00002090  8fdffff8	lw	r31,-8(r30)
 1486  00002094  001ee820	add	r29,r0,r30
 1487  00002098  8fdefffc	lw	r30,-4(r30)
 1488  0000209c  4be00000	jr	r31
 1489  000020a0  54000000	nop
 1490  000020a4          	.endproc _min
 1491  000020a4          	.align 2
 1492  000020a4          	.proc _max
 1493  000020a4          	.global _max
 1494  000020a4          	_max:
 1495                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1496  000020a4  afbefffc	sw	-4(r29),r30; push fp
 1497  000020a8  001df020	add	r30,r0,r29; fp = sp
 1498  000020ac  afbffff8	sw	-8(r29),r31; push ret addr
 1499  000020b0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1500  000020b4  afa20000	sw	0(r29),r2
 1501  000020b8  afa30004	sw	4(r29),r3
 1502  000020bc  8fc10000	lw	r1,(r30)
 1503  000020c0  8fc20004	lw	r2,4(r30)
 1504  000020c4  0022182d	sge	r3,r1,r2
 1505  000020c8  14600008	bnez	r3,L111_LF2
 1506  000020cc  54000000	nop; delay slot nop
 1507  000020d0  8fc10004	lw	r1,4(r30)
 1508  000020d4          	L111_LF2:
 1509  000020d4  08000004	j	L110_LF2
 1510  000020d8  54000000	nop; delay slot nop
 1511  000020dc          	L110_LF2:
 1512  000020dc  8fa20000	lw	r2,0(r29)
 1513  000020e0  8fa30004	lw	r3,4(r29)
 1514  000020e4  8fdffff8	lw	r31,-8(r30)
 1515  000020e8  001ee820	add	r29,r0,r30
 1516  000020ec  8fdefffc	lw	r30,-4(r30)
 1517  000020f0  4be00000	jr	r31
 1518  000020f4  54000000	nop
 1519  000020f8          	.endproc _max
 1520                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1521                      ;;;
 1522                      ;;; Most of the traps are called in files from libtraps.
 1525  000020f8          	.align 2
 1526  000020f8          	.proc _exit
 1527  000020f8          	.global _exit
 1528  000020f8          	_exit:
 1529  000020f8  44000300	trap	#0x300
 1530  000020fc  4be00000	jr	r31
 1531  00002100  54000000	nop
 1532  00002104          	.endproc _exit
 1534                      ; for the benefit of gcc.
 1535  00002104          	.proc ___main
 1536  00002104          	.global ___main
 1537  00002104          	___main:
 1538  00002104  4be00000	jr	r31
 1539  00002108  54000000	nop
 1540  0000210c          	.endproc ___main
 1541  0000210c          	.text
 1542  0000210c          	.global _etext
 1543  0000210c          	_etext:
 1544  0000210c          	.align 3
 1545  00002110          	.data
 1546  000030b8          	.global _edata
 1547  000030b8          	_edata:
