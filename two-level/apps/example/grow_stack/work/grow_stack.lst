 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 196
    4                      ; Text size: 4572
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  67726f77	.ascii "grow_stack (%d): recursive i=%d\n\000"
   82  00003004  5f737461	
   82  00003008  636b2028	
   82  0000300c  2564293a	
   82  00003010  20726563	
   82  00003014  75727369	
   82  00003018  76652069	
   82  0000301c  3d25640a	
   82  00003020  00      	
   83  00003021          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _recursive_func
   86  000010d4          	.global _recursive_func
   87  000010d4          	_recursive_func:
   88                      ;  Function 'recursive_func'; 1024 bytes of locals, 2 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0410	subui	r29,r29,#1040; alloc local storage
   93  000010e4  afa20000	sw	0(r29),r2
   94  000010e8  afa30004	sw	4(r29),r3
   95  000010ec  8fc20000	lw	r2,(r30)
   96  000010f0  0c00022c	jal	_getpid
   97  000010f4  54000000	nop; not filled.
   98  000010f8  23bdfff0	addi	r29,r29,#-16
   99  000010fc  3c030000	lhi	r3,((LC0_LF0)>>16)&0xffff
  100  00001100  24633000	addui	r3,r3,(LC0_LF0)&0xffff
  101  00001104  afa30000	sw	(r29),r3
  102  00001108  afa10004	sw	4(r29),r1
  103  0000110c  afa20008	sw	8(r29),r2
  104  00001110  0c000200	jal	_Printf
  105  00001114  54000000	nop; not filled.
  106  00001118  23bd0010	addi	r29,r29,#16
  107  0000111c  64410000	snei	r1,r2,#0
  108  00001120  1020001c	beqz	r1,L16_LF0
  109  00001124  54000000	nop; not filled.
  110  00001128  23bdfff8	addi	r29,r29,#-8
  111  0000112c  2041ffff	addi	r1,r2,#-1
  112  00001130  afa10000	sw	(r29),r1
  113  00001134  0fffff9c	jal	_recursive_func
  114  00001138  54000000	nop; not filled.
  115  0000113c  23bd0008	addi	r29,r29,#8
  116  00001140          	L16_LF0:
  117  00001140  8fa20000	lw	r2,0(r29)
  118  00001144  8fa30004	lw	r3,4(r29)
  119  00001148  8fdffff8	lw	r31,-8(r30)
  120  0000114c  001ee820	add	r29,r0,r30
  121  00001150  8fdefffc	lw	r30,-4(r30)
  122  00001154  4be00000	jr	r31
  123  00001158  54000000	nop
  124  0000115c          	.endproc _recursive_func
  125  0000115c          	.data
  126  00003021          	.align 2
  127  00003024          	LC1_LF0:
  128  00003024  67726f77	.ascii "grow_stack (%d): Start!\n\000"
  128  00003028  5f737461	
  128  0000302c  636b2028	
  128  00003030  2564293a	
  128  00003034  20537461	
  128  00003038  7274210a	
  128  0000303c  00      	
  129  0000303d          	.align 2
  130  00003040          	LC2_LF0:
  131  00003040  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
  131  00003044  653a2025	
  131  00003048  73203c68	
  131  0000304c  616e646c	
  131  00003050  655f746f	
  131  00003054  5f70726f	
  131  00003058  63735f63	
  131  0000305c  6f6d706c	
  131  00003060  65746564	
  131  00003064  5f73656d	
  131  00003068  6170686f	
  131  0000306c  72653e0a	
  131  00003070  00      	
  132  00003071          	.align 2
  133  00003074          	LC3_LF0:
  134  00003074  67726f77	.ascii "grow_stack (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  134  00003078  5f737461	
  134  0000307c  636b2028	
  134  00003080  2564293a	
  134  00003084  20426164	
  134  00003088  2073656d	
  134  0000308c  6170686f	
  134  00003090  72652073	
  134  00003094  5f70726f	
  134  00003098  63735f63	
  134  0000309c  6f6d706c	
  134  000030a0  65746564	
  134  000030a4  20282564	
  134  000030a8  29210a00	
  135  000030ac          	.align 2
  136  000030ac          	LC4_LF0:
  137  000030ac  67726f77	.ascii "grow_stack (%d): Done!\n\000"
  137  000030b0  5f737461	
  137  000030b4  636b2028	
  137  000030b8  2564293a	
  137  000030bc  20446f6e	
  137  000030c0  65210a00	
  138  000030c4          	.text
  139  0000115c          	.align 2
  140  0000115c          	.proc _main
  141  0000115c          	.global _main
  142  0000115c          	_main:
  143                      ;  Function 'main'; 1024 bytes of locals, 0 regs to save.
  144  0000115c  afbefffc	sw	-4(r29),r30; push fp
  145  00001160  001df020	add	r30,r0,r29; fp = sp
  146  00001164  afbffff8	sw	-8(r29),r31; push ret addr
  147  00001168  2fbd0408	subui	r29,r29,#1032; alloc local storage
  148  0000116c  8fc20000	lw	r2,(r30)
  149  00001170  8fc30004	lw	r3,4(r30)
  150  00001174  0c00105c	jal	___main
  151  00001178  54000000	nop; not filled.
  152  0000117c  0c0001a0	jal	_getpid
  153  00001180  54000000	nop; not filled.
  154  00001184  23bdfff8	addi	r29,r29,#-8
  155  00001188  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  156  0000118c  24843024	addui	r4,r4,(LC1_LF0)&0xffff
  157  00001190  afa40000	sw	(r29),r4
  158  00001194  afa10004	sw	4(r29),r1
  159  00001198  0c000178	jal	_Printf
  160  0000119c  54000000	nop; not filled.
  161  000011a0  23bd0008	addi	r29,r29,#8
  162  000011a4  64410002	snei	r1,r2,#2
  163  000011a8  10200028	beqz	r1,L20_LF0
  164  000011ac  54000000	nop; not filled.
  165  000011b0  23bdfff8	addi	r29,r29,#-8
  166  000011b4  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  167  000011b8  24843040	addui	r4,r4,(LC2_LF0)&0xffff
  168  000011bc  afa40000	sw	(r29),r4
  169  000011c0  0c000150	jal	_Printf
  170  000011c4  54000000	nop; not filled.
  171  000011c8  0c000250	jal	_Exit
  172  000011cc  54000000	nop; not filled.
  173  000011d0  23bd0008	addi	r29,r29,#8
  174  000011d4          	L20_LF0:
  175  000011d4  23bdfff0	addi	r29,r29,#-16
  176  000011d8  8c630004	lw	r3,4(r3)
  177  000011dc  afa30000	sw	(r29),r3
  178  000011e0  20040000	addi	r4,r0,#0
  179  000011e4  afa40004	sw	4(r29),r4
  180  000011e8  2004000a	addi	r4,r0,#10
  181  000011ec  afa40008	sw	8(r29),r4
  182  000011f0  0c000ae4	jal	_dstrtol
  183  000011f4  54000000	nop; not filled.
  184  000011f8  00011020	add	r2,r0,r1
  185  000011fc  23bd0010	addi	r29,r29,#16
  186  00001200  0c00011c	jal	_getpid
  187  00001204  54000000	nop; not filled.
  188  00001208  23bdfff0	addi	r29,r29,#-16
  189  0000120c  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  190  00001210  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  191  00001214  afa40000	sw	(r29),r4
  192  00001218  afa10004	sw	4(r29),r1
  193  0000121c  2004000a	addi	r4,r0,#10
  194  00001220  afa40008	sw	8(r29),r4
  195  00001224  0c0000ec	jal	_Printf
  196  00001228  54000000	nop; not filled.
  197  0000122c  23bd0010	addi	r29,r29,#16
  198  00001230  23bdfff8	addi	r29,r29,#-8
  199  00001234  20040009	addi	r4,r0,#9
  200  00001238  afa40000	sw	(r29),r4
  201  0000123c  0ffffe94	jal	_recursive_func
  202  00001240  54000000	nop; not filled.
  203  00001244  23bd0008	addi	r29,r29,#8
  204  00001248  23bdfff8	addi	r29,r29,#-8
  205  0000124c  afa20000	sw	(r29),r2
  206  00001250  0c000114	jal	_sem_signal
  207  00001254  54000000	nop; not filled.
  208  00001258  23bd0008	addi	r29,r29,#8
  209  0000125c  64210001	snei	r1,r1,#1
  210  00001260  10200038	beqz	r1,L24_LF0
  211  00001264  54000000	nop; not filled.
  212  00001268  0c0000b4	jal	_getpid
  213  0000126c  54000000	nop; not filled.
  214  00001270  23bdfff0	addi	r29,r29,#-16
  215  00001274  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  216  00001278  24843074	addui	r4,r4,(LC3_LF0)&0xffff
  217  0000127c  afa40000	sw	(r29),r4
  218  00001280  afa10004	sw	4(r29),r1
  219  00001284  afa20008	sw	8(r29),r2
  220  00001288  0c000088	jal	_Printf
  221  0000128c  54000000	nop; not filled.
  222  00001290  0c000188	jal	_Exit
  223  00001294  54000000	nop; not filled.
  224  00001298  23bd0010	addi	r29,r29,#16
  225  0000129c          	L24_LF0:
  226  0000129c  0c000080	jal	_getpid
  227  000012a0  54000000	nop; not filled.
  228  000012a4  23bdfff8	addi	r29,r29,#-8
  229  000012a8  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  230  000012ac  248430ac	addui	r4,r4,(LC4_LF0)&0xffff
  231  000012b0  afa40000	sw	(r29),r4
  232  000012b4  afa10004	sw	4(r29),r1
  233  000012b8  0c000058	jal	_Printf
  234  000012bc  54000000	nop; not filled.
  235  000012c0  23bd0008	addi	r29,r29,#8
  236  000012c4  0c000f00	jal	_exit
  237  000012c8  54000000	nop
  238  000012cc          	.endproc _main
  239                      ;;;
  240                      ;;; Stub functions for DLX traps.
  241                      ;;;
  242                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  243                      ;;;
  244                      ;;; The traps such as Open and Close
  245                      ;;; (note the capital letters) are for use by user programs.  The traps
  246                      ;;; with names such as open and close (lower case) are for use by the OS.
  247                      ;;;
  250  000012cc          	.align 2
  252                      ;;; The following are the traps to be used by user-level programs
  253                      ;;;
  255  000012cc          	.align 2
  256  000012cc          	.proc _Open
  257  000012cc          	.global _Open
  258  000012cc          	_Open:
  259                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  260                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  261                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  262  000012cc  44000213	trap	#0x213
  263  000012d0  4be00000	jr	r31
  264  000012d4  54000000	nop
  265  000012d8          	.endproc _Open
  267  000012d8          	.proc _Close
  268  000012d8          	.global _Close
  269  000012d8          	_Close:
  270  000012d8  44000214	trap	#0x214
  271  000012dc  4be00000	jr	r31
  272  000012e0  54000000	nop
  273  000012e4          	.endproc _Close
  275  000012e4          	.proc _Read
  276  000012e4          	.global _Read
  277  000012e4          	_Read:
  278  000012e4  44000210	trap	#0x210
  279  000012e8  4be00000	jr	r31
  280  000012ec  54000000	nop
  281  000012f0          	.endproc _Read
  283  000012f0          	.proc _Write
  284  000012f0          	.global _Write
  285  000012f0          	_Write:
  286  000012f0  44000211	trap	#0x211
  287  000012f4  4be00000	jr	r31
  288  000012f8  54000000	nop
  289  000012fc          	.endproc _Write
  291  000012fc          	.proc _Lseek
  292  000012fc          	.global _Lseek
  293  000012fc          	_Lseek:
  294  000012fc  44000212	trap	#0x212
  295  00001300  4be00000	jr	r31
  296  00001304  54000000	nop
  297  00001308          	.endproc _Lseek
  299  00001308          	.proc _Putchar
  300  00001308          	.global _Putchar
  301  00001308          	_Putchar:
  302  00001308  44000280	trap	#0x280
  303  0000130c  4be00000	jr	r31
  304  00001310  54000000	nop
  305  00001314          	.endproc _Putchar
  307  00001314          	.proc _Printf
  308  00001314          	.global _Printf
  309  00001314          	_Printf:
  310  00001314  44000201	trap	#0x201
  311  00001318  4be00000	jr	r31
  312  0000131c  54000000	nop
  313  00001320          	.endproc _Printf
  315  00001320          	.proc _getpid
  316  00001320          	.global _getpid
  317  00001320          	_getpid:
  318  00001320  44000431	trap	#0x431
  319  00001324  4be00000	jr	r31
  320  00001328  54000000	nop
  321  0000132c          	.endproc _getpid
  323  0000132c          	.proc _process_create
  324  0000132c          	.global _process_create
  325  0000132c          	_process_create:
  326  0000132c  44000432	trap	#0x432
  327  00001330  4be00000	jr	r31
  328  00001334  54000000	nop
  329  00001338          	.endproc _process_create
  331  00001338          	.proc _shmget
  332  00001338          	.global _shmget
  333  00001338          	_shmget:
  334  00001338  44000440	trap	#0x440
  335  0000133c  4be00000	jr	r31
  336  00001340  54000000	nop
  337  00001344          	.endproc _shmget
  339  00001344          	.proc _shmat
  340  00001344          	.global _shmat
  341  00001344          	_shmat:
  342  00001344  44000441	trap	#0x441
  343  00001348  4be00000	jr	r31
  344  0000134c  54000000	nop
  345  00001350          	.endproc _shmat
  347  00001350          	.proc _sem_create
  348  00001350          	.global _sem_create
  349  00001350          	_sem_create:
  350  00001350  44000450	trap	#0x450
  351  00001354  4be00000	jr	r31
  352  00001358  54000000	nop
  353  0000135c          	.endproc _sem_create
  355  0000135c          	.proc _sem_wait
  356  0000135c          	.global _sem_wait
  357  0000135c          	_sem_wait:
  358  0000135c  44000451	trap	#0x451
  359  00001360  4be00000	jr	r31
  360  00001364  54000000	nop
  361  00001368          	.endproc _sem_wait
  363  00001368          	.proc _sem_signal
  364  00001368          	.global _sem_signal
  365  00001368          	_sem_signal:
  366  00001368  44000452	trap	#0x452
  367  0000136c  4be00000	jr	r31
  368  00001370  54000000	nop
  369  00001374          	.endproc _sem_signal
  371  00001374          	.proc _lock_create
  372  00001374          	.global _lock_create
  373  00001374          	_lock_create:
  374  00001374  44000453	trap	#0x453
  375  00001378  4be00000	jr	r31
  376  0000137c  54000000	nop
  377  00001380          	.endproc _lock_create
  379  00001380          	.proc _lock_acquire
  380  00001380          	.global _lock_acquire
  381  00001380          	_lock_acquire:
  382  00001380  44000454	trap	#0x454
  383  00001384  4be00000	jr	r31
  384  00001388  54000000	nop
  385  0000138c          	.endproc _lock_acquire
  387  0000138c          	.proc _lock_release
  388  0000138c          	.global _lock_release
  389  0000138c          	_lock_release:
  390  0000138c  44000455	trap	#0x455
  391  00001390  4be00000	jr	r31
  392  00001394  54000000	nop
  393  00001398          	.endproc _lock_release
  395  00001398          	.proc _cond_create
  396  00001398          	.global _cond_create
  397  00001398          	_cond_create:
  398  00001398  44000456	trap	#0x456
  399  0000139c  4be00000	jr	r31
  400  000013a0  54000000	nop
  401  000013a4          	.endproc _cond_create
  403  000013a4          	.proc _cond_wait
  404  000013a4          	.global _cond_wait
  405  000013a4          	_cond_wait:
  406  000013a4  44000457	trap	#0x457
  407  000013a8  4be00000	jr	r31
  408  000013ac  54000000	nop
  409  000013b0          	.endproc _cond_wait
  411  000013b0          	.proc _cond_signal
  412  000013b0          	.global _cond_signal
  413  000013b0          	_cond_signal:
  414  000013b0  44000458	trap	#0x458
  415  000013b4  4be00000	jr	r31
  416  000013b8  54000000	nop
  417  000013bc          	.endproc _cond_signal
  419  000013bc          	.proc _cond_broadcast
  420  000013bc          	.global _cond_broadcast
  421  000013bc          	_cond_broadcast:
  422  000013bc  44000459	trap	#0x459
  423  000013c0  4be00000	jr	r31
  424  000013c4  54000000	nop
  425  000013c8          	.endproc _cond_broadcast
  427  000013c8          	.proc _mbox_create
  428  000013c8          	.global _mbox_create
  429  000013c8          	_mbox_create:
  430  000013c8  44000460	trap	#0x460
  431  000013cc  4be00000	jr	r31
  432  000013d0  54000000	nop
  433  000013d4          	.endproc _mbox_create
  435  000013d4          	.proc _mbox_open
  436  000013d4          	.global _mbox_open
  437  000013d4          	_mbox_open:
  438  000013d4  44000461	trap	#0x461
  439  000013d8  4be00000	jr	r31
  440  000013dc  54000000	nop
  441  000013e0          	.endproc _mbox_open
  443  000013e0          	.proc _mbox_close
  444  000013e0          	.global _mbox_close
  445  000013e0          	_mbox_close:
  446  000013e0  44000462	trap	#0x462
  447  000013e4  4be00000	jr	r31
  448  000013e8  54000000	nop
  449  000013ec          	.endproc _mbox_close
  451  000013ec          	.proc _mbox_send
  452  000013ec          	.global _mbox_send
  453  000013ec          	_mbox_send:
  454  000013ec  44000463	trap	#0x463
  455  000013f0  4be00000	jr	r31
  456  000013f4  54000000	nop
  457  000013f8          	.endproc _mbox_send
  459  000013f8          	.proc _mbox_recv
  460  000013f8          	.global _mbox_recv
  461  000013f8          	_mbox_recv:
  462  000013f8  44000464	trap	#0x464
  463  000013fc  4be00000	jr	r31
  464  00001400  54000000	nop
  465  00001404          	.endproc _mbox_recv
  467  00001404          	.proc _sleep
  468  00001404          	.global _sleep
  469  00001404          	_sleep:
  470  00001404  44000465	trap	#0x465
  471  00001408  4be00000	jr	r31
  472  0000140c  54000000	nop
  473  00001410          	.endproc _sleep
  475  00001410          	.proc _yield
  476  00001410          	.global _yield
  477  00001410          	_yield:
  478  00001410  44000466	trap	#0x466
  479  00001414  4be00000	jr	r31
  480  00001418  54000000	nop
  481  0000141c          	.endproc _yield
  484  0000141c          	.proc _Exit
  485  0000141c          	.global _Exit
  486  0000141c          	_Exit:
  487  0000141c  44000500	trap	#0x500
  488  00001420  4be00000	jr	r31
  489  00001424  54000000	nop
  490  00001428          	.endproc _Exit
  493  00001428          	.proc _malloc
  494  00001428          	.global _malloc
  495  00001428          	_malloc:
  496  00001428  44000467	trap	#0x467
  497  0000142c  4be00000	jr	r31
  498  00001430          	.endproc _malloc
  501  00001430          	.proc _mfree
  502  00001430          	.global _mfree
  503  00001430          	_mfree:
  504  00001430  44000468	trap	#0x468
  505  00001434  4be00000	jr	r31
  506  00001438          	.endproc _mfree
  507                      ; Compiled by GCC
  509  00001438          	.align 2
  510  00001438          	.proc _isspace
  511  00001438          	.global _isspace
  512  00001438          	_isspace:
  513                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  514  00001438  afbefffc	sw	-4(r29),r30; push fp
  515  0000143c  001df020	add	r30,r0,r29; fp = sp
  516  00001440  afbffff8	sw	-8(r29),r31; push ret addr
  517  00001444  2fbd0018	subui	r29,r29,#24; alloc local storage
  518  00001448  afa20000	sw	0(r29),r2
  519  0000144c  afa30004	sw	4(r29),r3
  520  00001450  afa40008	sw	8(r29),r4
  521  00001454  83c20003	lb	r2,3(r30)
  522  00001458  20010000	addi	r1,r0,#0
  523  0000145c  304300ff	andi	r3,r2,#0x00ff
  524  00001460  60640020	seqi	r4,r3,#32
  525  00001464  1480002c	bnez	r4,L3_LF2
  526  00001468  54000000	nop; delay slot nop
  527  0000146c  304300ff	andi	r3,r2,#0x00ff
  528  00001470  60640009	seqi	r4,r3,#9
  529  00001474  1480001c	bnez	r4,L3_LF2
  530  00001478  54000000	nop; delay slot nop
  531  0000147c  304300ff	andi	r3,r2,#0x00ff
  532  00001480  6064000a	seqi	r4,r3,#10
  533  00001484  1480000c	bnez	r4,L3_LF2
  534  00001488  54000000	nop; delay slot nop
  535  0000148c  08000008	j	L2_LF2
  536  00001490  54000000	nop; delay slot nop
  537  00001494          	L3_LF2:
  538  00001494  20010001	addi	r1,r0,#1
  539  00001498          	L2_LF2:
  540  00001498  08000004	j	L1_LF2
  541  0000149c  54000000	nop; delay slot nop
  542  000014a0          	L1_LF2:
  543  000014a0  8fa20000	lw	r2,0(r29)
  544  000014a4  8fa30004	lw	r3,4(r29)
  545  000014a8  8fa40008	lw	r4,8(r29)
  546  000014ac  8fdffff8	lw	r31,-8(r30)
  547  000014b0  001ee820	add	r29,r0,r30
  548  000014b4  8fdefffc	lw	r30,-4(r30)
  549  000014b8  4be00000	jr	r31
  550  000014bc  54000000	nop
  551  000014c0          	.endproc _isspace
  552  000014c0          	.align 2
  553  000014c0          	.proc _isxdigit
  554  000014c0          	.global _isxdigit
  555  000014c0          	_isxdigit:
  556                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  557  000014c0  afbefffc	sw	-4(r29),r30; push fp
  558  000014c4  001df020	add	r30,r0,r29; fp = sp
  559  000014c8  afbffff8	sw	-8(r29),r31; push ret addr
  560  000014cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  561  000014d0  afa20000	sw	0(r29),r2
  562  000014d4  afa30004	sw	4(r29),r3
  563  000014d8  afa40008	sw	8(r29),r4
  564  000014dc  83c20003	lb	r2,3(r30)
  565  000014e0  20010000	addi	r1,r0,#0
  566  000014e4  304300ff	andi	r3,r2,#0x00ff
  567  000014e8  6c64002f	sgtui	r4,r3,#47
  568  000014ec  1080001c	beqz	r4,L7_LF2
  569  000014f0  54000000	nop; delay slot nop
  570  000014f4  304300ff	andi	r3,r2,#0x00ff
  571  000014f8  70640039	sleui	r4,r3,#57
  572  000014fc  1480005c	bnez	r4,L6_LF2
  573  00001500  54000000	nop; delay slot nop
  574  00001504  08000004	j	L7_LF2
  575  00001508  54000000	nop; delay slot nop
  576  0000150c          	L7_LF2:
  577  0000150c  304300ff	andi	r3,r2,#0x00ff
  578  00001510  6c640060	sgtui	r4,r3,#96
  579  00001514  1080001c	beqz	r4,L8_LF2
  580  00001518  54000000	nop; delay slot nop
  581  0000151c  304300ff	andi	r3,r2,#0x00ff
  582  00001520  70640066	sleui	r4,r3,#102
  583  00001524  14800034	bnez	r4,L6_LF2
  584  00001528  54000000	nop; delay slot nop
  585  0000152c  08000004	j	L8_LF2
  586  00001530  54000000	nop; delay slot nop
  587  00001534          	L8_LF2:
  588  00001534  304300ff	andi	r3,r2,#0x00ff
  589  00001538  6c640040	sgtui	r4,r3,#64
  590  0000153c  10800020	beqz	r4,L5_LF2
  591  00001540  54000000	nop; delay slot nop
  592  00001544  304300ff	andi	r3,r2,#0x00ff
  593  00001548  70640041	sleui	r4,r3,#65
  594  0000154c  1480000c	bnez	r4,L6_LF2
  595  00001550  54000000	nop; delay slot nop
  596  00001554  08000008	j	L5_LF2
  597  00001558  54000000	nop; delay slot nop
  598  0000155c          	L6_LF2:
  599  0000155c  20010001	addi	r1,r0,#1
  600  00001560          	L5_LF2:
  601  00001560  08000004	j	L4_LF2
  602  00001564  54000000	nop; delay slot nop
  603  00001568          	L4_LF2:
  604  00001568  8fa20000	lw	r2,0(r29)
  605  0000156c  8fa30004	lw	r3,4(r29)
  606  00001570  8fa40008	lw	r4,8(r29)
  607  00001574  8fdffff8	lw	r31,-8(r30)
  608  00001578  001ee820	add	r29,r0,r30
  609  0000157c  8fdefffc	lw	r30,-4(r30)
  610  00001580  4be00000	jr	r31
  611  00001584  54000000	nop
  612  00001588          	.endproc _isxdigit
  613  00001588          	.align 2
  614  00001588          	.proc _dstrcpy
  615  00001588          	.global _dstrcpy
  616  00001588          	_dstrcpy:
  617                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  618  00001588  afbefffc	sw	-4(r29),r30; push fp
  619  0000158c  001df020	add	r30,r0,r29; fp = sp
  620  00001590  afbffff8	sw	-8(r29),r31; push ret addr
  621  00001594  2fbd0018	subui	r29,r29,#24; alloc local storage
  622  00001598  afa20000	sw	0(r29),r2
  623  0000159c  afa30004	sw	4(r29),r3
  624  000015a0  8fc10000	lw	r1,(r30)
  625  000015a4  afc1fff4	sw	-12(r30),r1
  626  000015a8          	L10_LF2:
  627  000015a8  8fc10000	lw	r1,(r30)
  628  000015ac  20220001	addi	r2,r1,#1
  629  000015b0  afc20000	sw	(r30),r2
  630  000015b4  8fc20004	lw	r2,4(r30)
  631  000015b8  20430001	addi	r3,r2,#1
  632  000015bc  afc30004	sw	4(r30),r3
  633  000015c0  80420000	lb	r2,(r2)
  634  000015c4  a0220000	sb	(r1),r2
  635  000015c8  a3c2fff3	sb	-13(r30),r2
  636  000015cc          	L12_LF2:
  637  000015cc  93c1fff3	lbu	r1,-13(r30)
  638  000015d0  64220000	snei	r2,r1,#0
  639  000015d4  1440000c	bnez	r2,L13_LF2
  640  000015d8  54000000	nop; delay slot nop
  641  000015dc  0800000c	j	L11_LF2
  642  000015e0  54000000	nop; delay slot nop
  643  000015e4          	L13_LF2:
  644  000015e4  0bffffc0	j	L10_LF2
  645  000015e8  54000000	nop; delay slot nop
  646  000015ec          	L11_LF2:
  647  000015ec  8fc1fff4	lw	r1,-12(r30)
  648  000015f0  08000004	j	L9_LF2
  649  000015f4  54000000	nop; delay slot nop
  650  000015f8          	L9_LF2:
  651  000015f8  8fa20000	lw	r2,0(r29)
  652  000015fc  8fa30004	lw	r3,4(r29)
  653  00001600  8fdffff8	lw	r31,-8(r30)
  654  00001604  001ee820	add	r29,r0,r30
  655  00001608  8fdefffc	lw	r30,-4(r30)
  656  0000160c  4be00000	jr	r31
  657  00001610  54000000	nop
  658  00001614          	.endproc _dstrcpy
  659  00001614          	.align 2
  660  00001614          	.proc _dstrncpy
  661  00001614          	.global _dstrncpy
  662  00001614          	_dstrncpy:
  663                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  664  00001614  afbefffc	sw	-4(r29),r30; push fp
  665  00001618  001df020	add	r30,r0,r29; fp = sp
  666  0000161c  afbffff8	sw	-8(r29),r31; push ret addr
  667  00001620  2fbd0018	subui	r29,r29,#24; alloc local storage
  668  00001624  afa20000	sw	0(r29),r2
  669  00001628  afa30004	sw	4(r29),r3
  670  0000162c  8fc10000	lw	r1,(r30)
  671  00001630  afc1fff4	sw	-12(r30),r1
  672  00001634          	L15_LF2:
  673  00001634  8fc10008	lw	r1,8(r30)
  674  00001638  2022ffff	addi	r2,r1,#-1
  675  0000163c  afc20008	sw	8(r30),r2
  676  00001640  70210000	slei	r1,r1,#0
  677  00001644  1020000c	beqz	r1,L18_LF2
  678  00001648  54000000	nop; delay slot nop
  679  0000164c  08000048	j	L16_LF2
  680  00001650  54000000	nop; delay slot nop
  681  00001654          	L18_LF2:
  682  00001654  8fc10000	lw	r1,(r30)
  683  00001658  20220001	addi	r2,r1,#1
  684  0000165c  afc20000	sw	(r30),r2
  685  00001660  8fc20004	lw	r2,4(r30)
  686  00001664  20430001	addi	r3,r2,#1
  687  00001668  afc30004	sw	4(r30),r3
  688  0000166c  80420000	lb	r2,(r2)
  689  00001670  a0220000	sb	(r1),r2
  690  00001674  a3c2fff3	sb	-13(r30),r2
  691  00001678          	L17_LF2:
  692  00001678  93c1fff3	lbu	r1,-13(r30)
  693  0000167c  64220000	snei	r2,r1,#0
  694  00001680  1440000c	bnez	r2,L19_LF2
  695  00001684  54000000	nop; delay slot nop
  696  00001688  0800000c	j	L16_LF2
  697  0000168c  54000000	nop; delay slot nop
  698  00001690          	L19_LF2:
  699  00001690  0bffffa0	j	L15_LF2
  700  00001694  54000000	nop; delay slot nop
  701  00001698          	L16_LF2:
  702  00001698  8fc1fff4	lw	r1,-12(r30)
  703  0000169c  08000004	j	L14_LF2
  704  000016a0  54000000	nop; delay slot nop
  705  000016a4          	L14_LF2:
  706  000016a4  8fa20000	lw	r2,0(r29)
  707  000016a8  8fa30004	lw	r3,4(r29)
  708  000016ac  8fdffff8	lw	r31,-8(r30)
  709  000016b0  001ee820	add	r29,r0,r30
  710  000016b4  8fdefffc	lw	r30,-4(r30)
  711  000016b8  4be00000	jr	r31
  712  000016bc  54000000	nop
  713  000016c0          	.endproc _dstrncpy
  714  000016c0          	.align 2
  715  000016c0          	.proc _dstrcat
  716  000016c0          	.global _dstrcat
  717  000016c0          	_dstrcat:
  718                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  719  000016c0  afbefffc	sw	-4(r29),r30; push fp
  720  000016c4  001df020	add	r30,r0,r29; fp = sp
  721  000016c8  afbffff8	sw	-8(r29),r31; push ret addr
  722  000016cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  723  000016d0  afa20000	sw	0(r29),r2
  724  000016d4  8fc10000	lw	r1,(r30)
  725  000016d8  afc1fff4	sw	-12(r30),r1
  726  000016dc          	L21_LF2:
  727  000016dc  8fc10000	lw	r1,(r30)
  728  000016e0  90220000	lbu	r2,(r1)
  729  000016e4  64410000	snei	r1,r2,#0
  730  000016e8  1420000c	bnez	r1,L23_LF2
  731  000016ec  54000000	nop; delay slot nop
  732  000016f0  0800001c	j	L22_LF2
  733  000016f4  54000000	nop; delay slot nop
  734  000016f8          	L23_LF2:
  735  000016f8  8fc20000	lw	r2,(r30)
  736  000016fc  20410001	addi	r1,r2,#1
  737  00001700  00011020	add	r2,r0,r1
  738  00001704  afc20000	sw	(r30),r2
  739  00001708  0bffffd0	j	L21_LF2
  740  0000170c  54000000	nop; delay slot nop
  741  00001710          	L22_LF2:
  742  00001710  23bdfff8	addi	r29,r29,#-8
  743  00001714  001d0820	add	r1,r0,r29
  744  00001718  8fc20000	lw	r2,(r30)
  745  0000171c  ac220000	sw	(r1),r2
  746  00001720  8fc20004	lw	r2,4(r30)
  747  00001724  ac220004	sw	4(r1),r2
  748  00001728  0ffffe5c	jal	_dstrcpy
  749  0000172c  54000000	nop; delay slot nop
  750  00001730  23bd0008	addi	r29,r29,#8
  751  00001734  8fc1fff4	lw	r1,-12(r30)
  752  00001738  08000004	j	L20_LF2
  753  0000173c  54000000	nop; delay slot nop
  754  00001740          	L20_LF2:
  755  00001740  8fa20000	lw	r2,0(r29)
  756  00001744  8fdffff8	lw	r31,-8(r30)
  757  00001748  001ee820	add	r29,r0,r30
  758  0000174c  8fdefffc	lw	r30,-4(r30)
  759  00001750  4be00000	jr	r31
  760  00001754  54000000	nop
  761  00001758          	.endproc _dstrcat
  762  00001758          	.align 2
  763  00001758          	.proc _dstrncmp
  764  00001758          	.global _dstrncmp
  765  00001758          	_dstrncmp:
  766                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  767  00001758  afbefffc	sw	-4(r29),r30; push fp
  768  0000175c  001df020	add	r30,r0,r29; fp = sp
  769  00001760  afbffff8	sw	-8(r29),r31; push ret addr
  770  00001764  2fbd0018	subui	r29,r29,#24; alloc local storage
  771  00001768  afa20000	sw	0(r29),r2
  772  0000176c  afa30004	sw	4(r29),r3
  773  00001770  54000000	nop
  774  00001774  20010000	addi	r1,r0,#0
  775  00001778  afc1fff4	sw	-12(r30),r1
  776  0000177c          	L25_LF2:
  777  0000177c  8fc1fff4	lw	r1,-12(r30)
  778  00001780  8fc20008	lw	r2,8(r30)
  779  00001784  0022082a	slt	r1,r1,r2
  780  00001788  1420000c	bnez	r1,L28_LF2
  781  0000178c  54000000	nop; delay slot nop
  782  00001790  08000088	j	L26_LF2
  783  00001794  54000000	nop; delay slot nop
  784  00001798          	L28_LF2:
  785  00001798  8fc10004	lw	r1,4(r30)
  786  0000179c  90220000	lbu	r2,(r1)
  787  000017a0  64410000	snei	r1,r2,#0
  788  000017a4  14200018	bnez	r1,L29_LF2
  789  000017a8  54000000	nop; delay slot nop
  790  000017ac  20010000	addi	r1,r0,#0
  791  000017b0  080000d8	j	L24_LF2
  792  000017b4  54000000	nop; delay slot nop
  793  000017b8  08000028	j	L30_LF2
  794  000017bc  54000000	nop; delay slot nop
  795  000017c0          	L29_LF2:
  796  000017c0  8fc10000	lw	r1,(r30)
  797  000017c4  8fc20004	lw	r2,4(r30)
  798  000017c8  90210000	lbu	r1,(r1)
  799  000017cc  90420000	lbu	r2,(r2)
  800  000017d0  00220829	sne	r1,r1,r2
  801  000017d4  1020000c	beqz	r1,L30_LF2
  802  000017d8  54000000	nop; delay slot nop
  803  000017dc  0800003c	j	L26_LF2
  804  000017e0  54000000	nop; delay slot nop
  805  000017e4          	L31_LF2:
  806  000017e4          	L30_LF2:
  807  000017e4  8fc20000	lw	r2,(r30)
  808  000017e8  20410001	addi	r1,r2,#1
  809  000017ec  00011020	add	r2,r0,r1
  810  000017f0  afc20000	sw	(r30),r2
  811  000017f4  8fc20004	lw	r2,4(r30)
  812  000017f8  20410001	addi	r1,r2,#1
  813  000017fc  00011020	add	r2,r0,r1
  814  00001800  afc20004	sw	4(r30),r2
  815  00001804          	L27_LF2:
  816  00001804  8fc2fff4	lw	r2,-12(r30)
  817  00001808  20410001	addi	r1,r2,#1
  818  0000180c  00011020	add	r2,r0,r1
  819  00001810  afc2fff4	sw	-12(r30),r2
  820  00001814  0bffff64	j	L25_LF2
  821  00001818  54000000	nop; delay slot nop
  822  0000181c          	L26_LF2:
  823  0000181c  8fc1fff4	lw	r1,-12(r30)
  824  00001820  8fc20008	lw	r2,8(r30)
  825  00001824  00220828	seq	r1,r1,r2
  826  00001828  10200018	beqz	r1,L32_LF2
  827  0000182c  54000000	nop; delay slot nop
  828  00001830  20010000	addi	r1,r0,#0
  829  00001834  08000054	j	L24_LF2
  830  00001838  54000000	nop; delay slot nop
  831  0000183c  0800004c	j	L33_LF2
  832  00001840  54000000	nop; delay slot nop
  833  00001844          	L32_LF2:
  834  00001844  8fc20000	lw	r2,(r30)
  835  00001848  90410000	lbu	r1,(r2)
  836  0000184c  8fc20004	lw	r2,4(r30)
  837  00001850  90430000	lbu	r3,(r2)
  838  00001854  00230822	sub	r1,r1,r3
  839  00001858  74220000	sgei	r2,r1,#0
  840  0000185c  10400020	beqz	r2,L34_LF2
  841  00001860  54000000	nop; delay slot nop
  842  00001864  8fc10000	lw	r1,(r30)
  843  00001868  8fc20004	lw	r2,4(r30)
  844  0000186c  90210000	lbu	r1,(r1)
  845  00001870  90420000	lbu	r2,(r2)
  846  00001874  00220829	sne	r1,r1,r2
  847  00001878  08000008	j	L35_LF2
  848  0000187c  54000000	nop; delay slot nop
  849  00001880          	L34_LF2:
  850  00001880  2001ffff	addi	r1,r0,#-1
  851  00001884          	L35_LF2:
  852  00001884  08000004	j	L24_LF2
  853  00001888  54000000	nop; delay slot nop
  854  0000188c          	L33_LF2:
  855  0000188c          	L24_LF2:
  856  0000188c  8fa20000	lw	r2,0(r29)
  857  00001890  8fa30004	lw	r3,4(r29)
  858  00001894  8fdffff8	lw	r31,-8(r30)
  859  00001898  001ee820	add	r29,r0,r30
  860  0000189c  8fdefffc	lw	r30,-4(r30)
  861  000018a0  4be00000	jr	r31
  862  000018a4  54000000	nop
  863  000018a8          	.endproc _dstrncmp
  864  000018a8          	.align 2
  865  000018a8          	.proc _dstrlen
  866  000018a8          	.global _dstrlen
  867  000018a8          	_dstrlen:
  868                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  869  000018a8  afbefffc	sw	-4(r29),r30; push fp
  870  000018ac  001df020	add	r30,r0,r29; fp = sp
  871  000018b0  afbffff8	sw	-8(r29),r31; push ret addr
  872  000018b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  873  000018b8  afa20000	sw	0(r29),r2
  874  000018bc  20010000	addi	r1,r0,#0
  875  000018c0  afc1fff4	sw	-12(r30),r1
  876  000018c4          	L37_LF2:
  877  000018c4  8fc10000	lw	r1,(r30)
  878  000018c8  20220001	addi	r2,r1,#1
  879  000018cc  afc20000	sw	(r30),r2
  880  000018d0  90210000	lbu	r1,(r1)
  881  000018d4  64220000	snei	r2,r1,#0
  882  000018d8  1440000c	bnez	r2,L39_LF2
  883  000018dc  54000000	nop; delay slot nop
  884  000018e0  0800001c	j	L38_LF2
  885  000018e4  54000000	nop; delay slot nop
  886  000018e8          	L39_LF2:
  887  000018e8  8fc2fff4	lw	r2,-12(r30)
  888  000018ec  20410001	addi	r1,r2,#1
  889  000018f0  00011020	add	r2,r0,r1
  890  000018f4  afc2fff4	sw	-12(r30),r2
  891  000018f8  0bffffc8	j	L37_LF2
  892  000018fc  54000000	nop; delay slot nop
  893  00001900          	L38_LF2:
  894  00001900  8fc1fff4	lw	r1,-12(r30)
  895  00001904  08000004	j	L36_LF2
  896  00001908  54000000	nop; delay slot nop
  897  0000190c          	L36_LF2:
  898  0000190c  8fa20000	lw	r2,0(r29)
  899  00001910  8fdffff8	lw	r31,-8(r30)
  900  00001914  001ee820	add	r29,r0,r30
  901  00001918  8fdefffc	lw	r30,-4(r30)
  902  0000191c  4be00000	jr	r31
  903  00001920  54000000	nop
  904  00001924          	.endproc _dstrlen
  905  00001924          	.align 2
  906  00001924          	.proc _dstrstr
  907  00001924          	.global _dstrstr
  908  00001924          	_dstrstr:
  909                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  910  00001924  afbefffc	sw	-4(r29),r30; push fp
  911  00001928  001df020	add	r30,r0,r29; fp = sp
  912  0000192c  afbffff8	sw	-8(r29),r31; push ret addr
  913  00001930  2fbd0018	subui	r29,r29,#24; alloc local storage
  914  00001934  afa20000	sw	0(r29),r2
  915  00001938  23bdfff8	addi	r29,r29,#-8
  916  0000193c  001d0820	add	r1,r0,r29
  917  00001940  8fc20004	lw	r2,4(r30)
  918  00001944  ac220000	sw	(r1),r2
  919  00001948  0fffff5c	jal	_dstrlen
  920  0000194c  54000000	nop; delay slot nop
  921  00001950  23bd0008	addi	r29,r29,#8
  922  00001954  afc1fff4	sw	-12(r30),r1
  923  00001958          	L41_LF2:
  924  00001958  8fc10000	lw	r1,(r30)
  925  0000195c  90220000	lbu	r2,(r1)
  926  00001960  64410000	snei	r1,r2,#0
  927  00001964  1420000c	bnez	r1,L43_LF2
  928  00001968  54000000	nop; delay slot nop
  929  0000196c  08000060	j	L42_LF2
  930  00001970  54000000	nop; delay slot nop
  931  00001974          	L43_LF2:
  932  00001974  23bdfff0	addi	r29,r29,#-16
  933  00001978  001d0820	add	r1,r0,r29
  934  0000197c  8fc20000	lw	r2,(r30)
  935  00001980  ac220000	sw	(r1),r2
  936  00001984  8fc20004	lw	r2,4(r30)
  937  00001988  ac220004	sw	4(r1),r2
  938  0000198c  8fc2fff4	lw	r2,-12(r30)
  939  00001990  ac220008	sw	8(r1),r2
  940  00001994  0ffffdc0	jal	_dstrncmp
  941  00001998  54000000	nop; delay slot nop
  942  0000199c  23bd0010	addi	r29,r29,#16
  943  000019a0  64220000	snei	r2,r1,#0
  944  000019a4  14400010	bnez	r2,L44_LF2
  945  000019a8  54000000	nop; delay slot nop
  946  000019ac  8fc10000	lw	r1,(r30)
  947  000019b0  08000028	j	L40_LF2
  948  000019b4  54000000	nop; delay slot nop
  949  000019b8          	L44_LF2:
  950  000019b8  8fc20000	lw	r2,(r30)
  951  000019bc  20410001	addi	r1,r2,#1
  952  000019c0  00011020	add	r2,r0,r1
  953  000019c4  afc20000	sw	(r30),r2
  954  000019c8  0bffff8c	j	L41_LF2
  955  000019cc  54000000	nop; delay slot nop
  956  000019d0          	L42_LF2:
  957  000019d0  20010000	addi	r1,r0,#0
  958  000019d4  08000004	j	L40_LF2
  959  000019d8  54000000	nop; delay slot nop
  960  000019dc          	L40_LF2:
  961  000019dc  8fa20000	lw	r2,0(r29)
  962  000019e0  8fdffff8	lw	r31,-8(r30)
  963  000019e4  001ee820	add	r29,r0,r30
  964  000019e8  8fdefffc	lw	r30,-4(r30)
  965  000019ec  4be00000	jr	r31
  966  000019f0  54000000	nop
  967  000019f4          	.endproc _dstrstr
  968  000019f4          	.align 2
  969  000019f4          	.proc _dmindex
  970  000019f4          	.global _dmindex
  971  000019f4          	_dmindex:
  972                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  973  000019f4  afbefffc	sw	-4(r29),r30; push fp
  974  000019f8  001df020	add	r30,r0,r29; fp = sp
  975  000019fc  afbffff8	sw	-8(r29),r31; push ret addr
  976  00001a00  2fbd0018	subui	r29,r29,#24; alloc local storage
  977  00001a04  afa20000	sw	0(r29),r2
  978  00001a08  54000000	nop
  979  00001a0c          	L46_LF2:
  980  00001a0c  8fc10000	lw	r1,(r30)
  981  00001a10  90220000	lbu	r2,(r1)
  982  00001a14  64410000	snei	r1,r2,#0
  983  00001a18  1420000c	bnez	r1,L48_LF2
  984  00001a1c  54000000	nop; delay slot nop
  985  00001a20  08000070	j	L47_LF2
  986  00001a24  54000000	nop; delay slot nop
  987  00001a28          	L48_LF2:
  988  00001a28  8fc10004	lw	r1,4(r30)
  989  00001a2c  afc1fff4	sw	-12(r30),r1
  990  00001a30          	L49_LF2:
  991  00001a30  8fc1fff4	lw	r1,-12(r30)
  992  00001a34  90220000	lbu	r2,(r1)
  993  00001a38  64410000	snei	r1,r2,#0
  994  00001a3c  1420000c	bnez	r1,L52_LF2
  995  00001a40  54000000	nop; delay slot nop
  996  00001a44  08000044	j	L50_LF2
  997  00001a48  54000000	nop; delay slot nop
  998  00001a4c          	L52_LF2:
  999  00001a4c  8fc10000	lw	r1,(r30)
 1000  00001a50  8fc2fff4	lw	r2,-12(r30)
 1001  00001a54  90210000	lbu	r1,(r1)
 1002  00001a58  90420000	lbu	r2,(r2)
 1003  00001a5c  00220828	seq	r1,r1,r2
 1004  00001a60  10200010	beqz	r1,L51_LF2
 1005  00001a64  54000000	nop; delay slot nop
 1006  00001a68  8fc10000	lw	r1,(r30)
 1007  00001a6c  08000030	j	L45_LF2
 1008  00001a70  54000000	nop; delay slot nop
 1009  00001a74          	L53_LF2:
 1010  00001a74          	L51_LF2:
 1011  00001a74  8fc2fff4	lw	r2,-12(r30)
 1012  00001a78  20410001	addi	r1,r2,#1
 1013  00001a7c  00011020	add	r2,r0,r1
 1014  00001a80  afc2fff4	sw	-12(r30),r2
 1015  00001a84  0bffffa8	j	L49_LF2
 1016  00001a88  54000000	nop; delay slot nop
 1017  00001a8c          	L50_LF2:
 1018  00001a8c  0bffff7c	j	L46_LF2
 1019  00001a90  54000000	nop; delay slot nop
 1020  00001a94          	L47_LF2:
 1021  00001a94  20010000	addi	r1,r0,#0
 1022  00001a98  08000004	j	L45_LF2
 1023  00001a9c  54000000	nop; delay slot nop
 1024  00001aa0          	L45_LF2:
 1025  00001aa0  8fa20000	lw	r2,0(r29)
 1026  00001aa4  8fdffff8	lw	r31,-8(r30)
 1027  00001aa8  001ee820	add	r29,r0,r30
 1028  00001aac  8fdefffc	lw	r30,-4(r30)
 1029  00001ab0  4be00000	jr	r31
 1030  00001ab4  54000000	nop
 1031  00001ab8          	.endproc _dmindex
 1032  00001ab8          	.align 2
 1033  00001ab8          	.proc _dindex
 1034  00001ab8          	.global _dindex
 1035  00001ab8          	_dindex:
 1036                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1037  00001ab8  afbefffc	sw	-4(r29),r30; push fp
 1038  00001abc  001df020	add	r30,r0,r29; fp = sp
 1039  00001ac0  afbffff8	sw	-8(r29),r31; push ret addr
 1040  00001ac4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1041  00001ac8  afa20000	sw	0(r29),r2
 1042  00001acc  54000000	nop
 1043  00001ad0          	L55_LF2:
 1044  00001ad0  8fc10000	lw	r1,(r30)
 1045  00001ad4  90220000	lbu	r2,(r1)
 1046  00001ad8  64410000	snei	r1,r2,#0
 1047  00001adc  1420000c	bnez	r1,L57_LF2
 1048  00001ae0  54000000	nop; delay slot nop
 1049  00001ae4  08000040	j	L56_LF2
 1050  00001ae8  54000000	nop; delay slot nop
 1051  00001aec          	L57_LF2:
 1052  00001aec  8fc10000	lw	r1,(r30)
 1053  00001af0  90220000	lbu	r2,(r1)
 1054  00001af4  8fc10004	lw	r1,4(r30)
 1055  00001af8  00411028	seq	r2,r2,r1
 1056  00001afc  10400010	beqz	r2,L58_LF2
 1057  00001b00  54000000	nop; delay slot nop
 1058  00001b04  8fc10000	lw	r1,(r30)
 1059  00001b08  08000028	j	L54_LF2
 1060  00001b0c  54000000	nop; delay slot nop
 1061  00001b10          	L58_LF2:
 1062  00001b10  8fc20000	lw	r2,(r30)
 1063  00001b14  20410001	addi	r1,r2,#1
 1064  00001b18  00011020	add	r2,r0,r1
 1065  00001b1c  afc20000	sw	(r30),r2
 1066  00001b20  0bffffac	j	L55_LF2
 1067  00001b24  54000000	nop; delay slot nop
 1068  00001b28          	L56_LF2:
 1069  00001b28  20010000	addi	r1,r0,#0
 1070  00001b2c  08000004	j	L54_LF2
 1071  00001b30  54000000	nop; delay slot nop
 1072  00001b34          	L54_LF2:
 1073  00001b34  8fa20000	lw	r2,0(r29)
 1074  00001b38  8fdffff8	lw	r31,-8(r30)
 1075  00001b3c  001ee820	add	r29,r0,r30
 1076  00001b40  8fdefffc	lw	r30,-4(r30)
 1077  00001b44  4be00000	jr	r31
 1078  00001b48  54000000	nop
 1079  00001b4c          	.endproc _dindex
 1080  00001b4c          	.align 2
 1081  00001b4c          	.proc _ditoa
 1082  00001b4c          	.global _ditoa
 1083  00001b4c          	_ditoa:
 1084                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1085  00001b4c  afbefffc	sw	-4(r29),r30; push fp
 1086  00001b50  001df020	add	r30,r0,r29; fp = sp
 1087  00001b54  afbffff8	sw	-8(r29),r31; push ret addr
 1088  00001b58  2fbd0018	subui	r29,r29,#24; alloc local storage
 1089  00001b5c  afa20000	sw	0(r29),r2
 1090  00001b60  afa30004	sw	4(r29),r3
 1091  00001b64  8fc10000	lw	r1,(r30)
 1092  00001b68  68220000	slti	r2,r1,#0
 1093  00001b6c  1040002c	beqz	r2,L60_LF2
 1094  00001b70  54000000	nop; delay slot nop
 1095  00001b74  8fc10004	lw	r1,4(r30)
 1096  00001b78  20220001	addi	r2,r1,#1
 1097  00001b7c  afc20004	sw	4(r30),r2
 1098  00001b80  2002002d	addi	r2,r0,(#0x2d)&0xff
 1099  00001b84  a0220000	sb	(r1),r2
 1100  00001b88  8fc10000	lw	r1,(r30)
 1101  00001b8c  00011022	sub	r2,r0,r1
 1102  00001b90  afc20000	sw	(r30),r2
 1103  00001b94  08000118	j	L61_LF2
 1104  00001b98  54000000	nop; delay slot nop
 1105  00001b9c          	L60_LF2:
 1106  00001b9c  8fc10000	lw	r1,(r30)
 1107  00001ba0  64220000	snei	r2,r1,#0
 1108  00001ba4  14400020	bnez	r2,L62_LF2
 1109  00001ba8  54000000	nop; delay slot nop
 1110  00001bac  8fc10004	lw	r1,4(r30)
 1111  00001bb0  20220001	addi	r2,r1,#1
 1112  00001bb4  afc20004	sw	4(r30),r2
 1113  00001bb8  20020030	addi	r2,r0,(#0x30)&0xff
 1114  00001bbc  a0220000	sb	(r1),r2
 1115  00001bc0  080000ec	j	L61_LF2
 1116  00001bc4  54000000	nop; delay slot nop
 1117  00001bc8          	L62_LF2:
 1118  00001bc8  20010001	addi	r1,r0,#1
 1119  00001bcc  afc1fff4	sw	-12(r30),r1
 1120  00001bd0          	L64_LF2:
 1121  00001bd0  8fc1fff4	lw	r1,-12(r30)
 1122  00001bd4  8fc20000	lw	r2,(r30)
 1123  00001bd8  0022082c	sle	r1,r1,r2
 1124  00001bdc  1420000c	bnez	r1,L66_LF2
 1125  00001be0  54000000	nop; delay slot nop
 1126  00001be4  08000024	j	L65_LF2
 1127  00001be8  54000000	nop; delay slot nop
 1128  00001bec          	L67_LF2:
 1129  00001bec          	L66_LF2:
 1130  00001bec  8fc1fff4	lw	r1,-12(r30)
 1131  00001bf0  00011820	add	r3,r0,r1
 1132  00001bf4  50620002	slli	r2,r3,#0x2
 1133  00001bf8  00411020	add	r2,r2,r1
 1134  00001bfc  50410001	slli	r1,r2,#0x1
 1135  00001c00  afc1fff4	sw	-12(r30),r1
 1136  00001c04  0bffffc8	j	L64_LF2
 1137  00001c08  54000000	nop; delay slot nop
 1138  00001c0c          	L65_LF2:
 1139  00001c0c  54000000	nop
 1140  00001c10          	L68_LF2:
 1141  00001c10  8fc1fff4	lw	r1,-12(r30)
 1142  00001c14  2002000a	addi	r2,r0,#10
 1143  00001c18  00200035	movi2fp	f0,r1
 1144  00001c1c  00400835	movi2fp	f1,r2
 1145  00001c20  0401000f	div	f0,f0,f1
 1146  00001c24  00000834	movfp2i	r1,f0
 1147  00001c28  afc1fff4	sw	-12(r30),r1
 1148  00001c2c  8fc10004	lw	r1,4(r30)
 1149  00001c30  20220001	addi	r2,r1,#1
 1150  00001c34  afc20004	sw	4(r30),r2
 1151  00001c38  8fc20000	lw	r2,(r30)
 1152  00001c3c  8fc3fff4	lw	r3,-12(r30)
 1153  00001c40  00400035	movi2fp	f0,r2
 1154  00001c44  00600835	movi2fp	f1,r3
 1155  00001c48  0401000f	div	f0,f0,f1
 1156  00001c4c  00001034	movfp2i	r2,f0
 1157  00001c50  00021820	add	r3,r0,r2
 1158  00001c54  20620030	addi	r2,r3,#48
 1159  00001c58  a0220000	sb	(r1),r2
 1160  00001c5c  8fc10000	lw	r1,(r30)
 1161  00001c60  8fc3fff4	lw	r3,-12(r30)
 1162  00001c64  00200035	movi2fp	f0,r1
 1163  00001c68  00600835	movi2fp	f1,r3
 1164  00001c6c  0401000f	div	f0,f0,f1
 1165  00001c70  00001034	movfp2i	r2,f0
 1166  00001c74  8fc3fff4	lw	r3,-12(r30)
 1167  00001c78  00400035	movi2fp	f0,r2
 1168  00001c7c  00600835	movi2fp	f1,r3
 1169  00001c80  0401000e	mult	f0,f0,f1
 1170  00001c84  00001034	movfp2i	r2,f0
 1171  00001c88  00220822	sub	r1,r1,r2
 1172  00001c8c  afc10000	sw	(r30),r1
 1173  00001c90          	L70_LF2:
 1174  00001c90  8fc1fff4	lw	r1,-12(r30)
 1175  00001c94  6c220001	sgti	r2,r1,#1
 1176  00001c98  1440000c	bnez	r2,L71_LF2
 1177  00001c9c  54000000	nop; delay slot nop
 1178  00001ca0  0800000c	j	L61_LF2
 1179  00001ca4  54000000	nop; delay slot nop
 1180  00001ca8          	L71_LF2:
 1181  00001ca8  0bffff64	j	L68_LF2
 1182  00001cac  54000000	nop; delay slot nop
 1183  00001cb0          	L69_LF2:
 1184  00001cb0          	L63_LF2:
 1185  00001cb0          	L61_LF2:
 1186  00001cb0  8fc10004	lw	r1,4(r30)
 1187  00001cb4  20020000	addi	r2,r0,(#0x0)&0xff
 1188  00001cb8  a0220000	sb	(r1),r2
 1189  00001cbc          	L59_LF2:
 1190  00001cbc  8fa20000	lw	r2,0(r29)
 1191  00001cc0  8fa30004	lw	r3,4(r29)
 1192  00001cc4  8fdffff8	lw	r31,-8(r30)
 1193  00001cc8  001ee820	add	r29,r0,r30
 1194  00001ccc  8fdefffc	lw	r30,-4(r30)
 1195  00001cd0  4be00000	jr	r31
 1196  00001cd4  54000000	nop
 1197  00001cd8          	.endproc _ditoa
 1198  00001cd8          	.align 2
 1199  00001cd8          	.proc _dstrtol
 1200  00001cd8          	.global _dstrtol
 1201  00001cd8          	_dstrtol:
 1202                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1203  00001cd8  afbefffc	sw	-4(r29),r30; push fp
 1204  00001cdc  001df020	add	r30,r0,r29; fp = sp
 1205  00001ce0  afbffff8	sw	-8(r29),r31; push ret addr
 1206  00001ce4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1207  00001ce8  afa20000	sw	0(r29),r2
 1208  00001cec  20010000	addi	r1,r0,#0
 1209  00001cf0  afc1fff4	sw	-12(r30),r1
 1210  00001cf4          	L73_LF2:
 1211  00001cf4  8fc10000	lw	r1,(r30)
 1212  00001cf8  90220000	lbu	r2,(r1)
 1213  00001cfc  60410020	seqi	r1,r2,#32
 1214  00001d00  14200034	bnez	r1,L75_LF2
 1215  00001d04  54000000	nop; delay slot nop
 1216  00001d08  8fc10000	lw	r1,(r30)
 1217  00001d0c  90220000	lbu	r2,(r1)
 1218  00001d10  60410009	seqi	r1,r2,#9
 1219  00001d14  14200020	bnez	r1,L75_LF2
 1220  00001d18  54000000	nop; delay slot nop
 1221  00001d1c  8fc10000	lw	r1,(r30)
 1222  00001d20  90220000	lbu	r2,(r1)
 1223  00001d24  6041000a	seqi	r1,r2,#10
 1224  00001d28  1420000c	bnez	r1,L75_LF2
 1225  00001d2c  54000000	nop; delay slot nop
 1226  00001d30  0800001c	j	L74_LF2
 1227  00001d34  54000000	nop; delay slot nop
 1228  00001d38          	L75_LF2:
 1229  00001d38  8fc20000	lw	r2,(r30)
 1230  00001d3c  20410001	addi	r1,r2,#1
 1231  00001d40  00011020	add	r2,r0,r1
 1232  00001d44  afc20000	sw	(r30),r2
 1233  00001d48  0bffffa8	j	L73_LF2
 1234  00001d4c  54000000	nop; delay slot nop
 1235  00001d50          	L74_LF2:
 1236  00001d50  8fc10004	lw	r1,4(r30)
 1237  00001d54  64220000	snei	r2,r1,#0
 1238  00001d58  10400010	beqz	r2,L76_LF2
 1239  00001d5c  54000000	nop; delay slot nop
 1240  00001d60  8fc10004	lw	r1,4(r30)
 1241  00001d64  8fc20000	lw	r2,(r30)
 1242  00001d68  ac220000	sw	(r1),r2
 1243  00001d6c          	L76_LF2:
 1244  00001d6c  8fc10000	lw	r1,(r30)
 1245  00001d70  90220000	lbu	r2,(r1)
 1246  00001d74  64410000	snei	r1,r2,#0
 1247  00001d78  14200010	bnez	r1,L77_LF2
 1248  00001d7c  54000000	nop; delay slot nop
 1249  00001d80  8fc1fff4	lw	r1,-12(r30)
 1250  00001d84  08000294	j	L72_LF2
 1251  00001d88  54000000	nop; delay slot nop
 1252  00001d8c          	L77_LF2:
 1253  00001d8c  8fc10000	lw	r1,(r30)
 1254  00001d90  90220000	lbu	r2,(r1)
 1255  00001d94  6041002d	seqi	r1,r2,#45
 1256  00001d98  10200024	beqz	r1,L78_LF2
 1257  00001d9c  54000000	nop; delay slot nop
 1258  00001da0  2001ffff	addi	r1,r0,#-1
 1259  00001da4  afc1ffec	sw	-20(r30),r1
 1260  00001da8  8fc20000	lw	r2,(r30)
 1261  00001dac  20410001	addi	r1,r2,#1
 1262  00001db0  00011020	add	r2,r0,r1
 1263  00001db4  afc20000	sw	(r30),r2
 1264  00001db8  0800000c	j	L79_LF2
 1265  00001dbc  54000000	nop; delay slot nop
 1266  00001dc0          	L78_LF2:
 1267  00001dc0  20010001	addi	r1,r0,#1
 1268  00001dc4  afc1ffec	sw	-20(r30),r1
 1269  00001dc8          	L79_LF2:
 1270  00001dc8  8fc10008	lw	r1,8(r30)
 1271  00001dcc  64220000	snei	r2,r1,#0
 1272  00001dd0  14400090	bnez	r2,L80_LF2
 1273  00001dd4  54000000	nop; delay slot nop
 1274  00001dd8  8fc10000	lw	r1,(r30)
 1275  00001ddc  90220000	lbu	r2,(r1)
 1276  00001de0  60410030	seqi	r1,r2,#48
 1277  00001de4  10200074	beqz	r1,L81_LF2
 1278  00001de8  54000000	nop; delay slot nop
 1279  00001dec  8fc20000	lw	r2,(r30)
 1280  00001df0  20410001	addi	r1,r2,#1
 1281  00001df4  00011020	add	r2,r0,r1
 1282  00001df8  afc20000	sw	(r30),r2
 1283  00001dfc  8fc10000	lw	r1,(r30)
 1284  00001e00  90220000	lbu	r2,(r1)
 1285  00001e04  60410078	seqi	r1,r2,#120
 1286  00001e08  14200020	bnez	r1,L83_LF2
 1287  00001e0c  54000000	nop; delay slot nop
 1288  00001e10  8fc10000	lw	r1,(r30)
 1289  00001e14  90220000	lbu	r2,(r1)
 1290  00001e18  60410058	seqi	r1,r2,#88
 1291  00001e1c  1420000c	bnez	r1,L83_LF2
 1292  00001e20  54000000	nop; delay slot nop
 1293  00001e24  08000024	j	L82_LF2
 1294  00001e28  54000000	nop; delay slot nop
 1295  00001e2c          	L83_LF2:
 1296  00001e2c  20010010	addi	r1,r0,#16
 1297  00001e30  afc10008	sw	8(r30),r1
 1298  00001e34  8fc20000	lw	r2,(r30)
 1299  00001e38  20410001	addi	r1,r2,#1
 1300  00001e3c  00011020	add	r2,r0,r1
 1301  00001e40  afc20000	sw	(r30),r2
 1302  00001e44  0800000c	j	L84_LF2
 1303  00001e48  54000000	nop; delay slot nop
 1304  00001e4c          	L82_LF2:
 1305  00001e4c  20010008	addi	r1,r0,#8
 1306  00001e50  afc10008	sw	8(r30),r1
 1307  00001e54          	L84_LF2:
 1308  00001e54  0800000c	j	L80_LF2
 1309  00001e58  54000000	nop; delay slot nop
 1310  00001e5c          	L81_LF2:
 1311  00001e5c  2001000a	addi	r1,r0,#10
 1312  00001e60  afc10008	sw	8(r30),r1
 1313  00001e64          	L85_LF2:
 1314  00001e64          	L80_LF2:
 1315  00001e64  8fc10008	lw	r1,8(r30)
 1316  00001e68  70220000	slei	r2,r1,#0
 1317  00001e6c  1440001c	bnez	r2,L87_LF2
 1318  00001e70  54000000	nop; delay slot nop
 1319  00001e74  8fc10008	lw	r1,8(r30)
 1320  00001e78  6c220010	sgti	r2,r1,#16
 1321  00001e7c  1440000c	bnez	r2,L87_LF2
 1322  00001e80  54000000	nop; delay slot nop
 1323  00001e84  08000010	j	L86_LF2
 1324  00001e88  54000000	nop; delay slot nop
 1325  00001e8c          	L87_LF2:
 1326  00001e8c  8fc1fff4	lw	r1,-12(r30)
 1327  00001e90  08000188	j	L72_LF2
 1328  00001e94  54000000	nop; delay slot nop
 1329  00001e98          	L86_LF2:
 1330  00001e98  54000000	nop
 1331  00001e9c          	L88_LF2:
 1332  00001e9c  8fc10000	lw	r1,(r30)
 1333  00001ea0  90220000	lbu	r2,(r1)
 1334  00001ea4  6c41002f	sgtui	r1,r2,#47
 1335  00001ea8  10200030	beqz	r1,L91_LF2
 1336  00001eac  54000000	nop; delay slot nop
 1337  00001eb0  8fc10000	lw	r1,(r30)
 1338  00001eb4  90220000	lbu	r2,(r1)
 1339  00001eb8  70410039	sleui	r1,r2,#57
 1340  00001ebc  1020001c	beqz	r1,L91_LF2
 1341  00001ec0  54000000	nop; delay slot nop
 1342  00001ec4  8fc10000	lw	r1,(r30)
 1343  00001ec8  90220000	lbu	r2,(r1)
 1344  00001ecc  2041ffd0	addi	r1,r2,#-48
 1345  00001ed0  afc1fff0	sw	-16(r30),r1
 1346  00001ed4  0800008c	j	L92_LF2
 1347  00001ed8  54000000	nop; delay slot nop
 1348  00001edc          	L91_LF2:
 1349  00001edc  8fc10000	lw	r1,(r30)
 1350  00001ee0  90220000	lbu	r2,(r1)
 1351  00001ee4  6c410060	sgtui	r1,r2,#96
 1352  00001ee8  10200030	beqz	r1,L93_LF2
 1353  00001eec  54000000	nop; delay slot nop
 1354  00001ef0  8fc10000	lw	r1,(r30)
 1355  00001ef4  90220000	lbu	r2,(r1)
 1356  00001ef8  7041007a	sleui	r1,r2,#122
 1357  00001efc  1020001c	beqz	r1,L93_LF2
 1358  00001f00  54000000	nop; delay slot nop
 1359  00001f04  8fc10000	lw	r1,(r30)
 1360  00001f08  90220000	lbu	r2,(r1)
 1361  00001f0c  2041ffa9	addi	r1,r2,#-87
 1362  00001f10  afc1fff0	sw	-16(r30),r1
 1363  00001f14  0800004c	j	L92_LF2
 1364  00001f18  54000000	nop; delay slot nop
 1365  00001f1c          	L93_LF2:
 1366  00001f1c  8fc10000	lw	r1,(r30)
 1367  00001f20  90220000	lbu	r2,(r1)
 1368  00001f24  6c410040	sgtui	r1,r2,#64
 1369  00001f28  10200030	beqz	r1,L95_LF2
 1370  00001f2c  54000000	nop; delay slot nop
 1371  00001f30  8fc10000	lw	r1,(r30)
 1372  00001f34  90220000	lbu	r2,(r1)
 1373  00001f38  7041005a	sleui	r1,r2,#90
 1374  00001f3c  1020001c	beqz	r1,L95_LF2
 1375  00001f40  54000000	nop; delay slot nop
 1376  00001f44  8fc10000	lw	r1,(r30)
 1377  00001f48  90220000	lbu	r2,(r1)
 1378  00001f4c  2041ffc9	addi	r1,r2,#-55
 1379  00001f50  afc1fff0	sw	-16(r30),r1
 1380  00001f54  0800000c	j	L92_LF2
 1381  00001f58  54000000	nop; delay slot nop
 1382  00001f5c          	L95_LF2:
 1383  00001f5c  200103e8	addi	r1,r0,#1000
 1384  00001f60  afc1fff0	sw	-16(r30),r1
 1385  00001f64          	L96_LF2:
 1386  00001f64          	L94_LF2:
 1387  00001f64          	L92_LF2:
 1388  00001f64  8fc1fff0	lw	r1,-16(r30)
 1389  00001f68  8fc20008	lw	r2,8(r30)
 1390  00001f6c  0022082a	slt	r1,r1,r2
 1391  00001f70  10200040	beqz	r1,L90_LF2
 1392  00001f74  54000000	nop; delay slot nop
 1393  00001f78  8fc1fff4	lw	r1,-12(r30)
 1394  00001f7c  8fc20008	lw	r2,8(r30)
 1395  00001f80  00200035	movi2fp	f0,r1
 1396  00001f84  00400835	movi2fp	f1,r2
 1397  00001f88  0401000e	mult	f0,f0,f1
 1398  00001f8c  00000834	movfp2i	r1,f0
 1399  00001f90  afc1fff4	sw	-12(r30),r1
 1400  00001f94  8fc1fff4	lw	r1,-12(r30)
 1401  00001f98  8fc2fff0	lw	r2,-16(r30)
 1402  00001f9c  00220820	add	r1,r1,r2
 1403  00001fa0  afc1fff4	sw	-12(r30),r1
 1404  00001fa4  8fc20000	lw	r2,(r30)
 1405  00001fa8  20410001	addi	r1,r2,#1
 1406  00001fac  00011020	add	r2,r0,r1
 1407  00001fb0  afc20000	sw	(r30),r2
 1408  00001fb4          	L97_LF2:
 1409  00001fb4          	L90_LF2:
 1410  00001fb4  8fc1fff0	lw	r1,-16(r30)
 1411  00001fb8  8fc20008	lw	r2,8(r30)
 1412  00001fbc  0022082a	slt	r1,r1,r2
 1413  00001fc0  1420000c	bnez	r1,L98_LF2
 1414  00001fc4  54000000	nop; delay slot nop
 1415  00001fc8  0800000c	j	L89_LF2
 1416  00001fcc  54000000	nop; delay slot nop
 1417  00001fd0          	L98_LF2:
 1418  00001fd0  0bfffec8	j	L88_LF2
 1419  00001fd4  54000000	nop; delay slot nop
 1420  00001fd8          	L89_LF2:
 1421  00001fd8  8fc10004	lw	r1,4(r30)
 1422  00001fdc  64220000	snei	r2,r1,#0
 1423  00001fe0  10400010	beqz	r2,L99_LF2
 1424  00001fe4  54000000	nop; delay slot nop
 1425  00001fe8  8fc10004	lw	r1,4(r30)
 1426  00001fec  8fc20000	lw	r2,(r30)
 1427  00001ff0  ac220000	sw	(r1),r2
 1428  00001ff4          	L99_LF2:
 1429  00001ff4  8fc1fff4	lw	r1,-12(r30)
 1430  00001ff8  8fc2ffec	lw	r2,-20(r30)
 1431  00001ffc  00200035	movi2fp	f0,r1
 1432  00002000  00400835	movi2fp	f1,r2
 1433  00002004  0401000e	mult	f0,f0,f1
 1434  00002008  00000834	movfp2i	r1,f0
 1435  0000200c  afc1fff4	sw	-12(r30),r1
 1436  00002010  8fc1fff4	lw	r1,-12(r30)
 1437  00002014  08000004	j	L72_LF2
 1438  00002018  54000000	nop; delay slot nop
 1439  0000201c          	L72_LF2:
 1440  0000201c  8fa20000	lw	r2,0(r29)
 1441  00002020  8fdffff8	lw	r31,-8(r30)
 1442  00002024  001ee820	add	r29,r0,r30
 1443  00002028  8fdefffc	lw	r30,-4(r30)
 1444  0000202c  4be00000	jr	r31
 1445  00002030  54000000	nop
 1446  00002034          	.endproc _dstrtol
 1447  00002034          	.align 2
 1448  00002034          	.proc _bcopy
 1449  00002034          	.global _bcopy
 1450  00002034          	_bcopy:
 1451                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1452  00002034  afbefffc	sw	-4(r29),r30; push fp
 1453  00002038  001df020	add	r30,r0,r29; fp = sp
 1454  0000203c  afbffff8	sw	-8(r29),r31; push ret addr
 1455  00002040  2fbd0010	subui	r29,r29,#16; alloc local storage
 1456  00002044  afa20000	sw	0(r29),r2
 1457  00002048  afa30004	sw	4(r29),r3
 1458  0000204c  54000000	nop
 1459  00002050          	L101_LF2:
 1460  00002050  8fc10008	lw	r1,8(r30)
 1461  00002054  2022ffff	addi	r2,r1,#-1
 1462  00002058  afc20008	sw	8(r30),r2
 1463  0000205c  6c210000	sgti	r1,r1,#0
 1464  00002060  1420000c	bnez	r1,L103_LF2
 1465  00002064  54000000	nop; delay slot nop
 1466  00002068  0800002c	j	L102_LF2
 1467  0000206c  54000000	nop; delay slot nop
 1468  00002070          	L103_LF2:
 1469  00002070  8fc10004	lw	r1,4(r30)
 1470  00002074  20220001	addi	r2,r1,#1
 1471  00002078  afc20004	sw	4(r30),r2
 1472  0000207c  8fc20000	lw	r2,(r30)
 1473  00002080  20430001	addi	r3,r2,#1
 1474  00002084  afc30000	sw	(r30),r3
 1475  00002088  80420000	lb	r2,(r2)
 1476  0000208c  a0220000	sb	(r1),r2
 1477  00002090  0bffffbc	j	L101_LF2
 1478  00002094  54000000	nop; delay slot nop
 1479  00002098          	L102_LF2:
 1480  00002098          	L100_LF2:
 1481  00002098  8fa20000	lw	r2,0(r29)
 1482  0000209c  8fa30004	lw	r3,4(r29)
 1483  000020a0  8fdffff8	lw	r31,-8(r30)
 1484  000020a4  001ee820	add	r29,r0,r30
 1485  000020a8  8fdefffc	lw	r30,-4(r30)
 1486  000020ac  4be00000	jr	r31
 1487  000020b0  54000000	nop
 1488  000020b4          	.endproc _bcopy
 1489  000020b4          	.align 2
 1490  000020b4          	.proc _bzero
 1491  000020b4          	.global _bzero
 1492  000020b4          	_bzero:
 1493                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1494  000020b4  afbefffc	sw	-4(r29),r30; push fp
 1495  000020b8  001df020	add	r30,r0,r29; fp = sp
 1496  000020bc  afbffff8	sw	-8(r29),r31; push ret addr
 1497  000020c0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1498  000020c4  afa20000	sw	0(r29),r2
 1499  000020c8  54000000	nop
 1500  000020cc          	L105_LF2:
 1501  000020cc  8fc10004	lw	r1,4(r30)
 1502  000020d0  2022ffff	addi	r2,r1,#-1
 1503  000020d4  afc20004	sw	4(r30),r2
 1504  000020d8  6c210000	sgti	r1,r1,#0
 1505  000020dc  1420000c	bnez	r1,L107_LF2
 1506  000020e0  54000000	nop; delay slot nop
 1507  000020e4  08000020	j	L106_LF2
 1508  000020e8  54000000	nop; delay slot nop
 1509  000020ec          	L107_LF2:
 1510  000020ec  8fc10000	lw	r1,(r30)
 1511  000020f0  20220001	addi	r2,r1,#1
 1512  000020f4  afc20000	sw	(r30),r2
 1513  000020f8  20020000	addi	r2,r0,(#0x0)&0xff
 1514  000020fc  a0220000	sb	(r1),r2
 1515  00002100  0bffffc8	j	L105_LF2
 1516  00002104  54000000	nop; delay slot nop
 1517  00002108          	L106_LF2:
 1518  00002108          	L104_LF2:
 1519  00002108  8fa20000	lw	r2,0(r29)
 1520  0000210c  8fdffff8	lw	r31,-8(r30)
 1521  00002110  001ee820	add	r29,r0,r30
 1522  00002114  8fdefffc	lw	r30,-4(r30)
 1523  00002118  4be00000	jr	r31
 1524  0000211c  54000000	nop
 1525  00002120          	.endproc _bzero
 1526  00002120          	.align 2
 1527  00002120          	.proc _min
 1528  00002120          	.global _min
 1529  00002120          	_min:
 1530                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1531  00002120  afbefffc	sw	-4(r29),r30; push fp
 1532  00002124  001df020	add	r30,r0,r29; fp = sp
 1533  00002128  afbffff8	sw	-8(r29),r31; push ret addr
 1534  0000212c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1535  00002130  afa20000	sw	0(r29),r2
 1536  00002134  afa30004	sw	4(r29),r3
 1537  00002138  8fc10000	lw	r1,(r30)
 1538  0000213c  8fc20004	lw	r2,4(r30)
 1539  00002140  0022182c	sle	r3,r1,r2
 1540  00002144  14600008	bnez	r3,L109_LF2
 1541  00002148  54000000	nop; delay slot nop
 1542  0000214c  8fc10004	lw	r1,4(r30)
 1543  00002150          	L109_LF2:
 1544  00002150  08000004	j	L108_LF2
 1545  00002154  54000000	nop; delay slot nop
 1546  00002158          	L108_LF2:
 1547  00002158  8fa20000	lw	r2,0(r29)
 1548  0000215c  8fa30004	lw	r3,4(r29)
 1549  00002160  8fdffff8	lw	r31,-8(r30)
 1550  00002164  001ee820	add	r29,r0,r30
 1551  00002168  8fdefffc	lw	r30,-4(r30)
 1552  0000216c  4be00000	jr	r31
 1553  00002170  54000000	nop
 1554  00002174          	.endproc _min
 1555  00002174          	.align 2
 1556  00002174          	.proc _max
 1557  00002174          	.global _max
 1558  00002174          	_max:
 1559                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1560  00002174  afbefffc	sw	-4(r29),r30; push fp
 1561  00002178  001df020	add	r30,r0,r29; fp = sp
 1562  0000217c  afbffff8	sw	-8(r29),r31; push ret addr
 1563  00002180  2fbd0010	subui	r29,r29,#16; alloc local storage
 1564  00002184  afa20000	sw	0(r29),r2
 1565  00002188  afa30004	sw	4(r29),r3
 1566  0000218c  8fc10000	lw	r1,(r30)
 1567  00002190  8fc20004	lw	r2,4(r30)
 1568  00002194  0022182d	sge	r3,r1,r2
 1569  00002198  14600008	bnez	r3,L111_LF2
 1570  0000219c  54000000	nop; delay slot nop
 1571  000021a0  8fc10004	lw	r1,4(r30)
 1572  000021a4          	L111_LF2:
 1573  000021a4  08000004	j	L110_LF2
 1574  000021a8  54000000	nop; delay slot nop
 1575  000021ac          	L110_LF2:
 1576  000021ac  8fa20000	lw	r2,0(r29)
 1577  000021b0  8fa30004	lw	r3,4(r29)
 1578  000021b4  8fdffff8	lw	r31,-8(r30)
 1579  000021b8  001ee820	add	r29,r0,r30
 1580  000021bc  8fdefffc	lw	r30,-4(r30)
 1581  000021c0  4be00000	jr	r31
 1582  000021c4  54000000	nop
 1583  000021c8          	.endproc _max
 1584                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1585                      ;;;
 1586                      ;;; Most of the traps are called in files from libtraps.
 1589  000021c8          	.align 2
 1590  000021c8          	.proc _exit
 1591  000021c8          	.global _exit
 1592  000021c8          	_exit:
 1593  000021c8  44000300	trap	#0x300
 1594  000021cc  4be00000	jr	r31
 1595  000021d0  54000000	nop
 1596  000021d4          	.endproc _exit
 1598                      ; for the benefit of gcc.
 1599  000021d4          	.proc ___main
 1600  000021d4          	.global ___main
 1601  000021d4          	___main:
 1602  000021d4  4be00000	jr	r31
 1603  000021d8  54000000	nop
 1604  000021dc          	.endproc ___main
 1605  000021dc          	.text
 1606  000021dc          	.global _etext
 1607  000021dc          	_etext:
 1608  000021dc          	.align 3
 1609  000021e0          	.data
 1610  000030c4          	.global _edata
 1611  000030c4          	_edata:
